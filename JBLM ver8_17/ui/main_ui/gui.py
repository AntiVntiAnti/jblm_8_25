# Form implementation generated from reading ui file 'JBLMA_24.ui'
#
# Created by: PyQt6 UI code generator 6.7.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(325, 338)
        MainWindow.setStyleSheet("QWidget {\n"
"    font: 10pt \"Helvetica\";\n"
"    background:#121212;\n"
"    color:rgb(255,255,255);\n"
"}\n"
"\n"
"#sleep_tableview,\n"
"#total_hours_slept_tableview,\n"
"#woke_up_like_tableview,\n"
"#sleep_quality_tableview,\n"
"#diet_table,\n"
"#hydration_table,\n"
"#shower_table,\n"
"#teethbrushed_table,\n"
"#yoga_table {\n"
"background-color: transparent;\n"
"selection-background-color: #7e57c2;\n"
"gridline-color:transparent;\n"
"color:#fff;\n"
"}\n"
"#sleep_tableview::item,\n"
"#total_hours_slept_tableview::item,\n"
"#woke_up_like_tableview::item,\n"
"#sleep_quality_tableview::item,\n"
"#diet_table::item,\n"
"#hydration_table::item,\n"
"#shower_table::item,\n"
"#teethbrushed_table::item,\n"
"#yoga_table::item {\n"
"padding: 1px;\n"
"background:rgb(132,127,239);\n"
"}\n"
"#sleep_tableview::item:selected,\n"
"#total_hours_slept_tableview::item:selected,\n"
"#woke_up_like_tableview::item:selected,\n"
"#sleep_quality_tableview::item:selected,\n"
"#diet_table::item:selected,\n"
"#hydration_table::item:selected,\n"
"#shower_table::item:selected,\n"
"#teethbrushed_table::item:selected,\n"
"#yoga_table::item:selected {\n"
"color:#fff;\n"
"background:rgb(132,127,239);\n"
"}\n"
"\n"
"\n"
"/* /////////////////////////////////////////////////////////////////////////////\n"
"QTextEdit\n"
"///////////////////////////////////////////////////////////////////////////// */\n"
"QTextEdit {\n"
"    border:none;\n"
"    font-size: 13pt;\n"
"}\n"
"\n"
"/* /////////////////////////////////////////////////////////////////////////////\n"
"QToolTip\n"
"///////////////////////////////////////////////////////////////////////////// */\n"
"QToolTip {\n"
"    background: rgba(12, 12, 12,50);\n"
"    border: 1px solid  rgb(129, 179, 234);\n"
"    border-radius: 5px;\n"
"    padding:4px;\n"
"    text-align: left;\n"
"    color: rgb(255, 255, 255);\n"
"}\n"
"\n"
"/* /////////////////////////////////////////////////////////////////////////////\n"
"QTimeEdit, QDoubleSpinBox, QSpinBox\n"
"///////////////////////////////////////////////////////////////////////////// */\n"
"QDoubleSpinBox,\n"
"QSpinBox {\n"
"    border:none;\n"
"}\n"
"\n"
"/* /////////////////////////////////////////////////////////////////////////////\n"
"QLabel\n"
"///////////////////////////////////////////////////////////////////////////// */\n"
"QLabel {\n"
"    background:transparent;\n"
"}\n"
"\n"
"/* /////////////////////////////////////////////////////////////////////////////\n"
"QComboBox\n"
"///////////////////////////////////////////////////////////////////////////// */\n"
"QComboBox {\n"
"    background-color: transparent; border:1px inset rgb(28,32,23); border-radius:2px; padding: 3px;\n"
"}\n"
"\n"
"/* /////////////////////////////////////////////////////////////////////////////\n"
"#lily_mood_entry_date, #lily_diet_date, #lily_walk_date\n"
"///////////////////////////////////////////////////////////////////////////// */\n"
"#lily_diet_delete_btn,\n"
"#lily_mood_delete_btn,\n"
"#lily_walk_delete_btn {\n"
"    border:none;\n"
"    image: url(:/icons/UpdatedIcons/lily_d_norm.png);\n"
"    max-width:20px;\n"
"    min-width:20px;\n"
"    max-height:20px;\n"
"    min-height:20px;\n"
"}\n"
"#lily_diet_delete_btn:hover,\n"
"#lily_mood_delete_btn:hover,\n"
"#lily_walk_delete_btn:hover {\n"
"    image: url(:/icons/UpdatedIcons/lily_c_hover.png);\n"
"}\n"
"#lily_diet_delete_btn:pressed,\n"
"#lily_mood_delete_btn:pressed,\n"
"#lily_walk_delete_btn:pressed {\n"
"    image: url(:/icons/UpdatedIcons/lily_d_press.png);\n"
"}\n"
"\n"
"#lily_mood_entry_date,\n"
"#lily_diet_date,\n"
"#lily_walk_date {\n"
"    color:rgb(200,170,200);\n"
"}\n"
"\n"
"#lily_mood_entry_date:focus,\n"
"#lily_diet_date:focus,\n"
"#lily_walk_date:focus {\n"
"    color:#fff;\n"
"}\n"
"\n"
"/* ------------------------------------------------- \n"
"    Data // TableView nav btn frame\n"
"-------------------------------------------------  */\n"
"#lilys_data_nav_btn_frame > QPushButton {\n"
"    border-radius:3px;\n"
"    padding:2px 4px;\n"
"    border:none;\n"
"    color:#fff;\n"
"    min-width:35px;\n"
"    max-width:35px;\n"
"    min-height:35px;\n"
"    max-height:35px;\n"
"    background:transparent;\n"
"}\n"
"\n"
"#lilys_data_nav_btn_frame > QPushButton:hover {\n"
"    color:#fff;\n"
"    font-size:11pt;\n"
"    margin-top:2px;\n"
"    margin-left:2px;\n"
"    background:transparent;\n"
"    /*background-color:rgb(255,255,255); */\n"
"}\n"
"\n"
"#lilys_data_nav_btn_frame > QPushButton:checked {\n"
"    font-weight:bold;\n"
"    margin:0px;\n"
"     background:transparent;\n"
"    color:#fff;\n"
"}\n"
"\n"
"#lilys_data_nav_btn_frame > QPushButton:pressed {\n"
"    background:transparent;\n"
"    font-weight:bold;\n"
"    font-size:12pt;\n"
"    margin:0px;\n"
"    color:#fff;\n"
"}\n"
"\n"
"#lilys_data_nav_btn_frame > QPushButton:checked:hover {\n"
"    font-weight:bold;\n"
"    margin:0px;\n"
"    color:#fff;\n"
"    background:transparent;\n"
"}\n"
"\n"
"#lilys_data_nav_btn_frame > QPushButton:checked:pressed {\n"
"background:transparent;\n"
"    font-weight:bold;\n"
"    margin:0px;\n"
"    color:#fff;\n"
"}\n"
"\n"
"#lily_walk_btn,\n"
"#lily_walk_btn_2,\n"
"#lily_walk_btn_3 {\n"
"    border:none;\n"
"    max-width:35px;\n"
"    min-width:35px;\n"
"    max-height:35px;\n"
"    min-height:35px;\n"
"    image: url(:/icons/UpdatedIcons/lily_w_norm.png);\n"
"}\n"
"\n"
"#lily_walk_btn:hover,\n"
"#lily_walk_btn_2:hover,\n"
"#lily_walk_btn_3:hover {\n"
"    image: url(:/icons/UpdatedIcons/lily_w_hover.png);\n"
"}\n"
"\n"
"#lily_walk_btn:pressed,\n"
"#lily_walk_btn_2:pressed,\n"
"#lily_walk_btn_3:pressed {\n"
"    image: url(:/icons/UpdatedIcons/lily_w_press.png);\n"
"}\n"
"\n"
"#lily_ate_check_2,\n"
"#lily_ate_check {\n"
"    border:none;\n"
"    image: url(:/icons/UpdatedIcons/lily_e_norm.png);\n"
"    max-width:40px;\n"
"    min-width:40px;\n"
"    max-height:40px;\n"
"    min-height:40px;\n"
"}\n"
"\n"
"#lily_ate_check_2:hover,\n"
"#lily_ate_check:hover {\n"
"    image: url(:/icons/UpdatedIcons/lily_e_hover.png);\n"
"}\n"
"\n"
"#lily_ate_check_2:pressed,\n"
"#lily_ate_check:pressed {\n"
"    image: url(:/icons/UpdatedIcons/lily_e_press.png);\n"
"}\n"
"\n"
"#lily_ate_check_2:checked,\n"
"#lily_ate_check:checked {\n"
"    image: url(:/icons/UpdatedIcons/lilybowlchecked.png);\n"
"}\n"
"\n"
"#lily_walk_btn:checked:hover,\n"
"#lily_walk_btn_2:checked:hover,\n"
"#lily_walk_btn_3:checked:hover {\n"
"    image: url(:/icons/UpdatedIcons/lily_paw_hovered.png);\n"
"}\n"
"\n"
"#lily_walk_btn:checked:pressed,\n"
"#lily_walk_btn_2:checked:pressed,\n"
"#lily_walk_btn_3:checked:pressed {\n"
"    image: url(:/icons/UpdatedIcons/lily_paw_pressed.png);\n"
"}\n"
"\n"
"\n"
"#lily_walk_btn:checked,\n"
"#lily_walk_btn_2:checked,\n"
"#lily_walk_btn_3:checked {\n"
"    image: url(:/icons/UpdatedIcons/lilychecked.png);\n"
"}\n"
"\n"
"#lily_behavior_3,\n"
"#lily_behavior_2,\n"
"#lily_behavior {\n"
"    color:rgb(205,178,214);\n"
"}\n"
"\n"
"#lily_behavior_3:hover,\n"
"#lily_behavior_2:hover,\n"
"#lily_behavior:hover {\n"
"    color: rgb(225,198,234);\n"
"}\n"
"\n"
"#lily_behavior_3:focus,\n"
"#lily_behavior_2:focus,\n"
"#lily_behavior:focus {\n"
"    color: rgb(245,218,254);\n"
"}\n"
"\n"
"#lily_behavior_slider_3::handle:horizontal,\n"
"#lily_behavior_slider_2::handle:horizontal,\n"
"#lily_behavior_slider::handle:horizontal {\n"
"    background:rgb(160,130,160);\n"
"}\n"
"#lily_behavior_slider_3::handle:horizontal:hover,\n"
"#lily_behavior_slider_2::handle:horizontal:hover,\n"
"#lily_behavior_slider::handle:horizontal:hover {\n"
"    background:rgb(190,160,190);\n"
"}\n"
"#lily_behavior_slider_3::handle:horizontal:pressed,\n"
"#lily_behavior_slider_2::handle:horizontal:pressed,\n"
"#lily_behavior_slider::handle:horizontal:pressed {\n"
"    background:rgb(140,110,140);\n"
"}\n"
"\n"
"#lily_behavior_slider_3::groove:horizontal:hover,\n"
"#lily_behavior_slider_2::groove:horizontal:hover,\n"
"#lily_behavior_slider::groove:horizontal:hover {\n"
"    background:rgba(160,130,160,45);\n"
"}\n"
"\n"
"#lily_behavior_slider_3::groove:horizontal,\n"
"#lily_behavior_slider_2::groove:horizontal,\n"
"#lily_behavior_slider::groove:horizontal {\n"
"    background:rgba(160,130,160,45);\n"
"}\n"
"\n"
"#lily_gait,\n"
"#lily_gait_2,\n"
"#lily_gait_3 {\n"
"    color:rgb(100,70,100);\n"
"}\n"
"#lily_gait:hover,\n"
"#lily_gait_2:hover,\n"
"#lily_gait_3:hover {\n"
"    color: rgb(120,90,120);\n"
"}\n"
"#lily_gait:focus,\n"
"#lily_gait_2:focus,\n"
"#lily_gait_3:focus {\n"
"    color: rgb(140,110,140);\n"
"}\n"
"\n"
"#lily_gait_slider::handle:horizontal,\n"
"#lily_gait_slider_2::handle:horizontal,\n"
"#lily_gait_slider_3::handle:horizontal {\n"
"    background:rgb(100,70,100);\n"
"}\n"
"\n"
"#lily_gait_slider::handle:horizontal:hover,\n"
"#lily_gait_slider_2::handle:horizontal:hover,\n"
"#lily_gait_slider_3::handle:horizontal:hover {\n"
"    background:rgb(130,100,130);\n"
"}\n"
"\n"
"#lily_gait_slider::handle:horizontal:pressed,\n"
"#lily_gait_slider_2::handle:horizontal:pressed,\n"
"#lily_gait_slider_3::handle:horizontal:pressed {\n"
"    background:rgb(80,50,80);\n"
"}\n"
"\n"
"\n"
"#lily_gait_slider::groove:horizontal:hover,\n"
"#lily_gait_slider_2::groove:horizontal:hover\n"
"#lily_gait_slider_3::groove:horizontal:hover {\n"
"    background:rgba(100,70,100,45);\n"
"}\n"
"#lily_gait_slider::groove:horizontal,\n"
"#lily_gait_slider_2::groove:horizontal,\n"
"#lily_gait_slider_3::groove:horizontal {\n"
"    background:rgba(100,70,100,45);\n"
"}\n"
"\n"
"/* ------------------------------------------------- \n"
"Lilys Table Views\n"
"------------------------------------------------- */\n"
"#lily_walk_note_table,\n"
"#time_in_room_table,\n"
"#lily_diet_table,\n"
"#lily_mood_table,\n"
"#lily_walk_table,\n"
"#lily_notes_table { \n"
"    background-color: transparent;\n"
"    alternate-background-color: rgb(100, 157, 220);\n"
"    selection-background-color: #7e57c2;\n"
"    gridline-color:transparent;\n"
"    color:#fff;\n"
"}\n"
"#lily_walk_note_table::item,\n"
"#time_in_room_table::item,\n"
"#lily_diet_table::item,\n"
"#lily_mood_table::item,\n"
"#lily_walk_table::item,\n"
"#lily_notes_table::item {\n"
"    padding: 1px;\n"
"    background:rgb(180, 149, 210);\n"
"}\n"
"#lily_walk_note_table::item:selected,\n"
"#lily_notes_table::item:selected,\n"
"#time_in_room_table::item:selected,\n"
"#lily_diet_table::item:selected,\n"
"#lily_mood_table::item:selected,\n"
"#lily_walk_table::item:selected {\n"
"    color:#fff;\n"
"    background:rgb(180, 149, 210);\n"
"}\n"
"\n"
"/*\n"
"LILY MOOD SLIDERS AND SPINBOXES ETC.\n"
"*/\n"
"#lily_time_in_room_slider::handle:horizontal {\n"
"    background:rgb(205,178,214);\n"
"}\n"
"#lily_time_in_room_slider::handle:horizontal:hover {\n"
"    background:rgb(235,208,244);\n"
"}\n"
"#lily_time_in_room_slider::handle:horizontal:pressed {\n"
"    background:rgb(185,158,194);\n"
"}\n"
"\n"
"#lily_time_in_room_slider::groove:horizontal:hover {\n"
"    background:rgba(205,178,214,45);\n"
"}\n"
"#lily_time_in_room_slider::groove:horizontal {\n"
"    background:rgba(205,178,214,45);\n"
"}\n"
"#lily_mood_slider::handle:horizontal {\n"
"    background:rgb(160,130,160);\n"
"}\n"
"#lily_mood_slider::handle:horizontal:hover {\n"
"    background:rgb(190,160,190);\n"
"}\n"
"#lily_mood_slider::handle:horizontal:pressed {\n"
"    background:rgb(140,110,140);\n"
"}\n"
"#lily_mood_slider::groove:horizontal:hover {\n"
"    background:rgba(160,130,160,45);\n"
"}\n"
"#lily_mood_slider::groove:horizontal {\n"
"    background:rgba(160,130,160,45);\n"
"}\n"
"#lily_mood_activity_slider::handle:horizontal {\n"
"    background:rgb(130,100,130);\n"
"}\n"
"#lily_mood_activity_slider::handle:horizontal:hover {\n"
"    background:rgb(160,130,160);\n"
"}\n"
"#lily_mood_activity_slider::handle:horizontal:pressed {\n"
"    background:rgb(110,80,110);\n"
"}\n"
"\n"
"#lily_mood_activity_slider::groove:horizontal:hover {\n"
"    background:rgba(130,100,130,45);\n"
"}\n"
"#lily_mood_activity_slider::groove:horizontal {\n"
"    background:rgba(130,100,130,45);\n"
"}\n"
"#lily_energy_slider::handle:horizontal {\n"
"    background:rgb(100,70,100);\n"
"}\n"
"\n"
"#lily_energy_slider::handle:horizontal:hover {\n"
"    background:rgb(130,100,130);\n"
"}\n"
"\n"
"#lily_energy_slider::handle:horizontal:pressed {\n"
"    background:rgb(80,50,80);\n"
"}\n"
"\n"
"#lily_energy_slider::groove:horizontal:hover {\n"
"    background:rgba(100,70,100,45);\n"
"}\n"
"#lily_energy_slider::groove:horizontal {\n"
"    background:rgba(100,70,100,45);\n"
"}\n"
"\n"
"/* Time in Room */\n"
"#lily_time_in_room {\n"
"    background:transparent;\n"
"    color:rgb(205,178,214);\n"
"}\n"
"\n"
"#lily_time_in_room:hover {\n"
"    color: rgb(225,198,234);\n"
"}\n"
"#lily_time_in_room:focus {\n"
"    color: rgb(245,218,254);\n"
"}\n"
"\n"
"/* Lily Mood */\n"
"#lily_mood {\n"
"    background:transparent;\n"
"    color:rgb(160,130,160);\n"
"}\n"
"#lily_mood:hover {\n"
"    color: rgb(180,150,180);\n"
"}\n"
"#lily_mood:focus {\n"
"    color: rgb(200,170,200);\n"
"}\n"
"\n"
"/* Lily Activity */\n"
"#lily_activity  {\n"
"    background:transparent;\n"
"    color:rgb(130,100,130);\n"
"}\n"
"#lily_activity:hover {\n"
"    color: rgb(150,120,150);\n"
"}\n"
"#lily_activity:focus {\n"
"    color: rgb(170,140,170);\n"
"}\n"
"\n"
"/* Lily Energy */\n"
"#lily_energy {\n"
"    background:transparent;\n"
"    color:rgb(100,70,100);\n"
"}\n"
"#lily_energy:hover {\n"
"    color: rgb(120,90,120);\n"
"}\n"
"#lily_energy:focus {\n"
"    color: rgb(140,110,140);\n"
"}\n"
"\n"
"/* /////////////////////////////////////////////////////////////////////////////\n"
"QLineEdit\n"
"///////////////////////////////////////////////////////////////////////////// */\n"
"    QLineEdit {\n"
"    border:none;\n"
"    background: transparent;\n"
"}\n"
"QLineEdit:hover {\n"
"    border-bottom:1px solid rgba(123, 123, 123, 150);\n"
"}\n"
"QLineEdit:focus {\n"
"    border-bottom:1px solid rgba(123, 123, 123, 200);\n"
"}\n"
"\n"
"/* /////////////////////////////////////////////////////////////////////////////\n"
"QCheckBox\n"
"///////////////////////////////////////////////////////////////////////////// */\n"
"QCheckBox::indicator {\n"
"    font-weight:bold;\n"
"    background-color: transparent;\n"
"    border: 2px solid rgb(33,143,109);\n"
"    border-radius: 6px;\n"
"    width: 8px;\n"
"    height: 8px;\n"
"    margin-left:8px;\n"
"    margin-right:8px;\n"
"}\n"
"QCheckBox::indicator:hover {\n"
"    border: 2px solid white;\n"
"}\n"
"QCheckBox::indicator:checked {\n"
"    background: rgb(33,143,109);\n"
"    border: 2px solid rgb(33,143,109);\n"
"}\n"
"\n"
"/* /////////////////////////////////////////////////////////////////////////////\n"
"QSlider\n"
"///////////////////////////////////////////////////////////////////////////// */\n"
"QSlider:horizontal {\n"
"    background:transparent;\n"
"border:none;\n"
"min-height:18px;\n"
"}\n"
"QSlider::groove:horizontal {\n"
"    border-radius: 8px;\n"
"    height: 16px;\n"
"    margin: 0px;\n"
"    background:rgb(22, 22, 22);\n"
"    }\n"
"\n"
"QSlider::groove:horizontal:hover {\n"
"    background: rgb(38, 38, 38);\n"
"}\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(255, 255, 255);\n"
"    height: 16px;\n"
"    width: 16px;\n"
"    margin: 0px;\n"
"    border-radius:8px;\n"
"}\n"
"QSlider::sub-page:horizontal {\n"
"    background:transparent;\n"
"    border-radius:6px;\n"
"}\n"
"QSlider::handle:horizontal:hover {\n"
"    background-color: white;\n"
"}\n"
"QSlider::handle:horizontal:pressed {\n"
"    background-color:white;\n"
"}\n"
"/*\n"
"VERTICAL\n"
"///////////////////////////////////////////////////////////////////////////// */\n"
"QSlider::groove:vertical {\n"
"    border-radius: 11px;\n"
"    width: 22px;\n"
"    margin: 0px;\n"
"    background-color: rgba(33,33,33,100);\n"
"}\n"
"\n"
"QSlider::groove:vertical:hover {\n"
"    background-color: rgba(44,44,44,100);\n"
"}\n"
"QSlider::handle:vertical {\n"
"    background-color: rgb(255, 88, 71);\n"
"    border: none;\n"
"    height: 22px;\n"
"    width: 22px;\n"
"    margin: 0px;\n"
"    border-radius: 11px;\n"
"}\n"
"QSlider::handle:vertical:hover {\n"
"    background-color: rgb(195, 155, 255);\n"
"}\n"
"QSlider::handle:vertical:pressed {\n"
"    background-color: rgb(255, 121, 198);\n"
"}\n"
"\n"
"/* /////////////////////////////////////////////////////////////////////////////\n"
"Time/DateEdit\n"
"///////////////////////////////////////////////////////////////////////////// */\n"
"QTimeEdit,\n"
"QDateEdit {\n"
"    background-color: transparent;\n"
"    border:None;\n"
"}\n"
"\n"
"/* //////////////////////////////////////////////////////////////////////////////\n"
"QTableView\n"
"////////////////////////////////////////////////////////////////////////////// */\n"
"QTableView {\n"
"    background-color: transparent;\n"
"    alternate-background-color: rgb(101, 147, 128);\n"
"    selection-background-color: #7e57c2;\n"
"    gridline-color: rgb(90, 90, 90);color:rgb(245,245,245);\n"
"}\n"
"\n"
"QTableView::item {\n"
"    padding: 1px;\n"
"    background:rgb(216,79,79);\n"
"}\n"
"QTableView::item:selected {\n"
"    color: #fff;\n"
"    background:rgb(23, 23, 23);\n"
"}\n"
"\n"
"\n"
"\n"
"\n"
"/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n"
"                                                                                                                                     BASICS MOD\n"
"////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////  */\n"
"#sleep_table,\n"
"#basics_table {background-color: transparent;alternate-background-color: rgb(100, 157, 220);selection-background-color: #7e57c2;gridline-color:transparent;color:rgb(245,245,245);}\n"
"#sleep_table::item,\n"
"#basics_table::item {padding: 1px;background:rgb(36, 143, 109);}\n"
"#sleep_table::item:selected,\n"
"#basics_table::item:selected {color: #fff;background:rgb(23, 23, 23);}\n"
"\n"
"#notes_basics {border:1px solid rgb(54, 163, 129);     border-radius:6px;     padding:4px 5px;     color:rgb(54, 163, 129);}\n"
"#notes_basics:focus {color:rgb(84, 193, 159);     border:1px solid rgb(84, 193, 159);}\n"
"#notes_basics:hover {color:rgb(73,183,149);     border-color:rgb(73,183,149);}\n"
"\n"
"#sleep_commit_btn,\n"
"#basics_commit_btn {border:none;image: url(:/icons/UpdatedIcons/basics_c_norm.png);max-width:21px;min-width:21px;max-height:21px;min-height:21px;}\n"
"#sleep_commit_btn:hover,\n"
"#basics_commit_btn:hover {image: url(:/icons/UpdatedIcons/bas_com_norm.png);}\n"
"#sleep_commit_btn:pressed,\n"
"#basics_commit_btn:pressed {image: url(:/icons/UpdatedIcons/bas_com_press.png);}\n"
"#sleep_delete_btn,\n"
"#basics_delete_btn {border:none;image: url(:/icons/UpdatedIcons/basics_d_norm.png);max-width:25px;min-width:25px;max-height:25px;min-height:25px;}\n"
"#sleep_delete_btn:hover,\n"
"#basics_delete_btn:hover {image: url(:/icons/UpdatedIcons/bas_del_norm.png);}\n"
"#sleep_delete_btn:pressed,\n"
"#basics_delete_btn:pressed {image: url(:/icons/UpdatedIcons/bas_dele_press.png);}\n"
"\n"
"#basics_data_btn {image: url(:/newPrefix/body_data_btn_norm.png);}\n"
"#basics_data_btn:hover {image: url(:/icons/body_hover.png);}\n"
"#basics_data_btn:checked {image: url(:/icons/body_checked.png);}\n"
"#basics_data_btn:checked:hover {image: url(:/icons/body_hover.png);}\n"
"\n"
"#sleep_data_btn {border:none;image: url(:/icons/UpdatedIcons/sleep_norm.png);max-width:35px;min-width:35px;max-height:35px;min-height:35px;}\n"
"#sleep_data_btn:hover {image: url(:/icons/UpdatedIcons/sleep_hover.png);}\n"
"#sleep_data_btn:pressed {image: url(:/icons/UpdatedIcons/sleep_press.png);}\n"
"#sleep_data_btn:checked {image: url(:/icons/UpdatedIcons/sleep_checked.png);}\n"
"#sleep_data_btn:checked:hover {image: url(:/icons/UpdatedIcons/sleep_hover.png);}\n"
"#sleep_data_btn:checked:pressed {image: url(:/icons/UpdatedIcons/sleep_norm.png);}\n"
"\n"
"#woke_up_like_spinbox, #sleep_quality, #effort_spinbox {\n"
"font-size:10pt;\n"
"background:transparent;\n"
"}\n"
"#woke_up_like_spinbox:hover, #sleep_quality:hover, #effort_spinbox:hover {\n"
"background:transparent;\n"
"color:rgb(33, 143, 109);\n"
"}\n"
"\n"
"#basics_basics_frame > QCheckBox {\n"
"    background:transparent;\n"
"    font-size:10pt;\n"
"}\n"
"#basics_basics_frame > QCheckBox:hover {\n"
"    background:transparent;\n"
"    color:rgb(33, 143, 109);\n"
"}\n"
"#basics_basics_frame > QCheckBox::indicator {\n"
"    border: 2px solid rgb(33, 143, 109);\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    border-radius: 5px;\n"
"}\n"
"#yoga_effort_lbl, #awake_lbl, #sleep_lbl, #sleep_quality_lbl, #woke_like_lbl, #hrs_slept_lbl, #bedtime_lbl {color:#fff;}\n"
"#yoga_effort_lbl:hover, #awake_lbl:hover, #sleep_lbl:hover, #sleep_quality_lbl:hover, #woke_like_lbl:hover, #hrs_slept_lbl:hover, #bedtime_lbl:hover {color:rgb(34, 143, 109);}\n"
"#basics_basics_frame > QCheckBox::indicator:hover {\n"
"    border: 2px solid rgb(245, 245, 245);\n"
"}\n"
"#basics_basics_frame > QCheckBox::indicator:checked {\n"
"    border: 2px solid rgb(33, 143, 109);\n"
"    background: rgb(33, 143, 109);\n"
"}\n"
"/* BASICS MOD  QTimeEdit\n"
"//////////////////////////////////////////////////////////////////////////////////////////////// */\n"
"#basics_basics_frame >QTimeEdit {\n"
"    background-color: transparent;\n"
"}\n"
"#basics_basics_frame >QTimeEdit:hover {\n"
"    color:rgb(33, 143, 109);\n"
"}\n"
"#basics_basics_frame >QTimeEdit:focus {\n"
"    color:rgb(33, 143, 109);\n"
"}\n"
"#time_goal_timer,\n"
"#awake_time,\n"
"#asleep_time,\n"
"#shower_time,\n"
"#teeth_brushed_at_time_2,\n"
"#teeth_brushed_at_time,\n"
"#yoga_time_entry {\n"
"color:rgb(33, 143, 109);\n"
"background:transparent;\n"
"}\n"
"\n"
"#time_goal_timer:hover,\n"
"#awake_time:hover,\n"
"#asleep_time:hover,\n"
"#shower_time:hover,\n"
"#teeth_brushed_at_time_2:hover,\n"
"#teeth_brushed_at_time:hover,\n"
"#yoga_time_entry:hover {\n"
"color:rgb(63, 173, 139);\n"
"}\n"
"#time_goal_timer:focus,\n"
"#awake_time:focus,\n"
"#asleep_time:focus,\n"
"#shower_time:focus,\n"
"#teeth_brushed_at_time_2:focus,\n"
"#teeth_brushed_at_time:focus,\n"
"#yoga_time_entry:focus {\n"
"color:rgb(255, 255, 255);\n"
"}\n"
"\n"
"\n"
"#sleep_date,  #basics_date {color:rgb(33, 143, 109);}\n"
"#sleep_date:hover, #basics_date:hover {color:rgb(34, 143, 109);}\n"
"#sleep_date:focus, #basics_date:focus {color::rgb(54, 163, 129);}\n"
"\n"
"/*  BASICS MOD QCheckBox\n"
"//////////////////////////////////////////////////////////////////////////////////////////////// */\n"
"#basics_sleep_frame > QCheckBox,\n"
"#basics_basics_frame > QCheckBox {\n"
"    background:transparent;\n"
"    font-size:10pt;\n"
"}\n"
"#basics_sleep_frame > QCheckBox:hover,\n"
"#basics_basics_frame > QCheckBox:hover {\n"
"    background:transparent;\n"
"    color:rgb(33, 143, 109);\n"
"}\n"
"#basics_sleep_frame > QCheckBox::indicator,\n"
"#basics_basics_frame > QCheckBox::indicator {\n"
"    border: 2px solid rgb(33, 143, 109);\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    border-radius: 5px;\n"
"}\n"
"#basics_sleep_frame > QCheckBox::indicator:hover,\n"
"#basics_basics_frame > QCheckBox::indicator:hover {\n"
"    border: 2px solid rgb(245, 245, 245);\n"
"}\n"
"#basics_sleep_frame > QCheckBox::indicator:checked,\n"
"#basics_basics_frame > QCheckBox::indicator:checked {\n"
"    border: 2px solid rgb(33, 143, 109);\n"
"    background: rgb(33, 143, 109);\n"
"}\n"
"/* BASICS MOD QTimeEdit\n"
"//////////////////////////////////////////////////////////////////////////////////////////////// */\n"
"#basics_commit_pane > QDateEdit,\n"
"#basics_sleep_frame > QTimeEdit,\n"
"#basics_basics_frame > QTimeEdit {\n"
"    background-color: transparent;\n"
"}\n"
"#basics_commit_pane > QDateEdit:hover,\n"
"#basics_sleep_frame > QTimeEdit:hover,\n"
"#basics_basics_frame > QTimeEdit:hover {\n"
"    color:rgb(33, 143, 109);\n"
"}\n"
"#basics_commit_pane > QDateEdit:focus,\n"
"#basics_sleep_frame > QTimeEdit:focus,\n"
"#basics_basics_frame > QTimeEdit:focus {\n"
"    color:rgb(33, 143, 109);\n"
"}\n"
"\n"
"\n"
"\n"
"/* QLabel\n"
"//////////////////////////////////////////////////////////////////////////////////////////////// */\n"
"#basics_sleep_frame > QLabel,\n"
"#basics_basics_frame > QLabel {\n"
"    background-color: transparent;\n"
"    font-size:10pt;\n"
"}\n"
"\n"
"#basics_sleep_frame > QLabel:hover,\n"
"#basics_basics_frame > QLabel:hover {\n"
"    color:rgb(33, 143, 109);\n"
"}\n"
"\n"
"/* QSpinBox\n"
"//////////////////////////////////////////////////////////////////////////////////////////////// */\n"
"#basics_sleep_frame > QSpinBox,\n"
"#basics_basics_frame > QSpinBox {\n"
"background:transparent;\n"
"}\n"
"\n"
"#basics_sleep_frame > QSpinBox:hover,\n"
"#basics_basics_frame > QSpinBox:hover {\n"
"background:transparent;\n"
"color:rgb(33, 143, 109);\n"
"}\n"
"\n"
"#basics_sleep_frame > QSpinBox:indicator,\n"
"#basics_basics_frame > QSpinBox:indicator {\n"
"    border: 2px solid rgb(33, 143, 109);\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"#basics_sleep_frame > QSpinBox::indicator:hover,\n"
"#basics_basics_frame > QSpinBox::indicator:hover {\n"
"    border: 2px solid rgb(245, 245, 245);\n"
"}\n"
"\n"
"#basics_sleep_frame > QSpinBox::indicator:checked,\n"
"#basics_basics_frame > QSpinBox::indicator:checked {\n"
"    border: 2px solid rgb(33, 143, 109);\n"
"    background: 2px solid rgb(33, 143, 109);\n"
"}\n"
"\n"
"\n"
"\n"
"/* ////////////////////////////////////////////////////////////////////////////////////////////////\n"
"                                    QScrollBar\n"
"//////////////////////////////////////////////////////////////////////////////////////////////// */\n"
"QScrollBar:horizontal {border: none;background:transparent;height: 12px;margin: 0px 10px 0px 10px;border-radius: 3px;}\n"
"QScrollBar::handle:horizontal {background: rgb(30,30,30);min-width:24px;border-radius: 4px}\n"
"QScrollBar::add-line:horizontal {border: none;background: transparent;width: 20px;border-top-right-radius: 4px;border-bottom-right-radius: 4px;subcontrol-position: right;subcontrol-origin: margin;}\n"
"QScrollBar::sub-line:horizontal {border: none;background: transparent;width: 20px;border-top-left-radius: 4px;border-bottom-left-radius: 4px;subcontrol-position: left;subcontrol-origin: margin;}\n"
"QScrollBar::up-arrow:horizontal, QScrollBar::down-arrow:horizontal {background: none;}\n"
"QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal {background: transparent;}\n"
"QScrollBar:vertical {border: none;background-color:transparent;width: 12px;margin: 10px 0px 10px 0px;border-radius: 4px;}\n"
"QScrollBar::handle:vertical {background: rgb(30, 30,30);min-height: 12px;border-radius: 4px}\n"
"QScrollBar::add-line:vertical {border: none;background: transparent;height: 20px;border-bottom-left-radius: 4px;border-bottom-right-radius: 4px;subcontrol-position: bottom;subcontrol-origin: margin;}\n"
"QScrollBar::sub-line:vertical {border: none;background: transparent;height: 20px;border-top-left-radius: 4px;border-top-right-radius: 4px;subcontrol-position: top;subcontrol-origin: margin;}\n"
"QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical {background: none;}\n"
"QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {background: transparent;}\n"
"\n"
"\n"
"\n"
"")
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_20 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_20.setContentsMargins(6, 6, 6, 6)
        self.gridLayout_20.setSpacing(0)
        self.gridLayout_20.setObjectName("gridLayout_20")
        self.mainStack = QtWidgets.QStackedWidget(parent=self.centralwidget)
        self.mainStack.setStyleSheet("")
        self.mainStack.setObjectName("mainStack")
        self.page = QtWidgets.QWidget()
        self.page.setObjectName("page")
        self.gridLayout_53 = QtWidgets.QGridLayout(self.page)
        self.gridLayout_53.setContentsMargins(6, 6, 6, 6)
        self.gridLayout_53.setSpacing(0)
        self.gridLayout_53.setObjectName("gridLayout_53")
        self.agendaStack = QtWidgets.QStackedWidget(parent=self.page)
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.agendaStack.setFont(font)
        self.agendaStack.setStyleSheet("")
        self.agendaStack.setObjectName("agendaStack")
        self.agendaInputPage = QtWidgets.QWidget()
        self.agendaInputPage.setObjectName("agendaInputPage")
        self.gridLayout_27 = QtWidgets.QGridLayout(self.agendaInputPage)
        self.gridLayout_27.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_27.setSpacing(0)
        self.gridLayout_27.setObjectName("gridLayout_27")
        self.agenda_stack = QtWidgets.QFrame(parent=self.agendaInputPage)
        self.agenda_stack.setStyleSheet("")
        self.agenda_stack.setObjectName("agenda_stack")
        self.gridLayout_28 = QtWidgets.QGridLayout(self.agenda_stack)
        self.gridLayout_28.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_28.setSpacing(0)
        self.gridLayout_28.setObjectName("gridLayout_28")
        self.agenda_journal_stack = QtWidgets.QStackedWidget(parent=self.agenda_stack)
        self.agenda_journal_stack.setObjectName("agenda_journal_stack")
        self.sunday = QtWidgets.QWidget()
        self.sunday.setObjectName("sunday")
        self.gridLayout_39 = QtWidgets.QGridLayout(self.sunday)
        self.gridLayout_39.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_39.setSpacing(0)
        self.gridLayout_39.setObjectName("gridLayout_39")
        self.sun_note_one = QtWidgets.QTextEdit(parent=self.sunday)
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        font.setPointSize(13)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.sun_note_one.setFont(font)
        self.sun_note_one.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.sun_note_one.setMarkdown("")
        self.sun_note_one.setTabStopDistance(15.0)
        self.sun_note_one.setObjectName("sun_note_one")
        self.gridLayout_39.addWidget(self.sun_note_one, 2, 0, 1, 1)
        self.agenda_journal_stack.addWidget(self.sunday)
        self.monday = QtWidgets.QWidget()
        self.monday.setObjectName("monday")
        self.gridLayout_32 = QtWidgets.QGridLayout(self.monday)
        self.gridLayout_32.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_32.setSpacing(0)
        self.gridLayout_32.setObjectName("gridLayout_32")
        self.mon_note_one = QtWidgets.QTextEdit(parent=self.monday)
        self.mon_note_one.setMarkdown("")
        self.mon_note_one.setTabStopDistance(14.0)
        self.mon_note_one.setObjectName("mon_note_one")
        self.gridLayout_32.addWidget(self.mon_note_one, 1, 0, 1, 1)
        self.agenda_journal_stack.addWidget(self.monday)
        self.tuesday = QtWidgets.QWidget()
        self.tuesday.setObjectName("tuesday")
        self.gridLayout_46 = QtWidgets.QGridLayout(self.tuesday)
        self.gridLayout_46.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_46.setSpacing(0)
        self.gridLayout_46.setObjectName("gridLayout_46")
        self.tues_note_one = QtWidgets.QTextEdit(parent=self.tuesday)
        self.tues_note_one.setAutoFillBackground(False)
        self.tues_note_one.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.tues_note_one.setMarkdown("")
        self.tues_note_one.setTabStopDistance(14.0)
        self.tues_note_one.setObjectName("tues_note_one")
        self.gridLayout_46.addWidget(self.tues_note_one, 1, 0, 1, 1)
        self.agenda_journal_stack.addWidget(self.tuesday)
        self.wednesday = QtWidgets.QWidget()
        self.wednesday.setObjectName("wednesday")
        self.gridLayout_47 = QtWidgets.QGridLayout(self.wednesday)
        self.gridLayout_47.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_47.setSpacing(0)
        self.gridLayout_47.setObjectName("gridLayout_47")
        self.wed_note_one = QtWidgets.QTextEdit(parent=self.wednesday)
        self.wed_note_one.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.wed_note_one.setMarkdown("")
        self.wed_note_one.setTabStopDistance(14.0)
        self.wed_note_one.setObjectName("wed_note_one")
        self.gridLayout_47.addWidget(self.wed_note_one, 1, 0, 1, 1)
        self.agenda_journal_stack.addWidget(self.wednesday)
        self.thursday = QtWidgets.QWidget()
        self.thursday.setObjectName("thursday")
        self.gridLayout_48 = QtWidgets.QGridLayout(self.thursday)
        self.gridLayout_48.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_48.setSpacing(0)
        self.gridLayout_48.setObjectName("gridLayout_48")
        self.thurs_note_one = QtWidgets.QTextEdit(parent=self.thursday)
        self.thurs_note_one.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.thurs_note_one.setMarkdown("")
        self.thurs_note_one.setTabStopDistance(14.0)
        self.thurs_note_one.setObjectName("thurs_note_one")
        self.gridLayout_48.addWidget(self.thurs_note_one, 1, 0, 1, 1)
        self.agenda_journal_stack.addWidget(self.thursday)
        self.friday = QtWidgets.QWidget()
        self.friday.setObjectName("friday")
        self.gridLayout_49 = QtWidgets.QGridLayout(self.friday)
        self.gridLayout_49.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_49.setSpacing(0)
        self.gridLayout_49.setObjectName("gridLayout_49")
        self.fri_note_one = QtWidgets.QTextEdit(parent=self.friday)
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        font.setPointSize(13)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.fri_note_one.setFont(font)
        self.fri_note_one.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.fri_note_one.setMarkdown("")
        self.fri_note_one.setTabStopDistance(14.0)
        self.fri_note_one.setObjectName("fri_note_one")
        self.gridLayout_49.addWidget(self.fri_note_one, 1, 0, 1, 1)
        self.agenda_journal_stack.addWidget(self.friday)
        self.saturday = QtWidgets.QWidget()
        self.saturday.setObjectName("saturday")
        self.gridLayout_50 = QtWidgets.QGridLayout(self.saturday)
        self.gridLayout_50.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_50.setSpacing(0)
        self.gridLayout_50.setObjectName("gridLayout_50")
        self.sat_note_one = QtWidgets.QTextEdit(parent=self.saturday)
        self.sat_note_one.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.sat_note_one.setMarkdown("")
        self.sat_note_one.setTabStopDistance(14.0)
        self.sat_note_one.setObjectName("sat_note_one")
        self.gridLayout_50.addWidget(self.sat_note_one, 1, 0, 1, 1)
        self.agenda_journal_stack.addWidget(self.saturday)
        self.gridLayout_28.addWidget(self.agenda_journal_stack, 1, 0, 1, 1)
        self.gridLayout_27.addWidget(self.agenda_stack, 2, 1, 1, 1)
        self.week_frame = QtWidgets.QFrame(parent=self.agendaInputPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.week_frame.sizePolicy().hasHeightForWidth())
        self.week_frame.setSizePolicy(sizePolicy)
        self.week_frame.setStyleSheet("/* //////////////////////////////////////////////////////////////////////////////\n"
"AGENDA SIDEBAR BTN primer\n"
"////////////////////////////////////////////////////////////////////////////// */\n"
"QPushButton {\n"
"color:#fff;\n"
"text-align:left;\n"
"border-radius:3px;\n"
"font:9pt \"Arial\";\n"
"border:none;\n"
"font-weight:900;\n"
"padding:4px;\n"
"min-width:35px;\n"
"max-width:35px;\n"
"max-height:20px;\n"
"min-height:20px;\n"
"text-align:center;\n"
"}\n"
"QPushButton:hover {\n"
"color:#fff;\n"
"margin-top:2px;\n"
"}\n"
"QPushButton:checked {\n"
"font-weight:bold;\n"
"color:#fff;\n"
"}\n"
"QPushButton:pressed {\n"
"font-weight:bold;\n"
"font-size:9pt;\n"
"margin-top:4px;\n"
"color:#fff;\n"
"}\n"
"\n"
"QPushButton:checked:hover {\n"
"font-weight:bold;\n"
"margin:0px;\n"
"color:#fff;\n"
"margin-top:1px;\n"
"}\n"
"\n"
"QPushButton:checked:pressed {\n"
"font-weight:bold;\n"
"margin-top:2px;\n"
"color:#fff;\n"
"}\n"
"QDateEdit {\n"
"font-size:10pt;\n"
"}\n"
"\n"
"/* ////////////////////////////////////////////////////////////////////////////////\n"
"AGENDA SIDEBAR BTNs\n"
"//////////////////////////////////////////////////////////////////////////////// */\n"
"\n"
"#sun_journal_nav_btn:hover {\n"
"    border-left-color: rgb(230, 77, 60);\n"
"}\n"
"#sun_journal_nav_btn:checked {\n"
"    background-color: rgb(230, 77, 60);\n"
"}\n"
"\n"
"#mon_journal_nav_btn:hover {\n"
"    border-left-color: rgb(236, 77, 114);\n"
"}\n"
"#mon_journal_nav_btn:checked {\n"
"    background-color: rgb(236, 77, 114);\n"
"}\n"
"\n"
"/* Tuesday */\n"
"#tues_journal_nav_btn:hover {\n"
"    border-left-color: rgb(222, 94, 160);\n"
"}\n"
"#tues_journal_nav_btn:checked {\n"
"    background:rgb(222, 94, 160);\n"
"}\n"
"\n"
"/* Wednesday */\n"
"#wed_journal_nav_btn:hover {\n"
"    border-left-color: #c176c2;\n"
"}\n"
"#wed_journal_nav_btn:checked {\n"
"    background:#c176c2;\n"
"}\n"
"\n"
"/* Thursday */\n"
"#thurs_journal_nav_btn:hover {\n"
"    border-left-color: #9d8bd4;\n"
"}\n"
"#thurs_journal_nav_btn:checked {\n"
"    background:#9d8bd4;\n"
"}\n"
"\n"
"/* friday */\n"
"#fri_journal_nav_btn:hover {\n"
"    border-left-color: #7f9ad6;\n"
"}\n"
"#fri_journal_nav_btn:checked {\n"
"    background:#7f9ad6;\n"
"}\n"
"\n"
"/* Saturday */\n"
"#sat_journal_nav_btn:hover {\n"
"    border-left-color: #73a5cc;\n"
"}\n"
"#sat_journal_nav_btn:checked {\n"
"    background:#73a5cc;\n"
"}\n"
"")
        self.week_frame.setObjectName("week_frame")
        self.gridLayout_51 = QtWidgets.QGridLayout(self.week_frame)
        self.gridLayout_51.setContentsMargins(0, 2, 0, 0)
        self.gridLayout_51.setSpacing(0)
        self.gridLayout_51.setObjectName("gridLayout_51")
        self.sat_date = QtWidgets.QDateEdit(parent=self.week_frame)
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.sat_date.setFont(font)
        self.sat_date.setFrame(False)
        self.sat_date.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.sat_date.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.sat_date.setCalendarPopup(False)
        self.sat_date.setCurrentSectionIndex(0)
        self.sat_date.setObjectName("sat_date")
        self.gridLayout_51.addWidget(self.sat_date, 1, 7, 1, 1)
        self.thurs_journal_nav_btn = QtWidgets.QPushButton(parent=self.week_frame)
        self.thurs_journal_nav_btn.setMaximumSize(QtCore.QSize(43, 28))
        self.thurs_journal_nav_btn.setCheckable(True)
        self.thurs_journal_nav_btn.setChecked(False)
        self.thurs_journal_nav_btn.setAutoExclusive(True)
        self.thurs_journal_nav_btn.setFlat(False)
        self.thurs_journal_nav_btn.setObjectName("thurs_journal_nav_btn")
        self.gridLayout_51.addWidget(self.thurs_journal_nav_btn, 0, 5, 1, 1)
        self.sun_date = QtWidgets.QDateEdit(parent=self.week_frame)
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.sun_date.setFont(font)
        self.sun_date.setAutoFillBackground(False)
        self.sun_date.setWrapping(False)
        self.sun_date.setFrame(False)
        self.sun_date.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.sun_date.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.sun_date.setCalendarPopup(False)
        self.sun_date.setCurrentSectionIndex(0)
        self.sun_date.setObjectName("sun_date")
        self.gridLayout_51.addWidget(self.sun_date, 1, 1, 1, 1)
        self.sun_journal_nav_btn = QtWidgets.QPushButton(parent=self.week_frame)
        self.sun_journal_nav_btn.setStyleSheet("")
        self.sun_journal_nav_btn.setCheckable(True)
        self.sun_journal_nav_btn.setChecked(False)
        self.sun_journal_nav_btn.setAutoExclusive(True)
        self.sun_journal_nav_btn.setFlat(False)
        self.sun_journal_nav_btn.setObjectName("sun_journal_nav_btn")
        self.gridLayout_51.addWidget(self.sun_journal_nav_btn, 0, 1, 1, 1)
        self.fri_date = QtWidgets.QDateEdit(parent=self.week_frame)
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.fri_date.setFont(font)
        self.fri_date.setFrame(False)
        self.fri_date.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.fri_date.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.fri_date.setCalendarPopup(False)
        self.fri_date.setCurrentSectionIndex(0)
        self.fri_date.setObjectName("fri_date")
        self.gridLayout_51.addWidget(self.fri_date, 1, 6, 1, 1)
        self.tues_date = QtWidgets.QDateEdit(parent=self.week_frame)
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.tues_date.setFont(font)
        self.tues_date.setFrame(False)
        self.tues_date.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.tues_date.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.tues_date.setCalendarPopup(False)
        self.tues_date.setCurrentSectionIndex(0)
        self.tues_date.setObjectName("tues_date")
        self.gridLayout_51.addWidget(self.tues_date, 1, 3, 1, 1)
        self.thurs_date = QtWidgets.QDateEdit(parent=self.week_frame)
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.thurs_date.setFont(font)
        self.thurs_date.setFrame(False)
        self.thurs_date.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.thurs_date.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.thurs_date.setCalendarPopup(False)
        self.thurs_date.setCurrentSectionIndex(0)
        self.thurs_date.setObjectName("thurs_date")
        self.gridLayout_51.addWidget(self.thurs_date, 1, 5, 1, 1)
        self.sat_journal_nav_btn = QtWidgets.QPushButton(parent=self.week_frame)
        self.sat_journal_nav_btn.setMaximumSize(QtCore.QSize(43, 28))
        self.sat_journal_nav_btn.setAutoFillBackground(False)
        self.sat_journal_nav_btn.setCheckable(True)
        self.sat_journal_nav_btn.setChecked(False)
        self.sat_journal_nav_btn.setAutoExclusive(True)
        self.sat_journal_nav_btn.setFlat(False)
        self.sat_journal_nav_btn.setObjectName("sat_journal_nav_btn")
        self.gridLayout_51.addWidget(self.sat_journal_nav_btn, 0, 7, 1, 1)
        self.mon_date = QtWidgets.QDateEdit(parent=self.week_frame)
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.mon_date.setFont(font)
        self.mon_date.setFrame(False)
        self.mon_date.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.mon_date.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.mon_date.setCalendarPopup(False)
        self.mon_date.setCurrentSectionIndex(0)
        self.mon_date.setObjectName("mon_date")
        self.gridLayout_51.addWidget(self.mon_date, 1, 2, 1, 1)
        self.mon_journal_nav_btn = QtWidgets.QPushButton(parent=self.week_frame)
        self.mon_journal_nav_btn.setMaximumSize(QtCore.QSize(43, 28))
        self.mon_journal_nav_btn.setCheckable(True)
        self.mon_journal_nav_btn.setChecked(True)
        self.mon_journal_nav_btn.setAutoExclusive(True)
        self.mon_journal_nav_btn.setFlat(False)
        self.mon_journal_nav_btn.setObjectName("mon_journal_nav_btn")
        self.gridLayout_51.addWidget(self.mon_journal_nav_btn, 0, 2, 1, 1)
        self.tues_journal_nav_btn = QtWidgets.QPushButton(parent=self.week_frame)
        self.tues_journal_nav_btn.setMaximumSize(QtCore.QSize(43, 28))
        self.tues_journal_nav_btn.setCheckable(True)
        self.tues_journal_nav_btn.setChecked(False)
        self.tues_journal_nav_btn.setAutoExclusive(True)
        self.tues_journal_nav_btn.setFlat(False)
        self.tues_journal_nav_btn.setObjectName("tues_journal_nav_btn")
        self.gridLayout_51.addWidget(self.tues_journal_nav_btn, 0, 3, 1, 1)
        self.wed_journal_nav_btn = QtWidgets.QPushButton(parent=self.week_frame)
        self.wed_journal_nav_btn.setMaximumSize(QtCore.QSize(43, 28))
        self.wed_journal_nav_btn.setCheckable(True)
        self.wed_journal_nav_btn.setChecked(False)
        self.wed_journal_nav_btn.setAutoExclusive(True)
        self.wed_journal_nav_btn.setFlat(False)
        self.wed_journal_nav_btn.setObjectName("wed_journal_nav_btn")
        self.gridLayout_51.addWidget(self.wed_journal_nav_btn, 0, 4, 1, 1)
        self.fri_journal_nav_btn = QtWidgets.QPushButton(parent=self.week_frame)
        self.fri_journal_nav_btn.setMaximumSize(QtCore.QSize(43, 28))
        self.fri_journal_nav_btn.setCheckable(True)
        self.fri_journal_nav_btn.setChecked(False)
        self.fri_journal_nav_btn.setAutoExclusive(True)
        self.fri_journal_nav_btn.setFlat(False)
        self.fri_journal_nav_btn.setObjectName("fri_journal_nav_btn")
        self.gridLayout_51.addWidget(self.fri_journal_nav_btn, 0, 6, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_51.addItem(spacerItem, 0, 0, 2, 1)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_51.addItem(spacerItem1, 0, 8, 2, 1)
        self.wed_date = QtWidgets.QDateEdit(parent=self.week_frame)
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.wed_date.setFont(font)
        self.wed_date.setFrame(False)
        self.wed_date.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.wed_date.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.wed_date.setCalendarPopup(False)
        self.wed_date.setCurrentSectionIndex(0)
        self.wed_date.setObjectName("wed_date")
        self.gridLayout_51.addWidget(self.wed_date, 1, 4, 1, 1)
        self.gridLayout_27.addWidget(self.week_frame, 1, 1, 1, 2)
        self.agendaStack.addWidget(self.agendaInputPage)
        self.agendaJournsDataViewPage = QtWidgets.QWidget()
        self.agendaJournsDataViewPage.setObjectName("agendaJournsDataViewPage")
        self.gridLayout_52 = QtWidgets.QGridLayout(self.agendaJournsDataViewPage)
        self.gridLayout_52.setContentsMargins(8, 0, 8, 0)
        self.gridLayout_52.setSpacing(0)
        self.gridLayout_52.setObjectName("gridLayout_52")
        self.agenda_data_stack = QtWidgets.QStackedWidget(parent=self.agendaJournsDataViewPage)
        self.agenda_data_stack.setObjectName("agenda_data_stack")
        self.sunday_data = QtWidgets.QWidget()
        self.sunday_data.setObjectName("sunday_data")
        self.gridLayout_54 = QtWidgets.QGridLayout(self.sunday_data)
        self.gridLayout_54.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_54.setSpacing(0)
        self.gridLayout_54.setObjectName("gridLayout_54")
        self.sun_table = QtWidgets.QTableView(parent=self.sunday_data)
        self.sun_table.setStyleSheet("QTableView {\n"
"background-color: transparent;\n"
"alternate-background-color: rgb(100, 157, 220);\n"
"selection-background-color: #7e57c2;\n"
"gridline-color:transparent;color:rgb(245,245,245);\n"
"}\n"
"\n"
"QTableView::item {\n"
"padding: 1px;\n"
"background:rgb(229, 77, 60);\n"
"}\n"
"QTableView::item:selected {\n"
"color: #fff;\n"
"background:rgb(23, 23, 23);\n"
"}")
        self.sun_table.setShowGrid(False)
        self.sun_table.setSortingEnabled(True)
        self.sun_table.setObjectName("sun_table")
        self.sun_table.horizontalHeader().setCascadingSectionResizes(True)
        self.sun_table.horizontalHeader().setDefaultSectionSize(50)
        self.sun_table.horizontalHeader().setMinimumSectionSize(25)
        self.sun_table.horizontalHeader().setStretchLastSection(True)
        self.sun_table.verticalHeader().setCascadingSectionResizes(True)
        self.sun_table.verticalHeader().setSortIndicatorShown(False)
        self.sun_table.verticalHeader().setStretchLastSection(False)
        self.gridLayout_54.addWidget(self.sun_table, 0, 0, 1, 1)
        self.agenda_data_stack.addWidget(self.sunday_data)
        self.monTableView = QtWidgets.QWidget()
        self.monTableView.setObjectName("monTableView")
        self.gridLayout_102 = QtWidgets.QGridLayout(self.monTableView)
        self.gridLayout_102.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_102.setSpacing(0)
        self.gridLayout_102.setObjectName("gridLayout_102")
        self.frame_80 = QtWidgets.QFrame(parent=self.monTableView)
        self.frame_80.setObjectName("frame_80")
        self.verticalLayout_12 = QtWidgets.QVBoxLayout(self.frame_80)
        self.verticalLayout_12.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_12.setSpacing(0)
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.mon_table = QtWidgets.QTableView(parent=self.frame_80)
        self.mon_table.setStyleSheet("QTableView {\n"
"background-color: transparent;\n"
"alternate-background-color: rgb(100, 157, 220);\n"
"selection-background-color: #7e57c2;\n"
"gridline-color:transparent;color:rgb(245,245,245);\n"
"}\n"
"\n"
"QTableView::item {\n"
"padding: 1px;\n"
"background:rgb(228, 78, 113);\n"
"}\n"
"QTableView::item:selected {\n"
"color: #fff;\n"
"background:rgb(23, 23, 23);\n"
"}")
        self.mon_table.setShowGrid(False)
        self.mon_table.setSortingEnabled(True)
        self.mon_table.setObjectName("mon_table")
        self.mon_table.horizontalHeader().setCascadingSectionResizes(True)
        self.mon_table.horizontalHeader().setDefaultSectionSize(50)
        self.mon_table.horizontalHeader().setMinimumSectionSize(25)
        self.mon_table.horizontalHeader().setStretchLastSection(True)
        self.mon_table.verticalHeader().setCascadingSectionResizes(True)
        self.mon_table.verticalHeader().setSortIndicatorShown(False)
        self.mon_table.verticalHeader().setStretchLastSection(False)
        self.verticalLayout_12.addWidget(self.mon_table)
        self.gridLayout_102.addWidget(self.frame_80, 0, 0, 1, 1)
        self.agenda_data_stack.addWidget(self.monTableView)
        self.tuesTable = QtWidgets.QWidget()
        self.tuesTable.setObjectName("tuesTable")
        self.gridLayout_103 = QtWidgets.QGridLayout(self.tuesTable)
        self.gridLayout_103.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_103.setSpacing(0)
        self.gridLayout_103.setObjectName("gridLayout_103")
        self.frame_81 = QtWidgets.QFrame(parent=self.tuesTable)
        self.frame_81.setObjectName("frame_81")
        self.verticalLayout_16 = QtWidgets.QVBoxLayout(self.frame_81)
        self.verticalLayout_16.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_16.setSpacing(0)
        self.verticalLayout_16.setObjectName("verticalLayout_16")
        self.tues_table = QtWidgets.QTableView(parent=self.frame_81)
        self.tues_table.setStyleSheet("QTableView {\n"
"background-color: transparent;\n"
"alternate-background-color: rgb(100, 157, 220);\n"
"selection-background-color: #7e57c2;\n"
"gridline-color:transparent;color:rgb(245,245,245);\n"
"}\n"
"\n"
"QTableView::item {\n"
"padding: 1px;\n"
"background:rgb(215, 95, 161);\n"
"}\n"
"QTableView::item:selected {\n"
"color: #fff;\n"
"background:rgb(23, 23, 23);\n"
"}")
        self.tues_table.setShowGrid(False)
        self.tues_table.setSortingEnabled(True)
        self.tues_table.setObjectName("tues_table")
        self.tues_table.horizontalHeader().setCascadingSectionResizes(True)
        self.tues_table.horizontalHeader().setDefaultSectionSize(50)
        self.tues_table.horizontalHeader().setMinimumSectionSize(25)
        self.tues_table.horizontalHeader().setStretchLastSection(True)
        self.tues_table.verticalHeader().setCascadingSectionResizes(True)
        self.tues_table.verticalHeader().setSortIndicatorShown(False)
        self.tues_table.verticalHeader().setStretchLastSection(False)
        self.verticalLayout_16.addWidget(self.tues_table)
        self.gridLayout_103.addWidget(self.frame_81, 0, 0, 1, 1)
        self.agenda_data_stack.addWidget(self.tuesTable)
        self.wed_data = QtWidgets.QWidget()
        self.wed_data.setObjectName("wed_data")
        self.gridLayout_104 = QtWidgets.QGridLayout(self.wed_data)
        self.gridLayout_104.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_104.setSpacing(0)
        self.gridLayout_104.setObjectName("gridLayout_104")
        self.frame_83 = QtWidgets.QFrame(parent=self.wed_data)
        self.frame_83.setObjectName("frame_83")
        self.verticalLayout_17 = QtWidgets.QVBoxLayout(self.frame_83)
        self.verticalLayout_17.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_17.setSpacing(0)
        self.verticalLayout_17.setObjectName("verticalLayout_17")
        self.wed_table = QtWidgets.QTableView(parent=self.frame_83)
        self.wed_table.setStyleSheet("QTableView {\n"
"background-color: transparent;\n"
"alternate-background-color: rgb(100, 157, 220);\n"
"selection-background-color: #7e57c2;\n"
"gridline-color:transparent;color:rgb(245,245,245);\n"
"}\n"
"\n"
"QTableView::item {\n"
"padding: 1px;\n"
"background:rgb(168, 105, 175);\n"
"}\n"
"QTableView::item:selected {\n"
"color: #fff;\n"
"background:rgb(23, 23, 23);\n"
"}")
        self.wed_table.setShowGrid(False)
        self.wed_table.setSortingEnabled(True)
        self.wed_table.setObjectName("wed_table")
        self.wed_table.horizontalHeader().setCascadingSectionResizes(True)
        self.wed_table.horizontalHeader().setDefaultSectionSize(50)
        self.wed_table.horizontalHeader().setMinimumSectionSize(25)
        self.wed_table.horizontalHeader().setStretchLastSection(True)
        self.wed_table.verticalHeader().setCascadingSectionResizes(True)
        self.wed_table.verticalHeader().setSortIndicatorShown(False)
        self.verticalLayout_17.addWidget(self.wed_table)
        self.gridLayout_104.addWidget(self.frame_83, 0, 0, 1, 1)
        self.agenda_data_stack.addWidget(self.wed_data)
        self.thurs_data = QtWidgets.QWidget()
        self.thurs_data.setObjectName("thurs_data")
        self.gridLayout_105 = QtWidgets.QGridLayout(self.thurs_data)
        self.gridLayout_105.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_105.setSpacing(0)
        self.gridLayout_105.setObjectName("gridLayout_105")
        self.frame_85 = QtWidgets.QFrame(parent=self.thurs_data)
        self.frame_85.setObjectName("frame_85")
        self.verticalLayout_18 = QtWidgets.QVBoxLayout(self.frame_85)
        self.verticalLayout_18.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_18.setSpacing(0)
        self.verticalLayout_18.setObjectName("verticalLayout_18")
        self.thurs_table = QtWidgets.QTableView(parent=self.frame_85)
        self.thurs_table.setStyleSheet("QTableView {\n"
"background-color: transparent;\n"
"alternate-background-color: rgb(100, 157, 220);\n"
"selection-background-color: #7e57c2;\n"
"gridline-color:transparent;color:rgb(245,245,245);\n"
"}\n"
"\n"
"QTableView::item {\n"
"padding: 1px;\n"
"background:rgb(157, 138, 215);\n"
"}\n"
"QTableView::item:selected {\n"
"color: #fff;\n"
"background:rgb(23, 23, 23);\n"
"}")
        self.thurs_table.setShowGrid(False)
        self.thurs_table.setSortingEnabled(True)
        self.thurs_table.setObjectName("thurs_table")
        self.thurs_table.horizontalHeader().setCascadingSectionResizes(True)
        self.thurs_table.horizontalHeader().setDefaultSectionSize(50)
        self.thurs_table.horizontalHeader().setMinimumSectionSize(25)
        self.thurs_table.horizontalHeader().setStretchLastSection(True)
        self.thurs_table.verticalHeader().setCascadingSectionResizes(True)
        self.thurs_table.verticalHeader().setSortIndicatorShown(False)
        self.verticalLayout_18.addWidget(self.thurs_table)
        self.gridLayout_105.addWidget(self.frame_85, 0, 0, 1, 1)
        self.agenda_data_stack.addWidget(self.thurs_data)
        self.fri_data = QtWidgets.QWidget()
        self.fri_data.setObjectName("fri_data")
        self.gridLayout_106 = QtWidgets.QGridLayout(self.fri_data)
        self.gridLayout_106.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_106.setSpacing(0)
        self.gridLayout_106.setObjectName("gridLayout_106")
        self.frame_87 = QtWidgets.QFrame(parent=self.fri_data)
        self.frame_87.setObjectName("frame_87")
        self.verticalLayout_19 = QtWidgets.QVBoxLayout(self.frame_87)
        self.verticalLayout_19.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_19.setSpacing(0)
        self.verticalLayout_19.setObjectName("verticalLayout_19")
        self.fri_table = QtWidgets.QTableView(parent=self.frame_87)
        self.fri_table.setStyleSheet("QTableView {\n"
"background-color: transparent;\n"
"alternate-background-color: rgb(100, 157, 220);\n"
"selection-background-color: #7e57c2;\n"
"gridline-color:transparent;color:rgb(245,245,245);\n"
"}\n"
"\n"
"QTableView::item {\n"
"padding: 1px;\n"
"background:rgb(132, 153, 217);\n"
"}\n"
"QTableView::item:selected {\n"
"color: #fff;\n"
"background:rgb(23, 23, 23);\n"
"}")
        self.fri_table.setShowGrid(False)
        self.fri_table.setSortingEnabled(True)
        self.fri_table.setObjectName("fri_table")
        self.fri_table.horizontalHeader().setCascadingSectionResizes(True)
        self.fri_table.horizontalHeader().setDefaultSectionSize(50)
        self.fri_table.horizontalHeader().setMinimumSectionSize(25)
        self.fri_table.horizontalHeader().setStretchLastSection(True)
        self.fri_table.verticalHeader().setCascadingSectionResizes(True)
        self.fri_table.verticalHeader().setSortIndicatorShown(False)
        self.verticalLayout_19.addWidget(self.fri_table)
        self.gridLayout_106.addWidget(self.frame_87, 0, 0, 1, 1)
        self.agenda_data_stack.addWidget(self.fri_data)
        self.sat_data = QtWidgets.QWidget()
        self.sat_data.setObjectName("sat_data")
        self.gridLayout_107 = QtWidgets.QGridLayout(self.sat_data)
        self.gridLayout_107.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_107.setSpacing(0)
        self.gridLayout_107.setObjectName("gridLayout_107")
        self.frame_89 = QtWidgets.QFrame(parent=self.sat_data)
        self.frame_89.setObjectName("frame_89")
        self.verticalLayout_20 = QtWidgets.QVBoxLayout(self.frame_89)
        self.verticalLayout_20.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_20.setSpacing(0)
        self.verticalLayout_20.setObjectName("verticalLayout_20")
        self.sat_table = QtWidgets.QTableView(parent=self.frame_89)
        self.sat_table.setStyleSheet("QTableView {\n"
"background-color: transparent;\n"
"alternate-background-color: rgb(100, 157, 220);\n"
"selection-background-color: #7e57c2;\n"
"gridline-color:transparent;color:rgb(245,245,245);\n"
"}\n"
"\n"
"QTableView::item {\n"
"padding: 1px;\n"
"background:rgb(101, 128, 217);\n"
"}\n"
"QTableView::item:selected {\n"
"color: #fff;\n"
"background:rgb(23, 23, 23);\n"
"}")
        self.sat_table.setShowGrid(False)
        self.sat_table.setSortingEnabled(True)
        self.sat_table.setObjectName("sat_table")
        self.sat_table.horizontalHeader().setCascadingSectionResizes(True)
        self.sat_table.horizontalHeader().setDefaultSectionSize(50)
        self.sat_table.horizontalHeader().setMinimumSectionSize(25)
        self.sat_table.horizontalHeader().setStretchLastSection(True)
        self.sat_table.verticalHeader().setCascadingSectionResizes(True)
        self.sat_table.verticalHeader().setSortIndicatorShown(False)
        self.verticalLayout_20.addWidget(self.sat_table)
        self.gridLayout_107.addWidget(self.frame_89, 0, 0, 1, 1)
        self.agenda_data_stack.addWidget(self.sat_data)
        self.gridLayout_52.addWidget(self.agenda_data_stack, 1, 1, 1, 1)
        self.agendaStack.addWidget(self.agendaJournsDataViewPage)
        self.gridLayout_53.addWidget(self.agendaStack, 0, 0, 1, 1)
        self.mainStack.addWidget(self.page)
        self.bds_page = QtWidgets.QWidget()
        self.bds_page.setObjectName("bds_page")
        self.gridLayout_75 = QtWidgets.QGridLayout(self.bds_page)
        self.gridLayout_75.setContentsMargins(8, 0, 8, 0)
        self.gridLayout_75.setSpacing(0)
        self.gridLayout_75.setObjectName("gridLayout_75")
        self.mainframe = QtWidgets.QFrame(parent=self.bds_page)
        self.mainframe.setMinimumSize(QtCore.QSize(245, 0))
        self.mainframe.setObjectName("mainframe")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.mainframe)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.frame_3 = QtWidgets.QFrame(parent=self.mainframe)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_3.sizePolicy().hasHeightForWidth())
        self.frame_3.setSizePolicy(sizePolicy)
        self.frame_3.setObjectName("frame_3")
        self.gridLayout_9 = QtWidgets.QGridLayout(self.frame_3)
        self.gridLayout_9.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_9.setSpacing(4)
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.label_3 = QtWidgets.QLabel(parent=self.frame_3)
        self.label_3.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QLabel\n"
"/////////////////////////////////////////////////////////////// */\n"
"QLabel {\n"
"font-weight:300;\n"
"    color: rgb(132, 127, 239);\n"
"}\n"
"QLabel:hover {\n"
"    color: rgb(162, 157, 255);\n"
"}\n"
"")
        self.label_3.setObjectName("label_3")
        self.gridLayout_9.addWidget(self.label_3, 3, 0, 1, 1)
        self.woke_up_like = QtWidgets.QSpinBox(parent=self.frame_3)
        self.woke_up_like.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QSpinBox\n"
"/////////////////////////////////////////////////////////////// */\n"
"QSpinBox {color:rgb(132,127,239);}\n"
"QSpinBox:hover {color: rgb(192,187,255);}\n"
"QSpinBox:focus {color: rgb(162,157,255);}\n"
"")
        self.woke_up_like.setFrame(False)
        self.woke_up_like.setAlignment(QtCore.Qt.AlignmentFlag.AlignRight|QtCore.Qt.AlignmentFlag.AlignTrailing|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.woke_up_like.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.woke_up_like.setSuffix("")
        self.woke_up_like.setMinimum(0)
        self.woke_up_like.setMaximum(10)
        self.woke_up_like.setObjectName("woke_up_like")
        self.gridLayout_9.addWidget(self.woke_up_like, 5, 1, 1, 1)
        self.woke_like_lbl = QtWidgets.QLabel(parent=self.frame_3)
        self.woke_like_lbl.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QLabel\n"
"/////////////////////////////////////////////////////////////// */\n"
"QLabel {\n"
"font-weight:300;\n"
"    color: rgb(132, 127, 239);\n"
"}\n"
"QLabel:hover {\n"
"    color: rgb(162, 157, 255);\n"
"}\n"
"")
        self.woke_like_lbl.setObjectName("woke_like_lbl")
        self.gridLayout_9.addWidget(self.woke_like_lbl, 5, 0, 1, 1)
        self.sleep_quality_slider = QtWidgets.QSlider(parent=self.frame_3)
        self.sleep_quality_slider.setMinimumSize(QtCore.QSize(0, 18))
        self.sleep_quality_slider.setStyleSheet("\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QSlider Colors\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    \n"
"    QSlider::handle:horizontal {background:rgb(132,127,239);}\n"
"    QSlider::handle:horizontal:hover {background:rgb(162,157,255);}\n"
"    QSlider::handle:horizontal:pressed {background:rgb(112,107,219);}\n"
"    QSlider::groove:horizontal:hover {background:rgba(132,127,239,0.35);}\n"
"    QSlider::groove:horizontal {background:rgba(132,127,239,0.15);}\n"
"\n"
"    ")
        self.sleep_quality_slider.setMaximum(10)
        self.sleep_quality_slider.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.sleep_quality_slider.setObjectName("sleep_quality_slider")
        self.gridLayout_9.addWidget(self.sleep_quality_slider, 4, 2, 1, 2)
        self.label_2 = QtWidgets.QLabel(parent=self.frame_3)
        self.label_2.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QLabel\n"
"/////////////////////////////////////////////////////////////// */\n"
"QLabel {\n"
"font-weight:300;\n"
"    color: rgb(132, 127, 239);\n"
"}\n"
"QLabel:hover {\n"
"    color: rgb(162, 157, 255);\n"
"}\n"
"")
        self.label_2.setObjectName("label_2")
        self.gridLayout_9.addWidget(self.label_2, 2, 0, 1, 1)
        self.sleep_quality = QtWidgets.QSpinBox(parent=self.frame_3)
        self.sleep_quality.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QSpinBox\n"
"/////////////////////////////////////////////////////////////// */\n"
"QSpinBox {color:rgb(132,127,239);}\n"
"QSpinBox:hover {color: rgb(192,187,255);}\n"
"QSpinBox:focus {color: rgb(162,157,255);}\n"
"")
        self.sleep_quality.setFrame(False)
        self.sleep_quality.setAlignment(QtCore.Qt.AlignmentFlag.AlignRight|QtCore.Qt.AlignmentFlag.AlignTrailing|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.sleep_quality.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.sleep_quality.setSuffix("")
        self.sleep_quality.setMinimum(0)
        self.sleep_quality.setMaximum(10)
        self.sleep_quality.setObjectName("sleep_quality")
        self.gridLayout_9.addWidget(self.sleep_quality, 4, 1, 1, 1)
        self.woke_up_like_slider = QtWidgets.QSlider(parent=self.frame_3)
        self.woke_up_like_slider.setMinimumSize(QtCore.QSize(0, 18))
        self.woke_up_like_slider.setStyleSheet("\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QSlider Colors\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    \n"
"    QSlider::handle:horizontal {background:rgb(132,127,239);}\n"
"    QSlider::handle:horizontal:hover {background:rgb(162,157,255);}\n"
"    QSlider::handle:horizontal:pressed {background:rgb(112,107,219);}\n"
"    QSlider::groove:horizontal:hover {background:rgba(132,127,239,0.35);}\n"
"    QSlider::groove:horizontal {background:rgba(132,127,239,0.15);}\n"
"\n"
"    ")
        self.woke_up_like_slider.setMaximum(10)
        self.woke_up_like_slider.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.woke_up_like_slider.setObjectName("woke_up_like_slider")
        self.gridLayout_9.addWidget(self.woke_up_like_slider, 5, 2, 1, 2)
        self.label = QtWidgets.QLabel(parent=self.frame_3)
        self.label.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QLabel\n"
"/////////////////////////////////////////////////////////////// */\n"
"QLabel {\n"
"font-weight:300;\n"
"    color: rgb(132, 127, 239);\n"
"}\n"
"QLabel:hover {\n"
"    color: rgb(162, 157, 255);\n"
"}\n"
"")
        self.label.setObjectName("label")
        self.gridLayout_9.addWidget(self.label, 1, 0, 1, 1)
        self.time_awake = QtWidgets.QTimeEdit(parent=self.frame_3)
        self.time_awake.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QTimeEdit\n"
"/////////////////////////////////////////////////////////////// */\n"
"QTimeEdit {color:rgb(132,127,239);}\n"
"QTimeEdit:hover {color: rgb(152,147,255);}\n"
"QTimeEdit:focus {color: rgb(172,167,255);}\n"
"")
        self.time_awake.setFrame(False)
        self.time_awake.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading|QtCore.Qt.AlignmentFlag.AlignLeft|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.time_awake.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.time_awake.setObjectName("time_awake")
        self.gridLayout_9.addWidget(self.time_awake, 2, 3, 1, 1, QtCore.Qt.AlignmentFlag.AlignRight)
        self.sleep_quality_lbl = QtWidgets.QLabel(parent=self.frame_3)
        self.sleep_quality_lbl.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QLabel\n"
"/////////////////////////////////////////////////////////////// */\n"
"QLabel {\n"
"font-weight:300;\n"
"    color: rgb(132, 127, 239);\n"
"}\n"
"QLabel:hover {\n"
"    color: rgb(162, 157, 255);\n"
"}\n"
"")
        self.sleep_quality_lbl.setObjectName("sleep_quality_lbl")
        self.gridLayout_9.addWidget(self.sleep_quality_lbl, 4, 0, 1, 1)
        self.total_hours_slept = QtWidgets.QLineEdit(parent=self.frame_3)
        self.total_hours_slept.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QTimeEdit\n"
"/////////////////////////////////////////////////////////////// */\n"
"QLineEdit {color:rgb(132,127,239);border:none;}\n"
"QLineEdit:hover {color: rgb(152,147,255);border:none;}\n"
"QLineEdit:focus {color: rgb(172,167,255);border:none;}\n"
"")
        self.total_hours_slept.setFrame(False)
        self.total_hours_slept.setAlignment(QtCore.Qt.AlignmentFlag.AlignRight|QtCore.Qt.AlignmentFlag.AlignTrailing|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.total_hours_slept.setObjectName("total_hours_slept")
        self.gridLayout_9.addWidget(self.total_hours_slept, 3, 3, 1, 1)
        self.time_asleep = QtWidgets.QTimeEdit(parent=self.frame_3)
        self.time_asleep.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QTimeEdit\n"
"/////////////////////////////////////////////////////////////// */\n"
"QTimeEdit {color:rgb(132,127,239);}\n"
"QTimeEdit:hover {color: rgb(152,147,255);}\n"
"QTimeEdit:focus {color: rgb(172,167,255);}\n"
"")
        self.time_asleep.setFrame(False)
        self.time_asleep.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading|QtCore.Qt.AlignmentFlag.AlignLeft|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.time_asleep.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.time_asleep.setObjectName("time_asleep")
        self.gridLayout_9.addWidget(self.time_asleep, 1, 3, 1, 1, QtCore.Qt.AlignmentFlag.AlignRight)
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_9.addItem(spacerItem2, 0, 0, 1, 4)
        self.verticalLayout.addWidget(self.frame_3)
        self.diet_input_frame = QtWidgets.QFrame(parent=self.mainframe)
        self.diet_input_frame.setObjectName("diet_input_frame")
        self.gridLayout_12 = QtWidgets.QGridLayout(self.diet_input_frame)
        self.gridLayout_12.setContentsMargins(4, 4, 4, 0)
        self.gridLayout_12.setHorizontalSpacing(0)
        self.gridLayout_12.setObjectName("gridLayout_12")
        self.frame_4 = QtWidgets.QFrame(parent=self.diet_input_frame)
        self.frame_4.setStyleSheet("QFrame {background: transparent;}\n"
"QPushButton {\n"
"padding:4px;\n"
"border:2px solid rgb(90,98,200);\n"
"background:transparent;\n"
"\n"
"}\n"
"QPushButton:hover {\n"
"margin-top:1px;\n"
"margin-left:1px;\n"
"border:2px solid rgb(90,98,200);\n"
"background:rgb(90,98,200);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    margin-top:0px;\n"
"    margin-left:0px;border:2px solid rgb(90,98,200);\n"
"}")
        self.frame_4.setObjectName("frame_4")
        self.gridLayout_10 = QtWidgets.QGridLayout(self.frame_4)
        self.gridLayout_10.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_10.setSpacing(0)
        self.gridLayout_10.setObjectName("gridLayout_10")
        self.eight_ounce_cup = QtWidgets.QPushButton(parent=self.frame_4)
        self.eight_ounce_cup.setStyleSheet("QPushButton {min-width:25px;\n"
"max-width:25px;\n"
"min-height:25px;\n"
"max-height:25px;\n"
"border-radius:18;\n"
"image: url(:/newPrefix/waterBottles/8ozWaterBottle.png);\n"
"}\n"
"QPushButton:hover {border-radius:17;\n"
"\n"
"image: url(:/newPrefix/waterBottles/8ozpress.png);\n"
"}\n"
"")
        self.eight_ounce_cup.setText("")
        self.eight_ounce_cup.setObjectName("eight_ounce_cup")
        self.gridLayout_10.addWidget(self.eight_ounce_cup, 0, 1, 1, 1)
        self.thirty_two_ounce_cup = QtWidgets.QPushButton(parent=self.frame_4)
        self.thirty_two_ounce_cup.setStyleSheet("QPushButton {min-width:40px;\n"
"max-width:40px;\n"
"min-height:40px;\n"
"max-height:40px;\n"
"border-radius:26;\n"
"    image: url(:/newPrefix/waterBottles/32oz.png);\n"
"}\n"
"QPushButton:hover {\n"
"border-radius:25;\n"
"image: url(:/newPrefix/waterBottles/32ozpress.png);}")
        self.thirty_two_ounce_cup.setText("")
        self.thirty_two_ounce_cup.setObjectName("thirty_two_ounce_cup")
        self.gridLayout_10.addWidget(self.thirty_two_ounce_cup, 0, 7, 1, 1)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_10.addItem(spacerItem3, 0, 4, 1, 1)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_10.addItem(spacerItem4, 0, 6, 1, 1)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_10.addItem(spacerItem5, 0, 2, 1, 1)
        self.sixteen_ounce_cup = QtWidgets.QPushButton(parent=self.frame_4)
        self.sixteen_ounce_cup.setStyleSheet("QPushButton {\n"
"min-width:30px;\n"
"max-width:30px;\n"
"min-height:30px;\n"
"max-height:30px;\n"
"border-radius:21;\n"
"image: url(:/newPrefix/waterBottles/16ozWaterbottle.png);\n"
"\n"
"}\n"
"QPushButton:hover {image: url(:/newPrefix/waterBottles/16ozpress.png);border-radius:20;}\n"
"\n"
"")
        self.sixteen_ounce_cup.setText("")
        self.sixteen_ounce_cup.setObjectName("sixteen_ounce_cup")
        self.gridLayout_10.addWidget(self.sixteen_ounce_cup, 0, 3, 1, 1)
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_10.addItem(spacerItem6, 0, 8, 1, 1)
        self.twenty_four_ounce_cup = QtWidgets.QPushButton(parent=self.frame_4)
        self.twenty_four_ounce_cup.setStyleSheet("QPushButton {\n"
"min-width:35px;\n"
"max-width:35px;\n"
"min-height:35px;\n"
"max-height:35px;\n"
"border-radius:23;\n"
"    image: url(:/newPrefix/waterBottles/24ox.png);\n"
"\n"
"}\n"
"QPushButton:hover {\n"
"image: url(:/newPrefix/waterBottles/24ozPress.png);\n"
"border-radius:22;}\n"
"")
        self.twenty_four_ounce_cup.setText("")
        self.twenty_four_ounce_cup.setIconSize(QtCore.QSize(24, 24))
        self.twenty_four_ounce_cup.setObjectName("twenty_four_ounce_cup")
        self.gridLayout_10.addWidget(self.twenty_four_ounce_cup, 0, 5, 1, 1)
        spacerItem7 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_10.addItem(spacerItem7, 0, 0, 1, 1)
        self.gridLayout_12.addWidget(self.frame_4, 2, 0, 1, 3)
        self.frame = QtWidgets.QFrame(parent=self.diet_input_frame)
        self.frame.setObjectName("frame")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.frame)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.food_eaten = QtWidgets.QLineEdit(parent=self.frame)
        self.food_eaten.setMinimumSize(QtCore.QSize(155, 0))
        self.food_eaten.setStyleSheet("QLineEdit {\n"
"    border:none;    font-size:11pt;\n"
"font-weight:12;\n"
"    color:rgb(144, 141, 255);\n"
"    background: transparent;\n"
"margin-top:4px;\n"
"margin-bottom:4px;\n"
"}\n"
"QLineEdit:hover {\n"
"border:none;\n"
"}\n"
"QLineEdit:focus {\n"
"border:none;\n"
"}\n"
"")
        self.food_eaten.setFrame(False)
        self.food_eaten.setClearButtonEnabled(True)
        self.food_eaten.setObjectName("food_eaten")
        self.horizontalLayout_6.addWidget(self.food_eaten)
        self.calories = QtWidgets.QSpinBox(parent=self.frame)
        self.calories.setMaximumSize(QtCore.QSize(45, 16777215))
        self.calories.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QTimeEdit\n"
"/////////////////////////////////////////////////////////////// */\n"
"QSpinBox {color:rgb(132,127,239);}\n"
"QSpinBox:hover {color: rgb(152,147,255);}\n"
"QSpinBox:focus {color: rgb(172,167,255);}\n"
"")
        self.calories.setFrame(False)
        self.calories.setAlignment(QtCore.Qt.AlignmentFlag.AlignRight|QtCore.Qt.AlignmentFlag.AlignTrailing|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.calories.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.calories.setMaximum(2000)
        self.calories.setSingleStep(10)
        self.calories.setObjectName("calories")
        self.horizontalLayout_6.addWidget(self.calories)
        self.gridLayout_12.addWidget(self.frame, 1, 0, 1, 1)
        self.verticalLayout.addWidget(self.diet_input_frame)
        self.commit_container = QtWidgets.QFrame(parent=self.mainframe)
        self.commit_container.setStyleSheet("QPushButton {\n"
"color:rgb(90,98,200);\n"
"font-weight:bold;\n"
"font-size:8pt;\n"
"border-radius: 23px;\n"
"padding: 6px;\n"
"min-width: 30px;\n"
"max-width: 30px;\n"
"min-height: 30px;\n"
"max-height: 30px;\n"
"border:2px solid rgb(90,98,200);\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"border-radius: 22px;\n"
"color: rgb(62, 59, 120);\n"
"margin-top:1px;\n"
"margin-left:1px;\n"
"border-color:rgb(120,128,230);\n"
"background-color: rgb(120,128,230);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"color: transparent;\n"
"margin: 0px;\n"
"padding:0px;\n"
"border-color:rgb(90,98,200);\n"
"background-color: rgb(90,98,200);\n"
"/*background-color: rgb(40,48,150);*/\n"
"}        ")
        self.commit_container.setObjectName("commit_container")
        self.gridLayout_56 = QtWidgets.QGridLayout(self.commit_container)
        self.gridLayout_56.setContentsMargins(0, 6, 0, 0)
        self.gridLayout_56.setSpacing(0)
        self.gridLayout_56.setObjectName("gridLayout_56")
        self.shower_c = QtWidgets.QPushButton(parent=self.commit_container)
        self.shower_c.setStyleSheet("QPushButton {\n"
"image:url(:/newPrefix/blueShowerhead.png);\n"
"\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"\n"
"image:url(:/newPrefix/Mac App icon 30.png);\n"
"}\n"
"\n"
"")
        self.shower_c.setText("")
        self.shower_c.setIconSize(QtCore.QSize(24, 24))
        self.shower_c.setCheckable(False)
        self.shower_c.setFlat(True)
        self.shower_c.setObjectName("shower_c")
        self.gridLayout_56.addWidget(self.shower_c, 1, 1, 1, 1)
        spacerItem8 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_56.addItem(spacerItem8, 0, 3, 2, 1)
        spacerItem9 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_56.addItem(spacerItem9, 0, 5, 2, 1)
        spacerItem10 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_56.addItem(spacerItem10, 0, 7, 2, 1)
        self.yoga_commit = QtWidgets.QPushButton(parent=self.commit_container)
        self.yoga_commit.setStyleSheet("QPushButton {\n"
"    image: url(:/newPrefix/blueYogai.png);\n"
"\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"\n"
"    image: url(:/newPrefix/basics2Wh.png);\n"
"\n"
"\n"
"}\n"
"")
        self.yoga_commit.setText("")
        self.yoga_commit.setIconSize(QtCore.QSize(24, 24))
        self.yoga_commit.setCheckable(False)
        self.yoga_commit.setFlat(True)
        self.yoga_commit.setObjectName("yoga_commit")
        self.gridLayout_56.addWidget(self.yoga_commit, 1, 6, 1, 1)
        spacerItem11 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_56.addItem(spacerItem11, 0, 0, 2, 1)
        self.teeth_commit = QtWidgets.QPushButton(parent=self.commit_container)
        self.teeth_commit.setStyleSheet("\n"
"QPushButton {\n"
"min-height:40px;\n"
"max-height:40px;\n"
"min-width:40px;\n"
"max-width:40px;\n"
"border-radius:28;\n"
"image:url(:/newPrefix/blueteeth.png);\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"border-radius:27;\n"
"image:url(:/newPrefix/teethPressed.png);}\n"
"")
        self.teeth_commit.setText("")
        self.teeth_commit.setIconSize(QtCore.QSize(24, 24))
        self.teeth_commit.setCheckable(False)
        self.teeth_commit.setFlat(True)
        self.teeth_commit.setObjectName("teeth_commit")
        self.gridLayout_56.addWidget(self.teeth_commit, 1, 4, 1, 1)
        spacerItem12 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_56.addItem(spacerItem12, 2, 4, 1, 1)
        self.verticalLayout.addWidget(self.commit_container)
        self.hide_check_frame = QtWidgets.QFrame(parent=self.mainframe)
        self.hide_check_frame.setObjectName("hide_check_frame")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.hide_check_frame)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setSpacing(0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.shower_check = QtWidgets.QCheckBox(parent=self.hide_check_frame)
        self.shower_check.setText("")
        self.shower_check.setObjectName("shower_check")
        self.horizontalLayout_2.addWidget(self.shower_check)
        self.tooth_check = QtWidgets.QCheckBox(parent=self.hide_check_frame)
        self.tooth_check.setText("")
        self.tooth_check.setObjectName("tooth_check")
        self.horizontalLayout_2.addWidget(self.tooth_check)
        self.exerc_check = QtWidgets.QCheckBox(parent=self.hide_check_frame)
        self.exerc_check.setText("")
        self.exerc_check.setObjectName("exerc_check")
        self.horizontalLayout_2.addWidget(self.exerc_check)
        self.verticalLayout.addWidget(self.hide_check_frame)
        self.gridLayout_75.addWidget(self.mainframe, 0, 0, 1, 1)
        self.mainStack.addWidget(self.bds_page)
        self.lilys_mod = QtWidgets.QWidget()
        self.lilys_mod.setObjectName("lilys_mod")
        self.gridLayout_40 = QtWidgets.QGridLayout(self.lilys_mod)
        self.gridLayout_40.setObjectName("gridLayout_40")
        spacerItem13 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_40.addItem(spacerItem13, 0, 0, 1, 1)
        spacerItem14 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_40.addItem(spacerItem14, 2, 0, 1, 1)
        self.lilyStack = QtWidgets.QFrame(parent=self.lilys_mod)
        self.lilyStack.setObjectName("lilyStack")
        self.gridLayout_22 = QtWidgets.QGridLayout(self.lilyStack)
        self.gridLayout_22.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_22.setSpacing(0)
        self.gridLayout_22.setObjectName("gridLayout_22")
        self.button_catcher_frame = QtWidgets.QFrame(parent=self.lilyStack)
        self.button_catcher_frame.setObjectName("button_catcher_frame")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.button_catcher_frame)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setSpacing(0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        spacerItem15 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem15)
        self.lily_walk_btn = QtWidgets.QPushButton(parent=self.button_catcher_frame)
        self.lily_walk_btn.setStyleSheet("\n"
"QPushButton {\n"
"border:none;\n"
"image: url(:/newPrefix/lily_walk_norm.png);\n"
"max-width:38px;\n"
"min-width:38px;\n"
"max-height:38px;\n"
"min-height:38px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"image: url(:/newPrefix/lily_walk_one_hover.png);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"image: url(:/newPrefix/lilyWalkClicked.png);\n"
"}\n"
"\n"
"\n"
"")
        self.lily_walk_btn.setText("")
        self.lily_walk_btn.setIconSize(QtCore.QSize(22, 22))
        self.lily_walk_btn.setCheckable(False)
        self.lily_walk_btn.setObjectName("lily_walk_btn")
        self.horizontalLayout_3.addWidget(self.lily_walk_btn)
        spacerItem16 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem16)
        self.lily_ate_check = QtWidgets.QPushButton(parent=self.button_catcher_frame)
        self.lily_ate_check.setStyleSheet("\n"
"QPushButton {\n"
"border:none;\n"
"image: url(:/newPrefix/lilyasdfas.png);\n"
"max-width:38px;\n"
"min-width:38px;\n"
"max-height:38px;\n"
"min-height:38px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"image: url(:/newPrefix/lilydiethover2.png);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"image: url(:/newPrefix/Mac App icon 46.png);\n"
"}\n"
"\n"
"\n"
"")
        self.lily_ate_check.setText("")
        self.lily_ate_check.setCheckable(False)
        self.lily_ate_check.setChecked(False)
        self.lily_ate_check.setFlat(True)
        self.lily_ate_check.setObjectName("lily_ate_check")
        self.horizontalLayout_3.addWidget(self.lily_ate_check)
        spacerItem17 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem17)
        self.gridLayout_22.addWidget(self.button_catcher_frame, 0, 0, 1, 1)
        self.walk_mood_rate_frame = QtWidgets.QFrame(parent=self.lilyStack)
        self.walk_mood_rate_frame.setObjectName("walk_mood_rate_frame")
        self.gridLayout_33 = QtWidgets.QGridLayout(self.walk_mood_rate_frame)
        self.gridLayout_33.setContentsMargins(0, 6, 0, 6)
        self.gridLayout_33.setVerticalSpacing(6)
        self.gridLayout_33.setObjectName("gridLayout_33")
        self.lily_behavior = QtWidgets.QSpinBox(parent=self.walk_mood_rate_frame)
        self.lily_behavior.setFrame(False)
        self.lily_behavior.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lily_behavior.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.lily_behavior.setSuffix("")
        self.lily_behavior.setMinimum(0)
        self.lily_behavior.setMaximum(100)
        self.lily_behavior.setObjectName("lily_behavior")
        self.gridLayout_33.addWidget(self.lily_behavior, 1, 1, 1, 1)
        self.lily_behavior_slider = QtWidgets.QSlider(parent=self.walk_mood_rate_frame)
        self.lily_behavior_slider.setStyleSheet("QSlider::handle:horizontal {\n"
"    background:rgb(205,178,214);\n"
"}\n"
"QSlider::handle:horizontal:hover {\n"
"    background:rgb(235,208,244);\n"
"}\n"
"QSlider::handle:horizontal:pressed {\n"
"    background:rgb(185,158,194);\n"
"}\n"
"QSlider::groove:horizontal:hover {\n"
"    background:rgba(205,178,214,45);\n"
"}")
        self.lily_behavior_slider.setMinimum(0)
        self.lily_behavior_slider.setMaximum(100)
        self.lily_behavior_slider.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.lily_behavior_slider.setTickPosition(QtWidgets.QSlider.TickPosition.NoTicks)
        self.lily_behavior_slider.setObjectName("lily_behavior_slider")
        self.gridLayout_33.addWidget(self.lily_behavior_slider, 1, 2, 1, 4)
        self.lily_walk_note = QtWidgets.QLineEdit(parent=self.walk_mood_rate_frame)
        self.lily_walk_note.setStyleSheet("\n"
"/* //////////////////////////////////////////////////////////////////////////////////////////\n"
"QComboBox Style Default\n"
"////////////////////////////////////////////////////////////////////////////////////////// */\n"
"QLineEdit {    font-size:11pt;\n"
"    border:none;\n"
"    color:rgb(160,130,160);\n"
"}\n"
"\n"
"QLineEdit:hover {\n"
"    color: rgb(200,170,200);\n"
"}\n"
"\n"
"QLineEdit:focus {\n"
"    color: rgb(180,150,180);\n"
"}\n"
"    ")
        self.lily_walk_note.setFrame(False)
        self.lily_walk_note.setClearButtonEnabled(False)
        self.lily_walk_note.setObjectName("lily_walk_note")
        self.gridLayout_33.addWidget(self.lily_walk_note, 5, 0, 1, 5)
        self.lily_walk_note_commit_btn = QtWidgets.QPushButton(parent=self.walk_mood_rate_frame)
        self.lily_walk_note_commit_btn.setStyleSheet("QPushButton {\n"
"border:none;\n"
"image: url(:/newPrefix/lily_walk_norm.png);\n"
"max-width:15px;\n"
"min-width:15px;\n"
"max-height:15px;\n"
"min-height:15px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"image: url(:/newPrefix/lily_walk_one_hover.png);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"image: url(:/newPrefix/lily_walk_checked_one.png);\n"
"}\n"
"\n"
"\n"
"")
        self.lily_walk_note_commit_btn.setText("")
        self.lily_walk_note_commit_btn.setIconSize(QtCore.QSize(22, 22))
        self.lily_walk_note_commit_btn.setCheckable(False)
        self.lily_walk_note_commit_btn.setObjectName("lily_walk_note_commit_btn")
        self.gridLayout_33.addWidget(self.lily_walk_note_commit_btn, 5, 5, 1, 1)
        self.na_42 = QtWidgets.QLabel(parent=self.walk_mood_rate_frame)
        self.na_42.setStyleSheet("\n"
"\n"
"QLabel {\n"
"font-weight:bold;\n"
"color:rgb(205,178,214);\n"
"}\n"
"QLabel:hover {\n"
"color: rgb(250,223,255);\n"
"}\n"
"    ")
        self.na_42.setObjectName("na_42")
        self.gridLayout_33.addWidget(self.na_42, 1, 0, 1, 1)
        self.na_45 = QtWidgets.QLabel(parent=self.walk_mood_rate_frame)
        self.na_45.setStyleSheet("QLabel {\n"
"background:transparent;\n"
"font-weight:bold;\n"
"color:rgb(144,114,144);\n"
"}\n"
"QLabel:hover {\n"
"color:rgb(174,144,174);\n"
"}")
        self.na_45.setObjectName("na_45")
        self.gridLayout_33.addWidget(self.na_45, 3, 0, 1, 1)
        self.lily_gait = QtWidgets.QSpinBox(parent=self.walk_mood_rate_frame)
        self.lily_gait.setFrame(False)
        self.lily_gait.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lily_gait.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.lily_gait.setSuffix("")
        self.lily_gait.setMinimum(0)
        self.lily_gait.setMaximum(100)
        self.lily_gait.setObjectName("lily_gait")
        self.gridLayout_33.addWidget(self.lily_gait, 3, 1, 1, 1)
        self.lily_gait_slider = QtWidgets.QSlider(parent=self.walk_mood_rate_frame)
        self.lily_gait_slider.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QSlider Colors\n"
"/////////////////////////////////////////////////////////////// */\n"
"\n"
"QSlider::handle:horizontal {background:rgb(144,114,144);}\n"
"QSlider::handle:horizontal:hover {background:rgb(174,144,174);}\n"
"QSlider::handle:horizontal:pressed {background:rgb(124,94,124);}\n"
"QSlider::groove:horizontal:hover {background:rgba(144,114,144,0.25);}\n"
"")
        self.lily_gait_slider.setMinimum(0)
        self.lily_gait_slider.setMaximum(100)
        self.lily_gait_slider.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.lily_gait_slider.setTickPosition(QtWidgets.QSlider.TickPosition.NoTicks)
        self.lily_gait_slider.setObjectName("lily_gait_slider")
        self.gridLayout_33.addWidget(self.lily_gait_slider, 3, 2, 1, 4)
        self.gridLayout_22.addWidget(self.walk_mood_rate_frame, 1, 0, 1, 1)
        self.lily_diet_mood_input_container = QtWidgets.QFrame(parent=self.lilyStack)
        self.lily_diet_mood_input_container.setObjectName("lily_diet_mood_input_container")
        self.gridLayout_23 = QtWidgets.QGridLayout(self.lily_diet_mood_input_container)
        self.gridLayout_23.setContentsMargins(0, 0, 0, 6)
        self.gridLayout_23.setSpacing(6)
        self.gridLayout_23.setObjectName("gridLayout_23")
        self.na_46 = QtWidgets.QLabel(parent=self.lily_diet_mood_input_container)
        self.na_46.setMaximumSize(QtCore.QSize(100, 16777215))
        self.na_46.setStyleSheet("QLabel {\n"
"font-weight:bold;\n"
"background:transparent;\n"
"color:rgb(160,130,160);\n"
"}\n"
"QLabel:hover {\n"
"color: rgb(210,180,210);\n"
"}\n"
" ")
        self.na_46.setObjectName("na_46")
        self.gridLayout_23.addWidget(self.na_46, 9, 0, 1, 1)
        self.lily_mood_slider = QtWidgets.QSlider(parent=self.lily_diet_mood_input_container)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lily_mood_slider.sizePolicy().hasHeightForWidth())
        self.lily_mood_slider.setSizePolicy(sizePolicy)
        self.lily_mood_slider.setStyleSheet("")
        self.lily_mood_slider.setMinimum(0)
        self.lily_mood_slider.setMaximum(10)
        self.lily_mood_slider.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.lily_mood_slider.setTickPosition(QtWidgets.QSlider.TickPosition.NoTicks)
        self.lily_mood_slider.setObjectName("lily_mood_slider")
        self.gridLayout_23.addWidget(self.lily_mood_slider, 9, 2, 1, 2)
        self.na_43 = QtWidgets.QLabel(parent=self.lily_diet_mood_input_container)
        self.na_43.setMaximumSize(QtCore.QSize(100, 16777215))
        self.na_43.setStyleSheet("QLabel {\n"
"font-weight:bold;\n"
"background:transparent;\n"
"color:rgb(130,100,130);\n"
"}\n"
"QLabel:hover {\n"
"color: rgb(180,160,180);\n"
"}\n"
"    ")
        self.na_43.setObjectName("na_43")
        self.gridLayout_23.addWidget(self.na_43, 10, 0, 1, 1)
        self.lily_time_in_room_slider = QtWidgets.QSlider(parent=self.lily_diet_mood_input_container)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lily_time_in_room_slider.sizePolicy().hasHeightForWidth())
        self.lily_time_in_room_slider.setSizePolicy(sizePolicy)
        self.lily_time_in_room_slider.setStyleSheet("")
        self.lily_time_in_room_slider.setMinimum(0)
        self.lily_time_in_room_slider.setMaximum(100)
        self.lily_time_in_room_slider.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.lily_time_in_room_slider.setTickPosition(QtWidgets.QSlider.TickPosition.NoTicks)
        self.lily_time_in_room_slider.setObjectName("lily_time_in_room_slider")
        self.gridLayout_23.addWidget(self.lily_time_in_room_slider, 8, 2, 1, 2)
        self.lily_energy = QtWidgets.QSpinBox(parent=self.lily_diet_mood_input_container)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lily_energy.sizePolicy().hasHeightForWidth())
        self.lily_energy.setSizePolicy(sizePolicy)
        self.lily_energy.setMaximumSize(QtCore.QSize(35, 16777215))
        self.lily_energy.setStyleSheet("")
        self.lily_energy.setFrame(False)
        self.lily_energy.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lily_energy.setReadOnly(False)
        self.lily_energy.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.lily_energy.setMinimum(-10)
        self.lily_energy.setMaximum(10)
        self.lily_energy.setObjectName("lily_energy")
        self.gridLayout_23.addWidget(self.lily_energy, 11, 1, 1, 1)
        self.lily_energy_slider = QtWidgets.QSlider(parent=self.lily_diet_mood_input_container)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lily_energy_slider.sizePolicy().hasHeightForWidth())
        self.lily_energy_slider.setSizePolicy(sizePolicy)
        self.lily_energy_slider.setStyleSheet("")
        self.lily_energy_slider.setMinimum(0)
        self.lily_energy_slider.setMaximum(10)
        self.lily_energy_slider.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.lily_energy_slider.setTickPosition(QtWidgets.QSlider.TickPosition.NoTicks)
        self.lily_energy_slider.setObjectName("lily_energy_slider")
        self.gridLayout_23.addWidget(self.lily_energy_slider, 11, 2, 1, 2)
        self.lily_activity = QtWidgets.QSpinBox(parent=self.lily_diet_mood_input_container)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lily_activity.sizePolicy().hasHeightForWidth())
        self.lily_activity.setSizePolicy(sizePolicy)
        self.lily_activity.setMaximumSize(QtCore.QSize(35, 16777215))
        self.lily_activity.setStyleSheet("")
        self.lily_activity.setFrame(False)
        self.lily_activity.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lily_activity.setReadOnly(False)
        self.lily_activity.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.lily_activity.setMinimum(-10)
        self.lily_activity.setMaximum(10)
        self.lily_activity.setObjectName("lily_activity")
        self.gridLayout_23.addWidget(self.lily_activity, 10, 1, 1, 1)
        self.na_41 = QtWidgets.QLabel(parent=self.lily_diet_mood_input_container)
        self.na_41.setStyleSheet("\n"
"\n"
"QLabel {\n"
"font-weight:bold;\n"
"color:rgb(205,178,214);\n"
"}\n"
"QLabel:hover {\n"
"color: rgb(250,223,255);\n"
"}\n"
"    ")
        self.na_41.setObjectName("na_41")
        self.gridLayout_23.addWidget(self.na_41, 8, 0, 1, 1)
        self.lily_diet_frame = QtWidgets.QFrame(parent=self.lily_diet_mood_input_container)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lily_diet_frame.sizePolicy().hasHeightForWidth())
        self.lily_diet_frame.setSizePolicy(sizePolicy)
        self.lily_diet_frame.setObjectName("lily_diet_frame")
        self.gridLayout_71 = QtWidgets.QGridLayout(self.lily_diet_frame)
        self.gridLayout_71.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_71.setSpacing(0)
        self.gridLayout_71.setObjectName("gridLayout_71")
        self.gridLayout_23.addWidget(self.lily_diet_frame, 1, 2, 1, 1)
        self.lily_mood = QtWidgets.QSpinBox(parent=self.lily_diet_mood_input_container)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lily_mood.sizePolicy().hasHeightForWidth())
        self.lily_mood.setSizePolicy(sizePolicy)
        self.lily_mood.setMaximumSize(QtCore.QSize(35, 16777215))
        self.lily_mood.setStyleSheet("")
        self.lily_mood.setFrame(False)
        self.lily_mood.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lily_mood.setReadOnly(False)
        self.lily_mood.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.lily_mood.setMinimum(-10)
        self.lily_mood.setMaximum(10)
        self.lily_mood.setObjectName("lily_mood")
        self.gridLayout_23.addWidget(self.lily_mood, 9, 1, 1, 1)
        self.na_44 = QtWidgets.QLabel(parent=self.lily_diet_mood_input_container)
        self.na_44.setMaximumSize(QtCore.QSize(100, 16777215))
        self.na_44.setStyleSheet("QLabel {\n"
"font-weight:bold;\n"
"background:transparent;\n"
"color:rgb(100,70,100);\n"
"}\n"
"QLabel:hover {\n"
"color: rgb(150,120,150);\n"
"}\n"
"    ")
        self.na_44.setObjectName("na_44")
        self.gridLayout_23.addWidget(self.na_44, 11, 0, 1, 1)
        self.lily_time_in_room = QtWidgets.QSpinBox(parent=self.lily_diet_mood_input_container)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lily_time_in_room.sizePolicy().hasHeightForWidth())
        self.lily_time_in_room.setSizePolicy(sizePolicy)
        self.lily_time_in_room.setMaximumSize(QtCore.QSize(35, 16777215))
        self.lily_time_in_room.setStyleSheet("")
        self.lily_time_in_room.setFrame(False)
        self.lily_time_in_room.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lily_time_in_room.setReadOnly(False)
        self.lily_time_in_room.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.lily_time_in_room.setMinimum(-100)
        self.lily_time_in_room.setMaximum(100)
        self.lily_time_in_room.setObjectName("lily_time_in_room")
        self.gridLayout_23.addWidget(self.lily_time_in_room, 8, 1, 1, 1)
        self.lily_mood_activity_slider = QtWidgets.QSlider(parent=self.lily_diet_mood_input_container)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lily_mood_activity_slider.sizePolicy().hasHeightForWidth())
        self.lily_mood_activity_slider.setSizePolicy(sizePolicy)
        self.lily_mood_activity_slider.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.ArrowCursor))
        self.lily_mood_activity_slider.setStyleSheet("")
        self.lily_mood_activity_slider.setMinimum(0)
        self.lily_mood_activity_slider.setMaximum(10)
        self.lily_mood_activity_slider.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.lily_mood_activity_slider.setTickPosition(QtWidgets.QSlider.TickPosition.NoTicks)
        self.lily_mood_activity_slider.setObjectName("lily_mood_activity_slider")
        self.gridLayout_23.addWidget(self.lily_mood_activity_slider, 10, 2, 1, 2)
        self.gridLayout_22.addWidget(self.lily_diet_mood_input_container, 2, 0, 1, 1)
        self.lily_notes = QtWidgets.QTextEdit(parent=self.lilyStack)
        self.lily_notes.setStyleSheet("\n"
"/* //////////////////////////////////////////////////////////////////////////////////////////\n"
"QComboBox Style Default\n"
"////////////////////////////////////////////////////////////////////////////////////////// */\n"
"QTextEdit {\n"
"    font-size:11pt;\n"
"    border:none;\n"
"    color:rgb(160,130,160);\n"
"}\n"
"\n"
"QTextEdit:hover {\n"
"    color: rgb(200,170,200);\n"
"}\n"
"\n"
"QTextEdit:focus {\n"
"    color: rgb(180,150,180);\n"
"}\n"
"    ")
        self.lily_notes.setTabStopDistance(20.0)
        self.lily_notes.setObjectName("lily_notes")
        self.gridLayout_22.addWidget(self.lily_notes, 4, 0, 1, 1)
        self.lily_note_commit_btn = QtWidgets.QPushButton(parent=self.lilyStack)
        self.lily_note_commit_btn.setStyleSheet("QPushButton {\n"
"border:none;\n"
"image: url(:/newPrefix/lily_walk_norm.png);\n"
"max-width:15px;\n"
"min-width:15px;\n"
"max-height:15px;\n"
"min-height:15px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"image: url(:/newPrefix/lily_walk_one_hover.png);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"image: url(:/newPrefix/lily_walk_checked_one.png);\n"
"}\n"
"\n"
"\n"
"")
        self.lily_note_commit_btn.setText("")
        self.lily_note_commit_btn.setIconSize(QtCore.QSize(22, 22))
        self.lily_note_commit_btn.setCheckable(False)
        self.lily_note_commit_btn.setObjectName("lily_note_commit_btn")
        self.gridLayout_22.addWidget(self.lily_note_commit_btn, 5, 0, 1, 1, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.gridLayout_40.addWidget(self.lilyStack, 1, 0, 1, 1)
        self.mainStack.addWidget(self.lilys_mod)
        self.mentalpage = QtWidgets.QWidget()
        self.mentalpage.setObjectName("mentalpage")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.mentalpage)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.tabWidget_3 = QtWidgets.QTabWidget(parent=self.mentalpage)
        self.tabWidget_3.setStyleSheet("QTabWidget {\n"
"    background-color: #121212;    color:#fff;\n"
"    border: none;\n"
"}\n"
"\n"
"QTabWidget::pane {\n"
"    border: none;    background-color: #121212;    color:#fff;\n"
"}\n"
"\n"
"QTabBar::tab {\n"
"    background-color: #121212;\n"
"    border: none;\n"
"    margin-left:5px;    color:#fff;    min-width:35px;\n"
"}\n"
"\n"
"QTabBar::tab:!selected {\n"
"    background-color: #121212;    color:#fff;\n"
"    font-size:10pt;\n"
"}\n"
"QTabBar::tab:selected {\n"
"    background-color: #121212;    color:#fff;\n"
"    font-size:8pt;\n"
"    font-style:italic;\n"
"    \n"
"}\n"
"QTabBar::tab:hover {\n"
"     background-color: #121212;    color:#fff;\n"
"}\n"
"\n"
"QTabBar::tab:only-one {\n"
" background-color: #121212;    color:#fff;\n"
"}\n"
"/* /////////////////////////////////////////////////////////////////////////////\n"
"QSlider\n"
"///////////////////////////////////////////////////////////////////////////// */\n"
"QSlider::groove:vertical {\n"
"border-radius: 5px;\n"
"width: 50px;\n"
"margin: 0px;\n"
"background:rgb(22, 24, 29);\n"
"}\n"
"\n"
"QSlider::groove:vertical:hover {\n"
"background: rgba(233,123,111,0.25);\n"
"}\n"
"\n"
"QSlider::handle:vertical {\n"
"background: rgb(233,123,111);\n"
"height: 20px;\n"
"width: 50px;\n"
"margin: 0px;\n"
"border-radius:5px;\n"
"}\n"
"\n"
"QSlider::add-page:vertical {\n"
"background:transparent;\n"
"}\n"
"\n"
"QSlider::handle:vertical:hover {\n"
"background-color: rgb(255,163,151);\n"
"}\n"
"\n"
"QSlider::handle:vertical:pressed {\n"
"background-color:rgb(188,78,66);\n"
"}\n"
"")
        self.tabWidget_3.setDocumentMode(False)
        self.tabWidget_3.setObjectName("tabWidget_3")
        self.tab_10 = QtWidgets.QWidget()
        self.tab_10.setObjectName("tab_10")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.tab_10)
        self.horizontalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_5.setSpacing(0)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.mmdmContainer = QtWidgets.QFrame(parent=self.tab_10)
        self.mmdmContainer.setObjectName("mmdmContainer")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.mmdmContainer)
        self.gridLayout_4.setContentsMargins(0, 8, 0, 0)
        self.gridLayout_4.setHorizontalSpacing(0)
        self.gridLayout_4.setVerticalSpacing(4)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.mood = QtWidgets.QSpinBox(parent=self.mmdmContainer)
        self.mood.setStyleSheet("\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(242,89,85);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: rgb(242,89,85);\n"
"    }\n"
"    \n"
"\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QSpinBox\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QSpinBox {color:rgb(242,89,85);}\n"
"    QSpinBox:hover {color: rgb(255,149,145);}\n"
"    QSpinBox:focus {color: rgb(255,119,115);}\n"
"    ")
        self.mood.setFrame(False)
        self.mood.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.mood.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.mood.setMaximum(10)
        self.mood.setObjectName("mood")
        self.gridLayout_4.addWidget(self.mood, 0, 0, 1, 1)
        self.mania = QtWidgets.QSpinBox(parent=self.mmdmContainer)
        self.mania.setStyleSheet("\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(239,194,100);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: rgb(239,194,100);\n"
"    }\n"
"    \n"
"\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QSpinBox\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QSpinBox {color:rgb(239,194,100);}\n"
"    QSpinBox:hover {color: rgb(255,254,160);}\n"
"    QSpinBox:focus {color: rgb(255,224,130);}\n"
"    ")
        self.mania.setFrame(False)
        self.mania.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.mania.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.mania.setMaximum(10)
        self.mania.setObjectName("mania")
        self.gridLayout_4.addWidget(self.mania, 0, 1, 1, 1)
        self.depression = QtWidgets.QSpinBox(parent=self.mmdmContainer)
        self.depression.setStyleSheet("\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(103,154,201);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: rgb(103,154,201);\n"
"    }\n"
"    \n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QSpinBox\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QSpinBox {color:rgb(103,154,201);}\n"
"    QSpinBox:hover {color: rgb(163,214,255);}\n"
"    QSpinBox:focus {color: rgb(133,184,231);}\n"
"    ")
        self.depression.setFrame(False)
        self.depression.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.depression.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.depression.setMaximum(10)
        self.depression.setObjectName("depression")
        self.gridLayout_4.addWidget(self.depression, 0, 2, 1, 1)
        self.mixed_risk = QtWidgets.QSpinBox(parent=self.mmdmContainer)
        self.mixed_risk.setStyleSheet("\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(240,129,92);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: rgb(240,129,92);\n"
"    }\n"
"    \n"
"    \n"
"\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QSpinBox\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QSpinBox {color:rgb(240,129,92);}\n"
"    QSpinBox:hover {color: rgb(255,189,152);}\n"
"    QSpinBox:focus {color: rgb(255,159,122);}\n"
"    ")
        self.mixed_risk.setFrame(False)
        self.mixed_risk.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.mixed_risk.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.mixed_risk.setMaximum(10)
        self.mixed_risk.setObjectName("mixed_risk")
        self.gridLayout_4.addWidget(self.mixed_risk, 0, 3, 1, 1)
        self.mixed_risk_slider = QtWidgets.QSlider(parent=self.mmdmContainer)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.mixed_risk_slider.sizePolicy().hasHeightForWidth())
        self.mixed_risk_slider.setSizePolicy(sizePolicy)
        self.mixed_risk_slider.setStyleSheet("\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(240,129,92);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: rgb(240,129,92);\n"
"    }\n"
"    \n"
"\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QSlider Colors\n"
"/////////////////////////////////////////////////////////////// */\n"
"\n"
"QSlider::handle:vertical {\n"
"background:rgb(243,131,93);}\n"
"QSlider::handle:vertical:hover {background:rgb(255,171,133);}\n"
"QSlider::handle:vertical:pressed {\n"
"background:rgb(193,81,43);}\n"
"QSlider::groove:vertical:hover {background:rgba(243,131,93,0.25);}\n"
"QSlider::groove:vertical {background:rgba(243,131,93,0.15);}\n"
"")
        self.mixed_risk_slider.setMaximum(10)
        self.mixed_risk_slider.setInvertedAppearance(False)
        self.mixed_risk_slider.setInvertedControls(False)
        self.mixed_risk_slider.setTickPosition(QtWidgets.QSlider.TickPosition.NoTicks)
        self.mixed_risk_slider.setObjectName("mixed_risk_slider")
        self.gridLayout_4.addWidget(self.mixed_risk_slider, 1, 3, 2, 1)
        self.depression_slider = QtWidgets.QSlider(parent=self.mmdmContainer)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.depression_slider.sizePolicy().hasHeightForWidth())
        self.depression_slider.setSizePolicy(sizePolicy)
        self.depression_slider.setStyleSheet("\n"
"\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(103,154,201);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: rgb(103,154,201);\n"
"    }\n"
"    \n"
"    \n"
"\n"
"\n"
"\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QSlider Colors\n"
"/////////////////////////////////////////////////////////////// */\n"
"\n"
"QSlider::handle:vertical {\n"
"background:rgb(102,155,201);}\n"
"QSlider::handle:vertical:hover {background:rgb(142,195,241);}\n"
"QSlider::handle:vertical:pressed {\n"
"background:rgb(52,105,151);}\n"
"QSlider::groove:vertical:hover {background:rgba(102,155,201,0.25);}\n"
"QSlider::groove:vertical {background:rgba(102,155,201,0.15);}\n"
"")
        self.depression_slider.setMaximum(10)
        self.depression_slider.setInvertedAppearance(False)
        self.depression_slider.setInvertedControls(False)
        self.depression_slider.setTickPosition(QtWidgets.QSlider.TickPosition.NoTicks)
        self.depression_slider.setObjectName("depression_slider")
        self.gridLayout_4.addWidget(self.depression_slider, 1, 2, 2, 1)
        self.mania_slider = QtWidgets.QSlider(parent=self.mmdmContainer)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.mania_slider.sizePolicy().hasHeightForWidth())
        self.mania_slider.setSizePolicy(sizePolicy)
        self.mania_slider.setStyleSheet("\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(239,194,100);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: rgb(239,194,100);\n"
"    }\n"
"    \n"
"\n"
"\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QSlider Colors\n"
"/////////////////////////////////////////////////////////////// */\n"
"\n"
"QSlider::handle:vertical {background:rgb(239,193,100);}\n"
"QSlider::handle:vertical:hover {background:rgb(255,233,140);}\n"
"QSlider::handle:vertical:pressed {\n"
"background:rgb(189,143,50);}\n"
"QSlider::groove:vertical:hover {background:rgba(239,193,100,0.25);}\n"
"QSlider::groove:vertical {background:rgba(239,193,100,0.15);}\n"
"\n"
"        ")
        self.mania_slider.setMaximum(10)
        self.mania_slider.setInvertedAppearance(False)
        self.mania_slider.setInvertedControls(False)
        self.mania_slider.setTickPosition(QtWidgets.QSlider.TickPosition.NoTicks)
        self.mania_slider.setObjectName("mania_slider")
        self.gridLayout_4.addWidget(self.mania_slider, 1, 1, 2, 1)
        self.mood_slider = QtWidgets.QSlider(parent=self.mmdmContainer)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.mood_slider.sizePolicy().hasHeightForWidth())
        self.mood_slider.setSizePolicy(sizePolicy)
        self.mood_slider.setStyleSheet("\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(242,89,85);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: rgb(242,89,85);\n"
"    }\n"
"\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QSlider Colors\n"
"/////////////////////////////////////////////////////////////// */\n"
"\n"
"QSlider::handle:vertical { background:rgb(243,89,85);}\n"
"QSlider::handle:vertical:hover {background:rgb(255,129,125);}\n"
"QSlider::handle:vertical:pressed {background:rgb(193,39,35);}\n"
"QSlider::groove:vertical:hover {background:rgba(243,89,85,0.25);}\n"
"QSlider::groove:vertical {background:rgba(243,89,85,0.15);}\n"
"\n"
"        ")
        self.mood_slider.setMaximum(10)
        self.mood_slider.setInvertedAppearance(False)
        self.mood_slider.setInvertedControls(False)
        self.mood_slider.setTickPosition(QtWidgets.QSlider.TickPosition.NoTicks)
        self.mood_slider.setObjectName("mood_slider")
        self.gridLayout_4.addWidget(self.mood_slider, 1, 0, 2, 1)
        self.horizontalLayout_5.addWidget(self.mmdmContainer)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/newPrefix/BECK EXAM/red.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        icon.addPixmap(QtGui.QPixmap(":/newPrefix/BECK EXAM/1 4.png"), QtGui.QIcon.Mode.Active, QtGui.QIcon.State.On)
        self.tabWidget_3.addTab(self.tab_10, icon, "")
        self.tab_11 = QtWidgets.QWidget()
        self.tab_11.setObjectName("tab_11")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.tab_11)
        self.gridLayout_5.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_5.setSpacing(0)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.wefeContainer = QtWidgets.QFrame(parent=self.tab_11)
        self.wefeContainer.setObjectName("wefeContainer")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.wefeContainer)
        self.gridLayout_3.setContentsMargins(0, 8, 0, 0)
        self.gridLayout_3.setHorizontalSpacing(0)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.excite_spinbox = QtWidgets.QSpinBox(parent=self.wefeContainer)
        self.excite_spinbox.setStyleSheet("\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(107,177,246);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: rgb(107,177,246);\n"
"    }\n"
"\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QSpinBox\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QSpinBox {color:rgb(138,162,248);}\n"
"    QSpinBox:hover {color: rgb(198,222,255);}\n"
"    QSpinBox:focus {color: rgb(168,192,255);}\n"
"    ")
        self.excite_spinbox.setFrame(False)
        self.excite_spinbox.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.excite_spinbox.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.excite_spinbox.setMaximum(10)
        self.excite_spinbox.setObjectName("excite_spinbox")
        self.gridLayout_3.addWidget(self.excite_spinbox, 0, 1, 1, 1)
        self.wellbeing_spinbox = QtWidgets.QSpinBox(parent=self.wefeContainer)
        self.wellbeing_spinbox.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QToolTip\n"
"/////////////////////////////////////////////////////////////// */\n"
"QToolTip {\n"
"    background: rgba(23,23,23, 150);\n"
"    border: 1px solid rgb(184,153,222);\n"
"    border-radius: 5px; \n"
"    padding:4px; \n"
"    text-align: left;\n"
"    color: rgb(184,153,222);\n"
"}\n"
"\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QSpinBox\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QSpinBox {color:rgb(186,153,219);}\n"
"    QSpinBox:hover {color: rgb(246,213,255);}\n"
"    QSpinBox:focus {color: rgb(216,183,249);}\n"
"    ")
        self.wellbeing_spinbox.setFrame(False)
        self.wellbeing_spinbox.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.wellbeing_spinbox.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.wellbeing_spinbox.setMaximum(10)
        self.wellbeing_spinbox.setObjectName("wellbeing_spinbox")
        self.gridLayout_3.addWidget(self.wellbeing_spinbox, 0, 0, 1, 1)
        self.energy_spinbox = QtWidgets.QSpinBox(parent=self.wefeContainer)
        self.energy_spinbox.setStyleSheet("    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(138,162,248);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: rgb(138,162,248);\n"
"    }\n"
"\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QSpinBox\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QSpinBox {color:rgb(107,177,246);}\n"
"    QSpinBox:hover {color: rgb(167,237,255);}\n"
"    QSpinBox:focus {color: rgb(137,207,255);}\n"
"    ")
        self.energy_spinbox.setFrame(False)
        self.energy_spinbox.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.energy_spinbox.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.energy_spinbox.setMaximum(10)
        self.energy_spinbox.setObjectName("energy_spinbox")
        self.gridLayout_3.addWidget(self.energy_spinbox, 0, 3, 1, 1)
        self.focus_spinbox = QtWidgets.QSpinBox(parent=self.wefeContainer)
        self.focus_spinbox.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QToolTip\n"
"/////////////////////////////////////////////////////////////// */\n"
"QToolTip {\n"
"    background: rgba(23,23,23, 150);\n"
"    border: 1px solid rgb(104,174,102);\n"
"    border-radius: 5px; \n"
"    padding:4px; \n"
"    text-align: left;\n"
"    color: rgb(104,174,102);\n"
"}\n"
"\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QSpinBox\n"
"/////////////////////////////////////////////////////////////// */\n"
"QSpinBox {background:transparent;color:rgb(96,175,107);}\n"
"QSpinBox:hover {color: rgb(156,235,167);}\n"
"QSpinBox:focus {color: rgb(126,205,137);}\n"
"")
        self.focus_spinbox.setFrame(False)
        self.focus_spinbox.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.focus_spinbox.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.focus_spinbox.setMaximum(10)
        self.focus_spinbox.setObjectName("focus_spinbox")
        self.gridLayout_3.addWidget(self.focus_spinbox, 0, 2, 1, 1)
        self.energy_slider = QtWidgets.QSlider(parent=self.wefeContainer)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.energy_slider.sizePolicy().hasHeightForWidth())
        self.energy_slider.setSizePolicy(sizePolicy)
        self.energy_slider.setStyleSheet("\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(138,162,248);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: rgb(138,162,248);\n"
"    }\n"
"    \n"
"\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QSlider Colors\n"
"/////////////////////////////////////////////////////////////// */\n"
"\n"
"QSlider::handle:vertical {\n"
"background:rgb(137,163,248);}\n"
"QSlider::handle:vertical:hover {background:rgb(177,203,255);}\n"
"QSlider::handle:vertical:pressed {background:rgb(87,113,198);}\n"
"QSlider::groove:vertical:hover {background:rgba(137,163,248,0.25);}\n"
"QSlider::groove:vertical {background:rgba(137,163,248,0.15);}")
        self.energy_slider.setMaximum(10)
        self.energy_slider.setObjectName("energy_slider")
        self.gridLayout_3.addWidget(self.energy_slider, 1, 3, 2, 1)
        self.focus_slider = QtWidgets.QSlider(parent=self.wefeContainer)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.focus_slider.sizePolicy().hasHeightForWidth())
        self.focus_slider.setSizePolicy(sizePolicy)
        self.focus_slider.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QToolTip\n"
"/////////////////////////////////////////////////////////////// */\n"
"QToolTip {\n"
"    background: rgba(23,23,23, 150);\n"
"    border: 1px solid rgb(104,174,102);\n"
"    border-radius: 5px; \n"
"    padding:4px; \n"
"    text-align: left;\n"
"    color: rgb(104,174,102);\n"
"}\n"
"\n"
"/* ////////////////////////////////////////////////////////////////////////\n"
"energy slider\n"
"//////////////////////////////////////////////////////////////////////// */\n"
"QSlider::handle:vertical {\n"
"background:rgb(96,174,106);}\n"
"QSlider::groove:vertical {background:rgba(96,174,106, 0.15);}\n"
"QSlider::handle:vertical:hover {background:rgb(126,204,136);}\n"
"QSlider::handle:vertical:pressed {background:rgb(76,154,86);}\n"
"QSlider::groove:vertical:hover {background:rgba(96,174,106,0.35);}\n"
"")
        self.focus_slider.setMaximum(10)
        self.focus_slider.setInvertedAppearance(False)
        self.focus_slider.setInvertedControls(False)
        self.focus_slider.setTickPosition(QtWidgets.QSlider.TickPosition.NoTicks)
        self.focus_slider.setObjectName("focus_slider")
        self.gridLayout_3.addWidget(self.focus_slider, 1, 2, 2, 1)
        self.excite_slider = QtWidgets.QSlider(parent=self.wefeContainer)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.excite_slider.sizePolicy().hasHeightForWidth())
        self.excite_slider.setSizePolicy(sizePolicy)
        self.excite_slider.setStyleSheet("\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(107,177,246);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: rgb(107,177,246);\n"
"    }\n"
"    \n"
"\n"
"\n"
"\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QSlider Colors\n"
"/////////////////////////////////////////////////////////////// */\n"
"\n"
"QSlider::handle:vertical {\n"
"background:rgb(150,194,206);}\n"
"QSlider::handle:vertical:hover {background:rgb(190,234,246);}\n"
"QSlider::handle:vertical:pressed {background:rgb(100,144,156);}\n"
"QSlider::groove:vertical:hover {background:rgba(150,194,206,0.25);}\n"
"QSlider::groove:vertical {background:rgba(150,194,206,0.15);}\n"
"\n"
"        ")
        self.excite_slider.setMaximum(10)
        self.excite_slider.setInvertedAppearance(False)
        self.excite_slider.setInvertedControls(False)
        self.excite_slider.setTickPosition(QtWidgets.QSlider.TickPosition.NoTicks)
        self.excite_slider.setObjectName("excite_slider")
        self.gridLayout_3.addWidget(self.excite_slider, 1, 1, 2, 1)
        self.wellbeing_slider = QtWidgets.QSlider(parent=self.wefeContainer)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.wellbeing_slider.sizePolicy().hasHeightForWidth())
        self.wellbeing_slider.setSizePolicy(sizePolicy)
        self.wellbeing_slider.setStyleSheet("\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(171,143,238);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: rgb(171,143,238);\n"
"    }\n"
"    \n"
"\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QSlider Colors\n"
"/////////////////////////////////////////////////////////////// */\n"
"\n"
"QSlider::handle:vertical {\n"
"background:rgb(171,145,238);}\n"
"QSlider::handle:vertical:hover {background:rgb(211,185,255);}\n"
"QSlider::handle:vertical:pressed {\n"
"background:rgb(121,95,188);}\n"
"QSlider::groove:vertical:hover {background:rgba(171,145,238,0.25);}\n"
"QSlider::groove:vertical {background:rgba(171,145,238,0.15);}\n"
"")
        self.wellbeing_slider.setMaximum(10)
        self.wellbeing_slider.setInvertedAppearance(False)
        self.wellbeing_slider.setInvertedControls(False)
        self.wellbeing_slider.setTickPosition(QtWidgets.QSlider.TickPosition.NoTicks)
        self.wellbeing_slider.setObjectName("wellbeing_slider")
        self.gridLayout_3.addWidget(self.wellbeing_slider, 1, 0, 2, 1)
        self.gridLayout_5.addWidget(self.wefeContainer, 0, 0, 1, 1)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/newPrefix/BECK EXAM/asdfas.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        icon1.addPixmap(QtGui.QPixmap(":/newPrefix/BECK EXAM/asdf.png"), QtGui.QIcon.Mode.Active, QtGui.QIcon.State.On)
        self.tabWidget_3.addTab(self.tab_11, icon1, "")
        self.tab_12 = QtWidgets.QWidget()
        self.tab_12.setObjectName("tab_12")
        self.gridLayout_19 = QtWidgets.QGridLayout(self.tab_12)
        self.gridLayout_19.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_19.setSpacing(0)
        self.gridLayout_19.setObjectName("gridLayout_19")
        self.csprContainer = QtWidgets.QFrame(parent=self.tab_12)
        self.csprContainer.setStyleSheet("QSpinBox {\n"
"background:transparent;\n"
"border:none;\n"
"}")
        self.csprContainer.setObjectName("csprContainer")
        self.gridLayout_11 = QtWidgets.QGridLayout(self.csprContainer)
        self.gridLayout_11.setContentsMargins(0, 8, 0, 0)
        self.gridLayout_11.setHorizontalSpacing(0)
        self.gridLayout_11.setObjectName("gridLayout_11")
        self.calm_slider = QtWidgets.QSlider(parent=self.csprContainer)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.calm_slider.sizePolicy().hasHeightForWidth())
        self.calm_slider.setSizePolicy(sizePolicy)
        self.calm_slider.setStatusTip("")
        self.calm_slider.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QToolTip\n"
"/////////////////////////////////////////////////////////////// */\n"
"QToolTip {\n"
"    background: rgba(23,23,23, 150);\n"
"    border: 1px solid rgb(125,123,202);\n"
"    border-radius: 5px; \n"
"    padding:4px; \n"
"    text-align: left;\n"
"    color: rgb(125,123,202);\n"
"}\n"
"/* ////////////////////////////////////////////////////////////////////////\n"
"calm slider\n"
"//////////////////////////////////////////////////////////////////////// */\n"
"QSlider::handle:vertical {\n"
"background:rgb(123,123,199);}\n"
"QSlider::handle:vertical:hover {background:rgb(153,153,229);}\n"
"QSlider::handle:vertical:pressed {background:rgb(103,103,179);}\n"
"QSlider::groove:vertical:hover {background:rgba(123,123,199,0.35);}\n"
"QSlider::groove:vertical {background:rgba(123,123,199,0.15);}")
        self.calm_slider.setMaximum(10)
        self.calm_slider.setInvertedAppearance(False)
        self.calm_slider.setInvertedControls(False)
        self.calm_slider.setTickPosition(QtWidgets.QSlider.TickPosition.NoTicks)
        self.calm_slider.setObjectName("calm_slider")
        self.gridLayout_11.addWidget(self.calm_slider, 1, 0, 1, 1)
        self.pain_slider = QtWidgets.QSlider(parent=self.csprContainer)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pain_slider.sizePolicy().hasHeightForWidth())
        self.pain_slider.setSizePolicy(sizePolicy)
        self.pain_slider.setStatusTip("")
        self.pain_slider.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QToolTip\n"
"/////////////////////////////////////////////////////////////// */\n"
"QToolTip {\n"
"    background: rgba(23,23,23, 150);\n"
"    border: 1px solid rgb(223,134,93);\n"
"    border-radius: 5px; \n"
"    padding:4px; \n"
"    text-align: left;\n"
"    color: rgb(223,134,93);\n"
"}\n"
"/* Pain Slider */\n"
"QSlider::handle:vertical {\n"
"background:rgb(229,133,98);}\n"
"QSlider::handle:vertical:hover {background:rgb(255,163,128);}\n"
"QSlider::handle:vertical:pressed {background:rgb(209,113,78);}\n"
"QSlider::groove:vertical:hover {background:rgba(229,133,98,0.35);}\n"
"QSlider::groove:vertical {background:rgba(229,133,98,0.15);}")
        self.pain_slider.setMaximum(10)
        self.pain_slider.setInvertedAppearance(False)
        self.pain_slider.setInvertedControls(False)
        self.pain_slider.setTickPosition(QtWidgets.QSlider.TickPosition.NoTicks)
        self.pain_slider.setObjectName("pain_slider")
        self.gridLayout_11.addWidget(self.pain_slider, 1, 2, 1, 1)
        self.stress_slider = QtWidgets.QSlider(parent=self.csprContainer)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.stress_slider.sizePolicy().hasHeightForWidth())
        self.stress_slider.setSizePolicy(sizePolicy)
        self.stress_slider.setStatusTip("")
        self.stress_slider.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QToolTip\n"
"/////////////////////////////////////////////////////////////// */\n"
"QToolTip {\n"
"    background: rgba(23,23,23, 150);\n"
"    border: 1px solid rgb(249,195,94);\n"
"    border-radius: 5px; \n"
"    padding:4px; \n"
"    text-align: left;\n"
"    color: rgb(249,195,94);\n"
"}\n"
"/* ////////////////////////////////////////////////////////////////////////\n"
"stress slider\n"
"//////////////////////////////////////////////////////////////////////// */\n"
"QSlider::handle:vertical {\n"
"background:rgb(254,195,105);}\n"
"QSlider::handle:vertical:hover {background:rgb(255,225,135);}\n"
"QSlider::handle:vertical:pressed {background:rgb(234,175,85);}\n"
"QSlider::groove:vertical:hover {background:rgba(254,195,105,0.35);}\n"
"QSlider::groove:vertical {background:rgba(254,195,105,0.15);}\n"
"")
        self.stress_slider.setMaximum(10)
        self.stress_slider.setInvertedAppearance(False)
        self.stress_slider.setInvertedControls(False)
        self.stress_slider.setTickPosition(QtWidgets.QSlider.TickPosition.NoTicks)
        self.stress_slider.setObjectName("stress_slider")
        self.gridLayout_11.addWidget(self.stress_slider, 1, 1, 1, 1)
        self.rage_slider = QtWidgets.QSlider(parent=self.csprContainer)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.rage_slider.sizePolicy().hasHeightForWidth())
        self.rage_slider.setSizePolicy(sizePolicy)
        self.rage_slider.setStatusTip("")
        self.rage_slider.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QToolTip\n"
"/////////////////////////////////////////////////////////////// */\n"
"QToolTip {\n"
"    background: rgba(23,23,23, 150);\n"
"    border: 1px solid rgb(220,99,108);\n"
"    border-radius: 5px; \n"
"    padding:4px; \n"
"    text-align: left;\n"
"    color: rgb(220,99,108);\n"
"}\n"
"/* ////////////////////////////////////////////////////////////////////////\n"
"rage slider\n"
"//////////////////////////////////////////////////////////////////////// */\n"
"#rage_slider::handle:vertical {\n"
"background:rgb(229,100,111);}\n"
"#rage_slider::handle:vertical:hover {background:rgb(255,130,141);}\n"
"#rage_slider::handle:vertical:pressed {background:rgb(209,80,91);}\n"
"#rage_slider::groove:vertical:hover {background:rgba(229,100,111,0.35);}\n"
"#rage_slider::groove:vertical {background:rgba(229,100,111,0.15);}")
        self.rage_slider.setMaximum(10)
        self.rage_slider.setObjectName("rage_slider")
        self.gridLayout_11.addWidget(self.rage_slider, 1, 3, 1, 1)
        self.rage_spinbox = QtWidgets.QSpinBox(parent=self.csprContainer)
        self.rage_spinbox.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QToolTip\n"
"/////////////////////////////////////////////////////////////// */\n"
"QToolTip {\n"
"    background: rgba(23,23,23, 150);\n"
"    border: 1px solid rgb(220,99,108);\n"
"    border-radius: 5px; \n"
"    padding:4px; \n"
"    text-align: left;\n"
"    color: rgb(220,99,108);\n"
"}\n"
"/* ////////////////////////////////////////////////////////////////////////\n"
"rage spinbox\n"
" //////////////////////////////////////////////////////////////////////// */\n"
"#rage_spinbox {background:transparent;color:rgb(229,100,111);}\n"
"#rage_spinbox:hover {color: rgb(255,160,171);}\n"
"#rage_spinbox:focus {color: rgb(255,130,141);}")
        self.rage_spinbox.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.rage_spinbox.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.rage_spinbox.setMaximum(10)
        self.rage_spinbox.setObjectName("rage_spinbox")
        self.gridLayout_11.addWidget(self.rage_spinbox, 0, 3, 1, 1)
        self.pain_spinbox = QtWidgets.QSpinBox(parent=self.csprContainer)
        self.pain_spinbox.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QToolTip\n"
"/////////////////////////////////////////////////////////////// */\n"
"QToolTip {\n"
"    background: rgba(23,23,23, 150);\n"
"    border: 1px solid rgb(223,134,93);\n"
"    border-radius: 5px; \n"
"    padding:4px; \n"
"    text-align: left;\n"
"    color: rgb(223,134,93);\n"
"}\n"
"\n"
"#pain_spinbox {color:rgb(229,133,98);}\n"
"#pain_spinbox:hover {color: rgb(255,193,158);}\n"
"#pain_spinbox:focus {color: rgb(255,163,128);}\n"
"")
        self.pain_spinbox.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.pain_spinbox.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.pain_spinbox.setMaximum(10)
        self.pain_spinbox.setObjectName("pain_spinbox")
        self.gridLayout_11.addWidget(self.pain_spinbox, 0, 2, 1, 1)
        self.stress_spinbox = QtWidgets.QSpinBox(parent=self.csprContainer)
        self.stress_spinbox.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QToolTip\n"
"/////////////////////////////////////////////////////////////// */\n"
"QToolTip {\n"
"    background: rgba(23,23,23, 150);\n"
"    border: 1px solid rgb(249,195,94);\n"
"    border-radius: 5px; \n"
"    padding:4px; \n"
"    text-align: left;\n"
"    color: rgb(249,195,94);\n"
"}\n"
"/* ////////////////////////////////////////////////////////////////////////\n"
"Stress\n"
"//////////////////////////////////////////////////////////////////////// */\n"
"#stress_spinbox {background:transparent;color:rgb(254,195,105);}\n"
"#stress_spinbox:hover {color: rgb(255,255,165);}\n"
"#stress_spinbox:focus {color: rgb(255,225,135); }")
        self.stress_spinbox.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.stress_spinbox.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.stress_spinbox.setAccelerated(True)
        self.stress_spinbox.setMaximum(10)
        self.stress_spinbox.setObjectName("stress_spinbox")
        self.gridLayout_11.addWidget(self.stress_spinbox, 0, 1, 1, 1)
        self.calm_spinbox = QtWidgets.QSpinBox(parent=self.csprContainer)
        self.calm_spinbox.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QToolTip\n"
"/////////////////////////////////////////////////////////////// */\n"
"QToolTip {\n"
"    background: rgba(23,23,23, 150);\n"
"    border: 1px solid rgb(125,123,202);\n"
"    border-radius: 5px; \n"
"    padding:4px; \n"
"    text-align: left;\n"
"    color: rgb(125,123,202);\n"
"}\n"
"#calm_spinbox{color:rgb(123,123,199);}\n"
"#calm_spinbox:hover {color: rgb(183,183,255);}\n"
"#calm_spinbox:focus {color: rgb(153,153,229);}\n"
"")
        self.calm_spinbox.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.calm_spinbox.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.calm_spinbox.setMaximum(10)
        self.calm_spinbox.setObjectName("calm_spinbox")
        self.gridLayout_11.addWidget(self.calm_spinbox, 0, 0, 1, 1)
        self.gridLayout_19.addWidget(self.csprContainer, 0, 0, 1, 1)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/newPrefix/BECK EXAM/sdfdsfs.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        icon2.addPixmap(QtGui.QPixmap(":/newPrefix/BECK EXAM/asdfsafdsdf.png"), QtGui.QIcon.Mode.Active, QtGui.QIcon.State.On)
        self.tabWidget_3.addTab(self.tab_12, icon2, "")
        self.gridLayout_2.addWidget(self.tabWidget_3, 0, 0, 1, 1)
        self.mainStack.addWidget(self.mentalpage)
        self.sleep_data_page = QtWidgets.QWidget()
        self.sleep_data_page.setObjectName("sleep_data_page")
        self.gridLayout_29 = QtWidgets.QGridLayout(self.sleep_data_page)
        self.gridLayout_29.setObjectName("gridLayout_29")
        self.tabWidget = QtWidgets.QTabWidget(parent=self.sleep_data_page)
        self.tabWidget.setStyleSheet("QTabWidget {\n"
"    background-color: #121212;\n"
"    border: none;\n"
"}\n"
"\n"
"QTabWidget::pane {\n"
"    border: none;    background-color: #121212;\n"
"}\n"
"\n"
"QTabBar::tab {\n"
"    background-color: #121212;\n"
"    border: none;\n"
"\n"
"}\n"
"\n"
"QTabBar::tab:selected {\n"
"}\n"
"\n"
"\n"
"QTabBar::tab:hover {\n"
"    color: #fff;\n"
"}\n"
"\n"
"QTabBar::tab:only-one {\n"
"background-color: #121212;\n"
"}\n"
"")
        self.tabWidget.setIconSize(QtCore.QSize(24, 24))
        self.tabWidget.setUsesScrollButtons(True)
        self.tabWidget.setDocumentMode(False)
        self.tabWidget.setObjectName("tabWidget")
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.gridLayout_14 = QtWidgets.QGridLayout(self.tab_4)
        self.gridLayout_14.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_14.setSpacing(0)
        self.gridLayout_14.setObjectName("gridLayout_14")
        self.sleep_tableview = QtWidgets.QTableView(parent=self.tab_4)
        self.sleep_tableview.setShowGrid(False)
        self.sleep_tableview.setSortingEnabled(True)
        self.sleep_tableview.setObjectName("sleep_tableview")
        self.sleep_tableview.horizontalHeader().setStretchLastSection(True)
        self.sleep_tableview.verticalHeader().setVisible(False)
        self.gridLayout_14.addWidget(self.sleep_tableview, 0, 0, 1, 1)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/newPrefix/aug6BSL/sleep.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        icon3.addPixmap(QtGui.QPixmap(":/newPrefix/aug6BSL/slept_check.png"), QtGui.QIcon.Mode.Active, QtGui.QIcon.State.On)
        self.tabWidget.addTab(self.tab_4, icon3, "")
        self.tab_5 = QtWidgets.QWidget()
        self.tab_5.setObjectName("tab_5")
        self.gridLayout_15 = QtWidgets.QGridLayout(self.tab_5)
        self.gridLayout_15.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_15.setSpacing(0)
        self.gridLayout_15.setObjectName("gridLayout_15")
        self.total_hours_slept_tableview = QtWidgets.QTableView(parent=self.tab_5)
        self.total_hours_slept_tableview.setShowGrid(False)
        self.total_hours_slept_tableview.setSortingEnabled(True)
        self.total_hours_slept_tableview.setObjectName("total_hours_slept_tableview")
        self.total_hours_slept_tableview.horizontalHeader().setStretchLastSection(True)
        self.total_hours_slept_tableview.verticalHeader().setVisible(False)
        self.gridLayout_15.addWidget(self.total_hours_slept_tableview, 0, 0, 1, 1)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/newPrefix/aug6BSL/hrs_slept.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        icon4.addPixmap(QtGui.QPixmap(":/newPrefix/aug6BSL/hrs_sleptCheck.png"), QtGui.QIcon.Mode.Active, QtGui.QIcon.State.On)
        self.tabWidget.addTab(self.tab_5, icon4, "")
        self.tab_6 = QtWidgets.QWidget()
        self.tab_6.setObjectName("tab_6")
        self.gridLayout_16 = QtWidgets.QGridLayout(self.tab_6)
        self.gridLayout_16.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_16.setSpacing(0)
        self.gridLayout_16.setObjectName("gridLayout_16")
        self.woke_up_like_tableview = QtWidgets.QTableView(parent=self.tab_6)
        self.woke_up_like_tableview.setShowGrid(False)
        self.woke_up_like_tableview.setSortingEnabled(True)
        self.woke_up_like_tableview.setObjectName("woke_up_like_tableview")
        self.woke_up_like_tableview.horizontalHeader().setStretchLastSection(True)
        self.woke_up_like_tableview.verticalHeader().setVisible(False)
        self.gridLayout_16.addWidget(self.woke_up_like_tableview, 0, 0, 1, 1)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/newPrefix/aug6BSL/wokeuplike.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        icon5.addPixmap(QtGui.QPixmap(":/newPrefix/aug6BSL/like.png"), QtGui.QIcon.Mode.Active, QtGui.QIcon.State.On)
        self.tabWidget.addTab(self.tab_6, icon5, "")
        self.tab_7 = QtWidgets.QWidget()
        self.tab_7.setObjectName("tab_7")
        self.gridLayout_17 = QtWidgets.QGridLayout(self.tab_7)
        self.gridLayout_17.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_17.setSpacing(0)
        self.gridLayout_17.setObjectName("gridLayout_17")
        self.sleep_quality_tableview = QtWidgets.QTableView(parent=self.tab_7)
        self.sleep_quality_tableview.setShowGrid(False)
        self.sleep_quality_tableview.setSortingEnabled(True)
        self.sleep_quality_tableview.setObjectName("sleep_quality_tableview")
        self.sleep_quality_tableview.horizontalHeader().setStretchLastSection(True)
        self.sleep_quality_tableview.verticalHeader().setVisible(False)
        self.gridLayout_17.addWidget(self.sleep_quality_tableview, 0, 0, 1, 1)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/newPrefix/aug6BSL/sleepQualityBlue.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        icon6.addPixmap(QtGui.QPixmap(":/newPrefix/aug6BSL/sleepqual.png"), QtGui.QIcon.Mode.Active, QtGui.QIcon.State.On)
        self.tabWidget.addTab(self.tab_7, icon6, "")
        self.gridLayout_29.addWidget(self.tabWidget, 0, 0, 1, 1)
        self.mainStack.addWidget(self.sleep_data_page)
        self.diet_data_page = QtWidgets.QWidget()
        self.diet_data_page.setObjectName("diet_data_page")
        self.gridLayout_30 = QtWidgets.QGridLayout(self.diet_data_page)
        self.gridLayout_30.setObjectName("gridLayout_30")
        self.tabWidget_2 = QtWidgets.QTabWidget(parent=self.diet_data_page)
        self.tabWidget_2.setStyleSheet("QTabWidget {\n"
"    background-color: #121212;\n"
"    border: none;\n"
"}\n"
"\n"
"QTabWidget::pane {\n"
"    border: none;    background-color: #121212;\n"
"}\n"
"\n"
"QTabBar::tab {\n"
"    background-color: #121212;\n"
"    border: none;\n"
"}\n"
"\n"
"QTabBar::tab:selected {\n"
"    background-color: #121212;\n"
"}\n"
"\n"
"QTabBar::tab:hover {\n"
"     background-color: #121212;\n"
"}\n"
"\n"
"QTabBar::tab:only-one {\n"
"    padding: 2px;    background-color: #121212;\n"
"}\n"
"")
        self.tabWidget_2.setIconSize(QtCore.QSize(22, 22))
        self.tabWidget_2.setObjectName("tabWidget_2")
        self.tab_8 = QtWidgets.QWidget()
        self.tab_8.setObjectName("tab_8")
        self.gridLayout_13 = QtWidgets.QGridLayout(self.tab_8)
        self.gridLayout_13.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_13.setSpacing(0)
        self.gridLayout_13.setObjectName("gridLayout_13")
        self.diet_table = QtWidgets.QTableView(parent=self.tab_8)
        self.diet_table.setShowGrid(False)
        self.diet_table.setSortingEnabled(True)
        self.diet_table.setObjectName("diet_table")
        self.diet_table.horizontalHeader().setCascadingSectionResizes(True)
        self.diet_table.horizontalHeader().setDefaultSectionSize(150)
        self.diet_table.horizontalHeader().setMinimumSectionSize(50)
        self.diet_table.horizontalHeader().setStretchLastSection(True)
        self.diet_table.verticalHeader().setVisible(False)
        self.diet_table.verticalHeader().setCascadingSectionResizes(True)
        self.gridLayout_13.addWidget(self.diet_table, 0, 0, 1, 1)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/newPrefix/diet.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        icon7.addPixmap(QtGui.QPixmap(":/newPrefix/dietPunched.png"), QtGui.QIcon.Mode.Active, QtGui.QIcon.State.On)
        self.tabWidget_2.addTab(self.tab_8, icon7, "")
        self.tab_9 = QtWidgets.QWidget()
        self.tab_9.setObjectName("tab_9")
        self.gridLayout_18 = QtWidgets.QGridLayout(self.tab_9)
        self.gridLayout_18.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_18.setSpacing(0)
        self.gridLayout_18.setObjectName("gridLayout_18")
        self.hydration_table = QtWidgets.QTableView(parent=self.tab_9)
        self.hydration_table.setShowGrid(False)
        self.hydration_table.setSortingEnabled(True)
        self.hydration_table.setObjectName("hydration_table")
        self.hydration_table.horizontalHeader().setCascadingSectionResizes(True)
        self.hydration_table.horizontalHeader().setDefaultSectionSize(150)
        self.hydration_table.horizontalHeader().setMinimumSectionSize(50)
        self.hydration_table.horizontalHeader().setStretchLastSection(True)
        self.hydration_table.verticalHeader().setVisible(False)
        self.hydration_table.verticalHeader().setCascadingSectionResizes(True)
        self.gridLayout_18.addWidget(self.hydration_table, 0, 0, 1, 1)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/newPrefix/liquid_guy.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        icon8.addPixmap(QtGui.QPixmap(":/newPrefix/drankPunchs.png"), QtGui.QIcon.Mode.Active, QtGui.QIcon.State.On)
        self.tabWidget_2.addTab(self.tab_9, icon8, "")
        self.gridLayout_30.addWidget(self.tabWidget_2, 0, 0, 1, 1)
        self.mainStack.addWidget(self.diet_data_page)
        self.basics_data_page = QtWidgets.QWidget()
        self.basics_data_page.setObjectName("basics_data_page")
        self.gridLayout_31 = QtWidgets.QGridLayout(self.basics_data_page)
        self.gridLayout_31.setObjectName("gridLayout_31")
        self.shower_tab = QtWidgets.QTabWidget(parent=self.basics_data_page)
        self.shower_tab.setStyleSheet("QTabWidget {\n"
"    background-color: transparent;\n"
"    border: none;\n"
"}\n"
"\n"
"QTabWidget::pane {\n"
"    border: none;\n"
"    background-color: transparent;\n"
"}\n"
"\n"
"QTabBar::tab {\n"
"    background-color: transparent;\n"
"    border: none;\n"
"}\n"
"\n"
"QTabBar::tab:selected {\n"
"    background-color: transparent;\n"
"}\n"
"\n"
"QTabBar::tab:hover {\n"
"    background-color: transparent;\n"
"}\n"
"\n"
"QTabBar::tab:only-one {\n"
"    padding: 2px;\n"
"}\n"
"")
        self.shower_tab.setIconSize(QtCore.QSize(22, 22))
        self.shower_tab.setDocumentMode(False)
        self.shower_tab.setObjectName("shower_tab")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.tab)
        self.gridLayout_7.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_7.setSpacing(0)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.shower_table = QtWidgets.QTableView(parent=self.tab)
        self.shower_table.setShowGrid(False)
        self.shower_table.setSortingEnabled(True)
        self.shower_table.setObjectName("shower_table")
        self.shower_table.horizontalHeader().setStretchLastSection(True)
        self.shower_table.verticalHeader().setVisible(False)
        self.gridLayout_7.addWidget(self.shower_table, 0, 0, 1, 1)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/newPrefix/blueShowerhead.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        icon9.addPixmap(QtGui.QPixmap(":/newPrefix/Mac App icon 30.png"), QtGui.QIcon.Mode.Active, QtGui.QIcon.State.On)
        self.shower_tab.addTab(self.tab, icon9, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.tab_3)
        self.gridLayout_6.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_6.setSpacing(0)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.teethbrushed_table = QtWidgets.QTableView(parent=self.tab_3)
        self.teethbrushed_table.setShowGrid(False)
        self.teethbrushed_table.setSortingEnabled(True)
        self.teethbrushed_table.setObjectName("teethbrushed_table")
        self.teethbrushed_table.horizontalHeader().setStretchLastSection(True)
        self.teethbrushed_table.verticalHeader().setVisible(False)
        self.gridLayout_6.addWidget(self.teethbrushed_table, 0, 0, 1, 1)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/newPrefix/blueteeth.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        icon10.addPixmap(QtGui.QPixmap(":/newPrefix/teethPressed.png"), QtGui.QIcon.Mode.Active, QtGui.QIcon.State.On)
        self.shower_tab.addTab(self.tab_3, icon10, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.tab_2)
        self.gridLayout_8.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_8.setSpacing(0)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.yoga_table = QtWidgets.QTableView(parent=self.tab_2)
        self.yoga_table.setStyleSheet("")
        self.yoga_table.setShowGrid(False)
        self.yoga_table.setSortingEnabled(True)
        self.yoga_table.setObjectName("yoga_table")
        self.yoga_table.horizontalHeader().setStretchLastSection(True)
        self.yoga_table.verticalHeader().setVisible(False)
        self.gridLayout_8.addWidget(self.yoga_table, 0, 0, 1, 1)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/newPrefix/blueYogai.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        icon11.addPixmap(QtGui.QPixmap(":/newPrefix/basics2Wh.png"), QtGui.QIcon.Mode.Active, QtGui.QIcon.State.On)
        self.shower_tab.addTab(self.tab_2, icon11, "")
        self.gridLayout_31.addWidget(self.shower_tab, 0, 0, 1, 1)
        self.mainStack.addWidget(self.basics_data_page)
        self.lilys_dataviews = QtWidgets.QWidget()
        self.lilys_dataviews.setObjectName("lilys_dataviews")
        self.gridLayout_45 = QtWidgets.QGridLayout(self.lilys_dataviews)
        self.gridLayout_45.setObjectName("gridLayout_45")
        self.lily_data_stack = QtWidgets.QTabWidget(parent=self.lilys_dataviews)
        self.lily_data_stack.setStyleSheet("QTabWidget {\n"
"    background-color: #121212;\n"
"    border: none;\n"
"}\n"
"\n"
"QTabWidget::pane {\n"
"    border: none;    background-color: #121212;\n"
"}\n"
"\n"
"QTabBar::tab {\n"
"    background-color: #121212;\n"
"    border: none;\n"
"}\n"
"\n"
"QTabBar::tab:selected {\n"
"    background-color: #121212;\n"
"}\n"
"\n"
"QTabBar::tab:hover {\n"
"     background-color: #121212;\n"
"}\n"
"\n"
"QTabBar::tab:only-one {\n"
" background-color: #121212;\n"
"}\n"
"")
        self.lily_data_stack.setIconSize(QtCore.QSize(24, 24))
        self.lily_data_stack.setObjectName("lily_data_stack")
        self.lily_data_stackPage1 = QtWidgets.QWidget()
        self.lily_data_stackPage1.setObjectName("lily_data_stackPage1")
        self.gridLayout_42 = QtWidgets.QGridLayout(self.lily_data_stackPage1)
        self.gridLayout_42.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_42.setSpacing(0)
        self.gridLayout_42.setObjectName("gridLayout_42")
        self.frame_35 = QtWidgets.QFrame(parent=self.lily_data_stackPage1)
        self.frame_35.setObjectName("frame_35")
        self.gridLayout_43 = QtWidgets.QGridLayout(self.frame_35)
        self.gridLayout_43.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_43.setSpacing(0)
        self.gridLayout_43.setObjectName("gridLayout_43")
        self.frame_36 = QtWidgets.QFrame(parent=self.frame_35)
        self.frame_36.setObjectName("frame_36")
        self.gridLayout_34 = QtWidgets.QGridLayout(self.frame_36)
        self.gridLayout_34.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_34.setSpacing(0)
        self.gridLayout_34.setObjectName("gridLayout_34")
        self.lily_walk_table = QtWidgets.QTableView(parent=self.frame_36)
        self.lily_walk_table.setShowGrid(False)
        self.lily_walk_table.setSortingEnabled(True)
        self.lily_walk_table.setCornerButtonEnabled(False)
        self.lily_walk_table.setObjectName("lily_walk_table")
        self.lily_walk_table.horizontalHeader().setCascadingSectionResizes(True)
        self.lily_walk_table.horizontalHeader().setDefaultSectionSize(100)
        self.lily_walk_table.horizontalHeader().setMinimumSectionSize(75)
        self.lily_walk_table.horizontalHeader().setStretchLastSection(True)
        self.lily_walk_table.verticalHeader().setVisible(False)
        self.lily_walk_table.verticalHeader().setCascadingSectionResizes(True)
        self.lily_walk_table.verticalHeader().setSortIndicatorShown(True)
        self.gridLayout_34.addWidget(self.lily_walk_table, 1, 0, 1, 1)
        self.lily_walk_note_table = QtWidgets.QTableView(parent=self.frame_36)
        self.lily_walk_note_table.setShowGrid(False)
        self.lily_walk_note_table.setSortingEnabled(True)
        self.lily_walk_note_table.setObjectName("lily_walk_note_table")
        self.lily_walk_note_table.horizontalHeader().setCascadingSectionResizes(True)
        self.lily_walk_note_table.horizontalHeader().setDefaultSectionSize(100)
        self.lily_walk_note_table.horizontalHeader().setMinimumSectionSize(15)
        self.lily_walk_note_table.horizontalHeader().setStretchLastSection(True)
        self.lily_walk_note_table.verticalHeader().setVisible(False)
        self.lily_walk_note_table.verticalHeader().setCascadingSectionResizes(True)
        self.lily_walk_note_table.verticalHeader().setSortIndicatorShown(True)
        self.gridLayout_34.addWidget(self.lily_walk_note_table, 1, 2, 1, 1)
        self.line_4 = QtWidgets.QFrame(parent=self.frame_36)
        self.line_4.setFrameShape(QtWidgets.QFrame.Shape.VLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line_4.setObjectName("line_4")
        self.gridLayout_34.addWidget(self.line_4, 1, 1, 1, 1)
        self.gridLayout_43.addWidget(self.frame_36, 0, 0, 1, 1)
        self.gridLayout_42.addWidget(self.frame_35, 1, 0, 1, 2)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/newPrefix/lily_walk_norm.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        icon12.addPixmap(QtGui.QPixmap(":/newPrefix/onePaw.png"), QtGui.QIcon.Mode.Active, QtGui.QIcon.State.On)
        self.lily_data_stack.addTab(self.lily_data_stackPage1, icon12, "")
        self.lily_note_table_contain = QtWidgets.QWidget()
        self.lily_note_table_contain.setObjectName("lily_note_table_contain")
        self.gridLayout_35 = QtWidgets.QGridLayout(self.lily_note_table_contain)
        self.gridLayout_35.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_35.setSpacing(0)
        self.gridLayout_35.setObjectName("gridLayout_35")
        self.lily_notes_table = QtWidgets.QTableView(parent=self.lily_note_table_contain)
        self.lily_notes_table.setShowGrid(False)
        self.lily_notes_table.setSortingEnabled(True)
        self.lily_notes_table.setObjectName("lily_notes_table")
        self.lily_notes_table.horizontalHeader().setCascadingSectionResizes(True)
        self.lily_notes_table.horizontalHeader().setDefaultSectionSize(150)
        self.lily_notes_table.horizontalHeader().setMinimumSectionSize(50)
        self.lily_notes_table.horizontalHeader().setStretchLastSection(True)
        self.lily_notes_table.verticalHeader().setVisible(False)
        self.lily_notes_table.verticalHeader().setCascadingSectionResizes(True)
        self.lily_notes_table.verticalHeader().setSortIndicatorShown(True)
        self.gridLayout_35.addWidget(self.lily_notes_table, 0, 0, 1, 1)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/newPrefix/lilynotes1.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        icon13.addPixmap(QtGui.QPixmap(":/newPrefix/lilynoteChecked.png"), QtGui.QIcon.Mode.Active, QtGui.QIcon.State.On)
        self.lily_data_stack.addTab(self.lily_note_table_contain, icon13, "")
        self.lily_data_stackPage2 = QtWidgets.QWidget()
        self.lily_data_stackPage2.setObjectName("lily_data_stackPage2")
        self.gridLayout_55 = QtWidgets.QGridLayout(self.lily_data_stackPage2)
        self.gridLayout_55.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_55.setSpacing(0)
        self.gridLayout_55.setObjectName("gridLayout_55")
        self.frame_38 = QtWidgets.QFrame(parent=self.lily_data_stackPage2)
        self.frame_38.setObjectName("frame_38")
        self.gridLayout_36 = QtWidgets.QGridLayout(self.frame_38)
        self.gridLayout_36.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_36.setSpacing(0)
        self.gridLayout_36.setObjectName("gridLayout_36")
        self.lily_diet_table = QtWidgets.QTableView(parent=self.frame_38)
        self.lily_diet_table.setStyleSheet("")
        self.lily_diet_table.setShowGrid(False)
        self.lily_diet_table.setSortingEnabled(True)
        self.lily_diet_table.setObjectName("lily_diet_table")
        self.lily_diet_table.horizontalHeader().setCascadingSectionResizes(True)
        self.lily_diet_table.horizontalHeader().setDefaultSectionSize(150)
        self.lily_diet_table.horizontalHeader().setMinimumSectionSize(50)
        self.lily_diet_table.horizontalHeader().setStretchLastSection(True)
        self.lily_diet_table.verticalHeader().setVisible(False)
        self.lily_diet_table.verticalHeader().setCascadingSectionResizes(True)
        self.lily_diet_table.verticalHeader().setSortIndicatorShown(True)
        self.gridLayout_36.addWidget(self.lily_diet_table, 0, 0, 1, 1)
        self.gridLayout_55.addWidget(self.frame_38, 0, 0, 1, 2)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(":/newPrefix/lilyasdfas.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        icon14.addPixmap(QtGui.QPixmap(":/newPrefix/Mac App icon 46.png"), QtGui.QIcon.Mode.Active, QtGui.QIcon.State.On)
        self.lily_data_stack.addTab(self.lily_data_stackPage2, icon14, "")
        self.lily_data_stackPage3 = QtWidgets.QWidget()
        self.lily_data_stackPage3.setObjectName("lily_data_stackPage3")
        self.gridLayout_57 = QtWidgets.QGridLayout(self.lily_data_stackPage3)
        self.gridLayout_57.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_57.setSpacing(0)
        self.gridLayout_57.setObjectName("gridLayout_57")
        self.mood_container = QtWidgets.QFrame(parent=self.lily_data_stackPage3)
        self.mood_container.setObjectName("mood_container")
        self.gridLayout_37 = QtWidgets.QGridLayout(self.mood_container)
        self.gridLayout_37.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_37.setSpacing(0)
        self.gridLayout_37.setObjectName("gridLayout_37")
        self.lily_mood_table = QtWidgets.QTableView(parent=self.mood_container)
        self.lily_mood_table.setShowGrid(False)
        self.lily_mood_table.setSortingEnabled(True)
        self.lily_mood_table.setObjectName("lily_mood_table")
        self.lily_mood_table.horizontalHeader().setCascadingSectionResizes(True)
        self.lily_mood_table.horizontalHeader().setDefaultSectionSize(150)
        self.lily_mood_table.horizontalHeader().setMinimumSectionSize(50)
        self.lily_mood_table.horizontalHeader().setStretchLastSection(True)
        self.lily_mood_table.verticalHeader().setVisible(False)
        self.lily_mood_table.verticalHeader().setCascadingSectionResizes(True)
        self.lily_mood_table.verticalHeader().setSortIndicatorShown(True)
        self.gridLayout_37.addWidget(self.lily_mood_table, 1, 0, 1, 1)
        self.gridLayout_57.addWidget(self.mood_container, 0, 0, 1, 2)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(":/newPrefix/lily_mood_norm.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        icon15.addPixmap(QtGui.QPixmap(":/newPrefix/Mac App icon 50.png"), QtGui.QIcon.Mode.Active, QtGui.QIcon.State.On)
        self.lily_data_stack.addTab(self.lily_data_stackPage3, icon15, "")
        self.lily_data_stackPage4 = QtWidgets.QWidget()
        self.lily_data_stackPage4.setObjectName("lily_data_stackPage4")
        self.gridLayout_38 = QtWidgets.QGridLayout(self.lily_data_stackPage4)
        self.gridLayout_38.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_38.setSpacing(0)
        self.gridLayout_38.setObjectName("gridLayout_38")
        self.time_in_room_table = QtWidgets.QTableView(parent=self.lily_data_stackPage4)
        self.time_in_room_table.setStyleSheet("")
        self.time_in_room_table.setShowGrid(False)
        self.time_in_room_table.setSortingEnabled(True)
        self.time_in_room_table.setObjectName("time_in_room_table")
        self.time_in_room_table.horizontalHeader().setCascadingSectionResizes(True)
        self.time_in_room_table.horizontalHeader().setDefaultSectionSize(150)
        self.time_in_room_table.horizontalHeader().setMinimumSectionSize(50)
        self.time_in_room_table.horizontalHeader().setStretchLastSection(True)
        self.time_in_room_table.verticalHeader().setVisible(False)
        self.time_in_room_table.verticalHeader().setCascadingSectionResizes(True)
        self.time_in_room_table.verticalHeader().setSortIndicatorShown(True)
        self.gridLayout_38.addWidget(self.time_in_room_table, 0, 0, 1, 1)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(":/newPrefix/asdsdf.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        icon16.addPixmap(QtGui.QPixmap(":/newPrefix/1 1.png"), QtGui.QIcon.Mode.Active, QtGui.QIcon.State.On)
        self.lily_data_stack.addTab(self.lily_data_stackPage4, icon16, "")
        self.gridLayout_45.addWidget(self.lily_data_stack, 0, 0, 1, 1)
        self.mainStack.addWidget(self.lilys_dataviews)
        self.mentaldatapage = QtWidgets.QWidget()
        self.mentaldatapage.setObjectName("mentaldatapage")
        self.gridLayout_21 = QtWidgets.QGridLayout(self.mentaldatapage)
        self.gridLayout_21.setObjectName("gridLayout_21")
        self.tabWidget_4 = QtWidgets.QTabWidget(parent=self.mentaldatapage)
        self.tabWidget_4.setStyleSheet("QTabWidget {\n"
"    background-color: #121212;    color:#fff;\n"
"    border: none;\n"
"}\n"
"\n"
"QTabWidget::pane {\n"
"    border: none;    background-color: #121212;    color:#fff;\n"
"}\n"
"\n"
"QTabBar::tab {\n"
"    background-color: #121212;\n"
"    border: none;\n"
"    margin-left:5px;    color:#fff;    min-width:35px;\n"
"}\n"
"\n"
"QTabBar::tab:!selected {\n"
"    background-color: #121212;    color:#fff;\n"
"    font-size:10pt;\n"
"}\n"
"QTabBar::tab:selected {\n"
"    background-color: #121212;    color:#fff;\n"
"    font-size:8pt;\n"
"    font-style:italic;\n"
"    \n"
"}\n"
"QTabBar::tab:hover {\n"
"     background-color: #121212;    color:#fff;\n"
"}\n"
"\n"
"QTabBar::tab:only-one {\n"
" background-color: #121212;    color:#fff;\n"
"}")
        self.tabWidget_4.setDocumentMode(False)
        self.tabWidget_4.setObjectName("tabWidget_4")
        self.tab_13 = QtWidgets.QWidget()
        self.tab_13.setObjectName("tab_13")
        self.gridLayout_24 = QtWidgets.QGridLayout(self.tab_13)
        self.gridLayout_24.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_24.setSpacing(0)
        self.gridLayout_24.setObjectName("gridLayout_24")
        self.mdmmr_tableview = QtWidgets.QTableView(parent=self.tab_13)
        self.mdmmr_tableview.setStyleSheet("\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(198,78,78);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: #fff;\n"
"    }\n"
"    \n"
" QTableView {\n"
"     background-color: transparent;\n"
"     selection-background-color: #7e57c2;\n"
"     gridline-color:transparent;\n"
"     color:#fff; }\n"
" QTableView::item {\n"
"     padding: 1px;\n"
"     background:rgb(198,78,78);\n"
" }\n"
" QTableView::item:selected {\n"
"     color:#fff;\n"
"     background:rgb(198,78,78);\n"
" }\n"
" ")
        self.mdmmr_tableview.setShowGrid(False)
        self.mdmmr_tableview.setSortingEnabled(True)
        self.mdmmr_tableview.setObjectName("mdmmr_tableview")
        self.mdmmr_tableview.horizontalHeader().setStretchLastSection(True)
        self.mdmmr_tableview.verticalHeader().setVisible(False)
        self.gridLayout_24.addWidget(self.mdmmr_tableview, 0, 0, 1, 1)
        self.tabWidget_4.addTab(self.tab_13, icon, "")
        self.tab_15 = QtWidgets.QWidget()
        self.tab_15.setObjectName("tab_15")
        self.gridLayout_25 = QtWidgets.QGridLayout(self.tab_15)
        self.gridLayout_25.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_25.setSpacing(0)
        self.gridLayout_25.setObjectName("gridLayout_25")
        self.wefe_tableview = QtWidgets.QTableView(parent=self.tab_15)
        self.wefe_tableview.setStyleSheet("\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(91,147,188);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: rgb(91,147,188);\n"
"    }\n"
"    \n"
" QTableView {\n"
"     background-color: transparent;\n"
"     selection-background-color: #7e57c2;\n"
"     gridline-color:transparent;\n"
"     color:#fff;\n"
" }\n"
" QTableView::item {\n"
"     padding: 1px;\n"
"     background:rgb(91,147,188);\n"
" }\n"
" QTableView::item:selected {\n"
"     color: #fff;\n"
"      background:rgb(91, 147, 188);\n"
" }\n"
" ")
        self.wefe_tableview.setShowGrid(False)
        self.wefe_tableview.setSortingEnabled(True)
        self.wefe_tableview.setObjectName("wefe_tableview")
        self.wefe_tableview.horizontalHeader().setStretchLastSection(True)
        self.wefe_tableview.verticalHeader().setVisible(False)
        self.gridLayout_25.addWidget(self.wefe_tableview, 0, 0, 1, 1)
        self.tabWidget_4.addTab(self.tab_15, icon1, "")
        self.tab_14 = QtWidgets.QWidget()
        self.tab_14.setObjectName("tab_14")
        self.gridLayout_26 = QtWidgets.QGridLayout(self.tab_14)
        self.gridLayout_26.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_26.setSpacing(0)
        self.gridLayout_26.setObjectName("gridLayout_26")
        self.cspr_tableview = QtWidgets.QTableView(parent=self.tab_14)
        self.cspr_tableview.setStyleSheet("\n"
" QTableView {\n"
"     background-color: transparent;\n"
"     selection-background-color: #7e57c2;\n"
"     gridline-color:transparent;\n"
"    color:#fff;\n"
" }\n"
" QTableView::item {\n"
"     padding: 1px;\n"
"     background:rgb(240,185,102);\n"
" }\n"
" QTableView::item:selected {\n"
"     color: #fff;\n"
"     background:rgb(240,185,102);\n"
" }\n"
" ")
        self.cspr_tableview.setShowGrid(False)
        self.cspr_tableview.setSortingEnabled(True)
        self.cspr_tableview.setObjectName("cspr_tableview")
        self.cspr_tableview.horizontalHeader().setStretchLastSection(True)
        self.cspr_tableview.verticalHeader().setVisible(False)
        self.gridLayout_26.addWidget(self.cspr_tableview, 0, 0, 1, 1)
        self.tabWidget_4.addTab(self.tab_14, icon2, "")
        self.gridLayout_21.addWidget(self.tabWidget_4, 0, 0, 1, 1)
        self.mainStack.addWidget(self.mentaldatapage)
        self.datetimes = QtWidgets.QWidget()
        self.datetimes.setObjectName("datetimes")
        self.gridLayout = QtWidgets.QGridLayout(self.datetimes)
        self.gridLayout.setObjectName("gridLayout")
        self.frame1 = QtWidgets.QFrame(parent=self.datetimes)
        self.frame1.setObjectName("frame1")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.frame1)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.wefe_frame = QtWidgets.QFrame(parent=self.frame1)
        self.wefe_frame.setObjectName("wefe_frame")
        self.gridLayout_41 = QtWidgets.QGridLayout(self.wefe_frame)
        self.gridLayout_41.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_41.setObjectName("gridLayout_41")
        self.wefe_time = QtWidgets.QTimeEdit(parent=self.wefe_frame)
        self.wefe_time.setObjectName("wefe_time")
        self.gridLayout_41.addWidget(self.wefe_time, 1, 0, 1, 1)
        self.wefe_date = QtWidgets.QDateEdit(parent=self.wefe_frame)
        self.wefe_date.setObjectName("wefe_date")
        self.gridLayout_41.addWidget(self.wefe_date, 0, 0, 1, 1)
        self.horizontalLayout_4.addWidget(self.wefe_frame)
        self.frame2 = QtWidgets.QFrame(parent=self.frame1)
        self.frame2.setObjectName("frame2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.frame2)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.lily_date = QtWidgets.QDateEdit(parent=self.frame2)
        self.lily_date.setFrame(False)
        self.lily_date.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lily_date.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.lily_date.setObjectName("lily_date")
        self.verticalLayout_2.addWidget(self.lily_date)
        self.cspr_date = QtWidgets.QDateEdit(parent=self.frame2)
        self.cspr_date.setObjectName("cspr_date")
        self.verticalLayout_2.addWidget(self.cspr_date)
        self.cspr_time = QtWidgets.QTimeEdit(parent=self.frame2)
        self.cspr_time.setObjectName("cspr_time")
        self.verticalLayout_2.addWidget(self.cspr_time)
        self.lily_time = QtWidgets.QTimeEdit(parent=self.frame2)
        self.lily_time.setStyleSheet("\n"
"QTimeEdit {\n"
"color:rgb(205,178,214);\n"
"font-size:10pt;\n"
"}\n"
"QTimeEdit:hover {\n"
"color: rgb(225,198,234);\n"
"}\n"
"QTimeEdit:focus {\n"
"color: rgb(245,218,254);\n"
"}\n"
"    ")
        self.lily_time.setFrame(False)
        self.lily_time.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lily_time.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.lily_time.setObjectName("lily_time")
        self.verticalLayout_2.addWidget(self.lily_time)
        self.horizontalLayout_4.addWidget(self.frame2)
        self.mm_frame = QtWidgets.QFrame(parent=self.frame1)
        self.mm_frame.setObjectName("mm_frame")
        self.gridLayout_44 = QtWidgets.QGridLayout(self.mm_frame)
        self.gridLayout_44.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_44.setObjectName("gridLayout_44")
        self.mmdmr_time = QtWidgets.QTimeEdit(parent=self.mm_frame)
        self.mmdmr_time.setObjectName("mmdmr_time")
        self.gridLayout_44.addWidget(self.mmdmr_time, 2, 0, 1, 1)
        self.lily_notes_time = QtWidgets.QTimeEdit(parent=self.mm_frame)
        self.lily_notes_time.setObjectName("lily_notes_time")
        self.gridLayout_44.addWidget(self.lily_notes_time, 1, 0, 1, 1)
        self.mmdmr_date = QtWidgets.QDateEdit(parent=self.mm_frame)
        self.mmdmr_date.setObjectName("mmdmr_date")
        self.gridLayout_44.addWidget(self.mmdmr_date, 0, 0, 1, 1)
        self.horizontalLayout_4.addWidget(self.mm_frame)
        self.gridLayout.addWidget(self.frame1, 0, 0, 1, 1)
        self.sleep_time = QtWidgets.QTimeEdit(parent=self.datetimes)
        self.sleep_time.setObjectName("sleep_time")
        self.gridLayout.addWidget(self.sleep_time, 3, 0, 1, 1)
        self.basics_time = QtWidgets.QTimeEdit(parent=self.datetimes)
        self.basics_time.setObjectName("basics_time")
        self.gridLayout.addWidget(self.basics_time, 6, 0, 1, 1)
        self.sleep_date = QtWidgets.QDateEdit(parent=self.datetimes)
        self.sleep_date.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QDateEdit\n"
"/////////////////////////////////////////////////////////////// */\n"
"QDateEdit {color:rgb(132,127,239);}\n"
"QDateEdit:hover {color: rgb(152,147,255);}\n"
"QDateEdit:focus {color: rgb(172,167,255);}\n"
"")
        self.sleep_date.setFrame(False)
        self.sleep_date.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.sleep_date.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.sleep_date.setObjectName("sleep_date")
        self.gridLayout.addWidget(self.sleep_date, 2, 0, 1, 1)
        self.diet_time = QtWidgets.QTimeEdit(parent=self.datetimes)
        self.diet_time.setObjectName("diet_time")
        self.gridLayout.addWidget(self.diet_time, 5, 0, 1, 1)
        self.diet_date = QtWidgets.QDateEdit(parent=self.datetimes)
        self.diet_date.setObjectName("diet_date")
        self.gridLayout.addWidget(self.diet_date, 4, 0, 1, 1)
        self.basics_date = QtWidgets.QDateEdit(parent=self.datetimes)
        self.basics_date.setMinimumDateTime(QtCore.QDateTime(QtCore.QDate(2023, 9, 14), QtCore.QTime(0, 0, 0)))
        self.basics_date.setDate(QtCore.QDate(2023, 9, 14))
        self.basics_date.setObjectName("basics_date")
        self.gridLayout.addWidget(self.basics_date, 1, 0, 1, 1)
        self.mainStack.addWidget(self.datetimes)
        self.gridLayout_20.addWidget(self.mainStack, 0, 0, 1, 1)
        self.exercise_extras = QtWidgets.QFrame(parent=self.centralwidget)
        self.exercise_extras.setObjectName("exercise_extras")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.exercise_extras)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setSpacing(0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.gridLayout_20.addWidget(self.exercise_extras, 1, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 325, 15))
        self.menubar.setObjectName("menubar")
        self.menuTracker = QtWidgets.QMenu(parent=self.menubar)
        self.menuTracker.setObjectName("menuTracker")
        self.menuViews = QtWidgets.QMenu(parent=self.menubar)
        self.menuViews.setObjectName("menuViews")
        self.menuData = QtWidgets.QMenu(parent=self.menubar)
        self.menuData.setObjectName("menuData")
        self.menuCommits = QtWidgets.QMenu(parent=self.menuData)
        self.menuCommits.setObjectName("menuCommits")
        self.menuAgenda_2 = QtWidgets.QMenu(parent=self.menuCommits)
        self.menuAgenda_2.setObjectName("menuAgenda_2")
        self.menuAgenda = QtWidgets.QMenu(parent=self.menubar)
        self.menuAgenda.setObjectName("menuAgenda")
        self.menuFormatting = QtWidgets.QMenu(parent=self.menuAgenda)
        self.menuFormatting.setObjectName("menuFormatting")
        self.menucolors = QtWidgets.QMenu(parent=self.menuFormatting)
        self.menucolors.setObjectName("menucolors")
        self.menualignment = QtWidgets.QMenu(parent=self.menuFormatting)
        self.menualignment.setObjectName("menualignment")
        self.menuthe_usual = QtWidgets.QMenu(parent=self.menuFormatting)
        self.menuthe_usual.setObjectName("menuthe_usual")
        self.menuViews_2 = QtWidgets.QMenu(parent=self.menuAgenda)
        self.menuViews_2.setObjectName("menuViews_2")
        self.menuInjection = QtWidgets.QMenu(parent=self.menuAgenda)
        self.menuInjection.setObjectName("menuInjection")
        MainWindow.setMenuBar(self.menubar)
        self.actionExit = QtGui.QAction(parent=MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionBDSInput = QtGui.QAction(parent=MainWindow)
        self.actionBDSInput.setObjectName("actionBDSInput")
        self.actionSleepDataView = QtGui.QAction(parent=MainWindow)
        self.actionSleepDataView.setObjectName("actionSleepDataView")
        self.actionDietDataView = QtGui.QAction(parent=MainWindow)
        self.actionDietDataView.setObjectName("actionDietDataView")
        self.actionBasicsDataView = QtGui.QAction(parent=MainWindow)
        self.actionBasicsDataView.setObjectName("actionBasicsDataView")
        self.actionLilysPage = QtGui.QAction(parent=MainWindow)
        self.actionLilysPage.setObjectName("actionLilysPage")
        self.actionLilyDataView = QtGui.QAction(parent=MainWindow)
        self.actionLilyDataView.setObjectName("actionLilyDataView")
        self.actionTotalHours = QtGui.QAction(parent=MainWindow)
        self.actionTotalHours.setObjectName("actionTotalHours")
        self.actionDelete = QtGui.QAction(parent=MainWindow)
        self.actionDelete.setObjectName("actionDelete")
        self.actionCommitSleep = QtGui.QAction(parent=MainWindow)
        self.actionCommitSleep.setObjectName("actionCommitSleep")
        self.actionCommitDiet = QtGui.QAction(parent=MainWindow)
        self.actionCommitDiet.setObjectName("actionCommitDiet")
        self.actionCommitLilyMood = QtGui.QAction(parent=MainWindow)
        self.actionCommitLilyMood.setObjectName("actionCommitLilyMood")
        self.actionCommitLilysTimeInRoom = QtGui.QAction(parent=MainWindow)
        self.actionCommitLilysTimeInRoom.setObjectName("actionCommitLilysTimeInRoom")
        self.actionMentalModsView = QtGui.QAction(parent=MainWindow)
        self.actionMentalModsView.setObjectName("actionMentalModsView")
        self.actionMentalDataView = QtGui.QAction(parent=MainWindow)
        self.actionMentalDataView.setObjectName("actionMentalDataView")
        self.actionCommitMMDMr = QtGui.QAction(parent=MainWindow)
        self.actionCommitMMDMr.setObjectName("actionCommitMMDMr")
        self.actionCommitWEFE = QtGui.QAction(parent=MainWindow)
        self.actionCommitWEFE.setObjectName("actionCommitWEFE")
        self.actionCommitCSPR = QtGui.QAction(parent=MainWindow)
        self.actionCommitCSPR.setObjectName("actionCommitCSPR")
        self.actionSave = QtGui.QAction(parent=MainWindow)
        self.actionSave.setObjectName("actionSave")
        self.actionPrint = QtGui.QAction(parent=MainWindow)
        self.actionPrint.setObjectName("actionPrint")
        self.actionViewJournalSun = QtGui.QAction(parent=MainWindow)
        self.actionViewJournalSun.setObjectName("actionViewJournalSun")
        self.actionViewJournalMon = QtGui.QAction(parent=MainWindow)
        self.actionViewJournalMon.setObjectName("actionViewJournalMon")
        self.actionViewJournalTues = QtGui.QAction(parent=MainWindow)
        self.actionViewJournalTues.setObjectName("actionViewJournalTues")
        self.actionViewJournalWed = QtGui.QAction(parent=MainWindow)
        self.actionViewJournalWed.setObjectName("actionViewJournalWed")
        self.actionViewJournalThurs = QtGui.QAction(parent=MainWindow)
        self.actionViewJournalThurs.setObjectName("actionViewJournalThurs")
        self.actionViewJournalFri = QtGui.QAction(parent=MainWindow)
        self.actionViewJournalFri.setObjectName("actionViewJournalFri")
        self.actionViewJournalSat = QtGui.QAction(parent=MainWindow)
        self.actionViewJournalSat.setObjectName("actionViewJournalSat")
        self.actionTextHighlight = QtGui.QAction(parent=MainWindow)
        self.actionTextHighlight.setObjectName("actionTextHighlight")
        self.actionTextColor = QtGui.QAction(parent=MainWindow)
        self.actionTextColor.setObjectName("actionTextColor")
        self.actionTextAlignCenter = QtGui.QAction(parent=MainWindow)
        self.actionTextAlignCenter.setObjectName("actionTextAlignCenter")
        self.actionTextAlignJustify = QtGui.QAction(parent=MainWindow)
        self.actionTextAlignJustify.setObjectName("actionTextAlignJustify")
        self.actionTextAlignLeft = QtGui.QAction(parent=MainWindow)
        self.actionTextAlignLeft.setObjectName("actionTextAlignLeft")
        self.actionTextAlignRight = QtGui.QAction(parent=MainWindow)
        self.actionTextAlignRight.setObjectName("actionTextAlignRight")
        self.actionTextBold = QtGui.QAction(parent=MainWindow)
        self.actionTextBold.setObjectName("actionTextBold")
        self.actionTextItalic = QtGui.QAction(parent=MainWindow)
        self.actionTextItalic.setObjectName("actionTextItalic")
        self.actionTextUnderline = QtGui.QAction(parent=MainWindow)
        self.actionTextUnderline.setObjectName("actionTextUnderline")
        self.actionTextStrike = QtGui.QAction(parent=MainWindow)
        self.actionTextStrike.setObjectName("actionTextStrike")
        self.actionTextSuperScript = QtGui.QAction(parent=MainWindow)
        self.actionTextSuperScript.setObjectName("actionTextSuperScript")
        self.actionTextSubscript = QtGui.QAction(parent=MainWindow)
        self.actionTextSubscript.setObjectName("actionTextSubscript")
        self.actionTextIncrease = QtGui.QAction(parent=MainWindow)
        self.actionTextIncrease.setObjectName("actionTextIncrease")
        self.actionTextDecrease = QtGui.QAction(parent=MainWindow)
        self.actionTextDecrease.setObjectName("actionTextDecrease")
        self.actionInjectDate = QtGui.QAction(parent=MainWindow)
        self.actionInjectDate.setObjectName("actionInjectDate")
        self.actionInjectTime = QtGui.QAction(parent=MainWindow)
        self.actionInjectTime.setObjectName("actionInjectTime")
        self.actionInjectTable = QtGui.QAction(parent=MainWindow)
        self.actionInjectTable.setObjectName("actionInjectTable")
        self.action_input_view_agenda = QtGui.QAction(parent=MainWindow)
        self.action_input_view_agenda.setObjectName("action_input_view_agenda")
        self.action_data_view_agenda = QtGui.QAction(parent=MainWindow)
        self.action_data_view_agenda.setObjectName("action_data_view_agenda")
        self.actionSunday = QtGui.QAction(parent=MainWindow)
        self.actionSunday.setObjectName("actionSunday")
        self.actionMonday = QtGui.QAction(parent=MainWindow)
        self.actionMonday.setObjectName("actionMonday")
        self.actionTuesday = QtGui.QAction(parent=MainWindow)
        self.actionTuesday.setObjectName("actionTuesday")
        self.actionWednesday = QtGui.QAction(parent=MainWindow)
        self.actionWednesday.setObjectName("actionWednesday")
        self.actionThursday = QtGui.QAction(parent=MainWindow)
        self.actionThursday.setObjectName("actionThursday")
        self.actionFriday = QtGui.QAction(parent=MainWindow)
        self.actionFriday.setObjectName("actionFriday")
        self.actionSaturday = QtGui.QAction(parent=MainWindow)
        self.actionSaturday.setObjectName("actionSaturday")
        self.actionToggleWeekBar = QtGui.QAction(parent=MainWindow)
        self.actionToggleWeekBar.setObjectName("actionToggleWeekBar")
        self.actionAgendaSmall = QtGui.QAction(parent=MainWindow)
        self.actionAgendaSmall.setObjectName("actionAgendaSmall")
        self.actionAgendaMedium = QtGui.QAction(parent=MainWindow)
        self.actionAgendaMedium.setObjectName("actionAgendaMedium")
        self.actionAgendaLarge = QtGui.QAction(parent=MainWindow)
        self.actionAgendaLarge.setObjectName("actionAgendaLarge")
        self.menuTracker.addAction(self.actionExit)
        self.menuTracker.addAction(self.actionTotalHours)
        self.menuViews.addAction(self.actionBDSInput)
        self.menuViews.addAction(self.actionSleepDataView)
        self.menuViews.addAction(self.actionDietDataView)
        self.menuViews.addAction(self.actionBasicsDataView)
        self.menuViews.addAction(self.actionLilysPage)
        self.menuViews.addAction(self.actionLilyDataView)
        self.menuViews.addAction(self.actionMentalModsView)
        self.menuViews.addAction(self.actionMentalDataView)
        self.menuViews.addAction(self.action_input_view_agenda)
        self.menuViews.addAction(self.action_data_view_agenda)
        self.menuViews.addAction(self.actionToggleWeekBar)
        self.menuAgenda_2.addAction(self.actionSunday)
        self.menuAgenda_2.addAction(self.actionMonday)
        self.menuAgenda_2.addAction(self.actionTuesday)
        self.menuAgenda_2.addAction(self.actionWednesday)
        self.menuAgenda_2.addAction(self.actionThursday)
        self.menuAgenda_2.addAction(self.actionFriday)
        self.menuAgenda_2.addAction(self.actionSaturday)
        self.menuCommits.addAction(self.actionCommitSleep)
        self.menuCommits.addAction(self.actionCommitDiet)
        self.menuCommits.addAction(self.actionCommitLilyMood)
        self.menuCommits.addAction(self.actionCommitLilysTimeInRoom)
        self.menuCommits.addAction(self.actionCommitMMDMr)
        self.menuCommits.addAction(self.actionCommitWEFE)
        self.menuCommits.addAction(self.actionCommitCSPR)
        self.menuCommits.addAction(self.menuAgenda_2.menuAction())
        self.menuData.addAction(self.actionDelete)
        self.menuData.addAction(self.menuCommits.menuAction())
        self.menucolors.addAction(self.actionTextHighlight)
        self.menucolors.addAction(self.actionTextColor)
        self.menualignment.addAction(self.actionTextAlignCenter)
        self.menualignment.addAction(self.actionTextAlignJustify)
        self.menualignment.addAction(self.actionTextAlignLeft)
        self.menualignment.addAction(self.actionTextAlignRight)
        self.menuthe_usual.addAction(self.actionTextBold)
        self.menuthe_usual.addAction(self.actionTextItalic)
        self.menuthe_usual.addAction(self.actionTextUnderline)
        self.menuthe_usual.addAction(self.actionTextStrike)
        self.menuthe_usual.addAction(self.actionTextSuperScript)
        self.menuthe_usual.addAction(self.actionTextSubscript)
        self.menuFormatting.addAction(self.menuthe_usual.menuAction())
        self.menuFormatting.addAction(self.menualignment.menuAction())
        self.menuFormatting.addAction(self.menucolors.menuAction())
        self.menuFormatting.addAction(self.actionTextIncrease)
        self.menuFormatting.addAction(self.actionTextDecrease)
        self.menuViews_2.addAction(self.actionViewJournalSun)
        self.menuViews_2.addAction(self.actionViewJournalMon)
        self.menuViews_2.addAction(self.actionViewJournalTues)
        self.menuViews_2.addAction(self.actionViewJournalWed)
        self.menuViews_2.addAction(self.actionViewJournalThurs)
        self.menuViews_2.addAction(self.actionViewJournalFri)
        self.menuViews_2.addAction(self.actionViewJournalSat)
        self.menuInjection.addAction(self.actionInjectDate)
        self.menuInjection.addAction(self.actionInjectTime)
        self.menuInjection.addAction(self.actionInjectTable)
        self.menuAgenda.addAction(self.menuViews_2.menuAction())
        self.menuAgenda.addAction(self.menuFormatting.menuAction())
        self.menuAgenda.addAction(self.menuInjection.menuAction())
        self.menuAgenda.addAction(self.actionSave)
        self.menuAgenda.addAction(self.actionPrint)
        self.menuAgenda.addAction(self.actionAgendaSmall)
        self.menuAgenda.addAction(self.actionAgendaMedium)
        self.menuAgenda.addAction(self.actionAgendaLarge)
        self.menubar.addAction(self.menuTracker.menuAction())
        self.menubar.addAction(self.menuViews.menuAction())
        self.menubar.addAction(self.menuData.menuAction())
        self.menubar.addAction(self.menuAgenda.menuAction())

        self.retranslateUi(MainWindow)
        self.mainStack.setCurrentIndex(0)
        self.agendaStack.setCurrentIndex(0)
        self.agenda_journal_stack.setCurrentIndex(0)
        self.agenda_data_stack.setCurrentIndex(6)
        self.tabWidget_3.setCurrentIndex(0)
        self.tabWidget.setCurrentIndex(0)
        self.tabWidget_2.setCurrentIndex(0)
        self.shower_tab.setCurrentIndex(0)
        self.lily_data_stack.setCurrentIndex(0)
        self.tabWidget_4.setCurrentIndex(0)
        self.shower_c.clicked.connect(self.shower_check.toggle) # type: ignore
        self.teeth_commit.clicked.connect(self.tooth_check.toggle) # type: ignore
        self.yoga_commit.clicked.connect(self.exerc_check.toggle) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.time_asleep, self.time_awake)
        MainWindow.setTabOrder(self.time_awake, self.woke_up_like)
        MainWindow.setTabOrder(self.woke_up_like, self.sleep_quality_slider)
        MainWindow.setTabOrder(self.sleep_quality_slider, self.woke_up_like_slider)
        MainWindow.setTabOrder(self.woke_up_like_slider, self.eight_ounce_cup)
        MainWindow.setTabOrder(self.eight_ounce_cup, self.thirty_two_ounce_cup)
        MainWindow.setTabOrder(self.thirty_two_ounce_cup, self.sixteen_ounce_cup)
        MainWindow.setTabOrder(self.sixteen_ounce_cup, self.twenty_four_ounce_cup)
        MainWindow.setTabOrder(self.twenty_four_ounce_cup, self.total_hours_slept)
        MainWindow.setTabOrder(self.total_hours_slept, self.shower_c)
        MainWindow.setTabOrder(self.shower_c, self.teeth_commit)
        MainWindow.setTabOrder(self.teeth_commit, self.yoga_commit)
        MainWindow.setTabOrder(self.yoga_commit, self.shower_check)
        MainWindow.setTabOrder(self.shower_check, self.tooth_check)
        MainWindow.setTabOrder(self.tooth_check, self.exerc_check)
        MainWindow.setTabOrder(self.exerc_check, self.tabWidget)
        MainWindow.setTabOrder(self.tabWidget, self.sleep_tableview)
        MainWindow.setTabOrder(self.sleep_tableview, self.total_hours_slept_tableview)
        MainWindow.setTabOrder(self.total_hours_slept_tableview, self.woke_up_like_tableview)
        MainWindow.setTabOrder(self.woke_up_like_tableview, self.sleep_quality_tableview)
        MainWindow.setTabOrder(self.sleep_quality_tableview, self.tabWidget_2)
        MainWindow.setTabOrder(self.tabWidget_2, self.diet_table)
        MainWindow.setTabOrder(self.diet_table, self.hydration_table)
        MainWindow.setTabOrder(self.hydration_table, self.shower_tab)
        MainWindow.setTabOrder(self.shower_tab, self.shower_table)
        MainWindow.setTabOrder(self.shower_table, self.teethbrushed_table)
        MainWindow.setTabOrder(self.teethbrushed_table, self.yoga_table)
        MainWindow.setTabOrder(self.yoga_table, self.lily_walk_btn)
        MainWindow.setTabOrder(self.lily_walk_btn, self.lily_ate_check)
        MainWindow.setTabOrder(self.lily_ate_check, self.lily_behavior_slider)
        MainWindow.setTabOrder(self.lily_behavior_slider, self.lily_gait_slider)
        MainWindow.setTabOrder(self.lily_gait_slider, self.lily_mood)
        MainWindow.setTabOrder(self.lily_mood, self.lily_energy)
        MainWindow.setTabOrder(self.lily_energy, self.lily_mood_activity_slider)
        MainWindow.setTabOrder(self.lily_mood_activity_slider, self.lily_energy_slider)
        MainWindow.setTabOrder(self.lily_energy_slider, self.lily_mood_slider)
        MainWindow.setTabOrder(self.lily_mood_slider, self.lily_activity)
        MainWindow.setTabOrder(self.lily_activity, self.lily_time_in_room_slider)
        MainWindow.setTabOrder(self.lily_time_in_room_slider, self.lily_time_in_room)
        MainWindow.setTabOrder(self.lily_time_in_room, self.lily_notes)
        MainWindow.setTabOrder(self.lily_notes, self.lily_note_commit_btn)
        MainWindow.setTabOrder(self.lily_note_commit_btn, self.lily_data_stack)
        MainWindow.setTabOrder(self.lily_data_stack, self.lily_walk_table)
        MainWindow.setTabOrder(self.lily_walk_table, self.lily_walk_note_table)
        MainWindow.setTabOrder(self.lily_walk_note_table, self.lily_notes_table)
        MainWindow.setTabOrder(self.lily_notes_table, self.lily_diet_table)
        MainWindow.setTabOrder(self.lily_diet_table, self.lily_mood_table)
        MainWindow.setTabOrder(self.lily_mood_table, self.time_in_room_table)
        MainWindow.setTabOrder(self.time_in_room_table, self.wefe_time)
        MainWindow.setTabOrder(self.wefe_time, self.wefe_date)
        MainWindow.setTabOrder(self.wefe_date, self.lily_date)
        MainWindow.setTabOrder(self.lily_date, self.cspr_date)
        MainWindow.setTabOrder(self.cspr_date, self.cspr_time)
        MainWindow.setTabOrder(self.cspr_time, self.lily_time)
        MainWindow.setTabOrder(self.lily_time, self.mmdmr_time)
        MainWindow.setTabOrder(self.mmdmr_time, self.mmdmr_date)
        MainWindow.setTabOrder(self.mmdmr_date, self.lily_notes_time)
        MainWindow.setTabOrder(self.lily_notes_time, self.basics_date)
        MainWindow.setTabOrder(self.basics_date, self.sleep_date)
        MainWindow.setTabOrder(self.sleep_date, self.sleep_time)
        MainWindow.setTabOrder(self.sleep_time, self.diet_date)
        MainWindow.setTabOrder(self.diet_date, self.diet_time)
        MainWindow.setTabOrder(self.diet_time, self.basics_time)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.sun_note_one.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Helvetica\'; font-size:13pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Arial\'; font-size:12pt;\"><br /></p></body></html>"))
        self.sun_note_one.setPlaceholderText(_translate("MainWindow", "Sunday"))
        self.mon_note_one.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Helvetica\'; font-size:13pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Arial\'; font-size:12pt;\"><br /></p></body></html>"))
        self.mon_note_one.setPlaceholderText(_translate("MainWindow", "Monday"))
        self.tues_note_one.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Helvetica\'; font-size:13pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Arial\'; font-size:12pt;\"><br /></p></body></html>"))
        self.tues_note_one.setPlaceholderText(_translate("MainWindow", "Tuesday"))
        self.wed_note_one.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Helvetica\'; font-size:13pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Arial\'; font-size:12pt;\"><br /></p></body></html>"))
        self.wed_note_one.setPlaceholderText(_translate("MainWindow", "Wednesday"))
        self.thurs_note_one.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Helvetica\'; font-size:13pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Arial\'; font-size:12pt;\"><br /></p></body></html>"))
        self.thurs_note_one.setPlaceholderText(_translate("MainWindow", "Thursday"))
        self.fri_note_one.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Helvetica\'; font-size:13pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Arial\'; font-size:12pt;\"><br /></p></body></html>"))
        self.fri_note_one.setPlaceholderText(_translate("MainWindow", "Friday"))
        self.sat_note_one.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Helvetica\'; font-size:13pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Arial\'; font-size:12pt;\"><br /></p></body></html>"))
        self.sat_note_one.setPlaceholderText(_translate("MainWindow", "Saturday"))
        self.sat_date.setDisplayFormat(_translate("MainWindow", "M-d"))
        self.thurs_journal_nav_btn.setText(_translate("MainWindow", "THU"))
        self.sun_date.setDisplayFormat(_translate("MainWindow", "M-d"))
        self.sun_journal_nav_btn.setText(_translate("MainWindow", "SUN"))
        self.fri_date.setDisplayFormat(_translate("MainWindow", "M-d"))
        self.tues_date.setDisplayFormat(_translate("MainWindow", "M-d"))
        self.thurs_date.setDisplayFormat(_translate("MainWindow", "M-d"))
        self.sat_journal_nav_btn.setText(_translate("MainWindow", "SAT"))
        self.mon_date.setDisplayFormat(_translate("MainWindow", "M-d"))
        self.mon_journal_nav_btn.setText(_translate("MainWindow", "MON"))
        self.tues_journal_nav_btn.setText(_translate("MainWindow", "TUE"))
        self.wed_journal_nav_btn.setText(_translate("MainWindow", "WED"))
        self.fri_journal_nav_btn.setText(_translate("MainWindow", "FRI"))
        self.wed_date.setDisplayFormat(_translate("MainWindow", "M-d"))
        self.label_3.setText(_translate("MainWindow", "total.hrs.slept"))
        self.woke_like_lbl.setText(_translate("MainWindow", "woke.up.like"))
        self.label_2.setText(_translate("MainWindow", "time.awake"))
        self.label.setText(_translate("MainWindow", "time.asleep"))
        self.time_awake.setDisplayFormat(_translate("MainWindow", "hh:mm AP"))
        self.sleep_quality_lbl.setText(_translate("MainWindow", "sleep.quality"))
        self.total_hours_slept.setText(_translate("MainWindow", "⌘+3"))
        self.total_hours_slept.setPlaceholderText(_translate("MainWindow", "press opt+H to get total hours."))
        self.time_asleep.setDisplayFormat(_translate("MainWindow", "hh:mm AP"))
        self.food_eaten.setToolTip(_translate("MainWindow", "Input food eaten or shake drank!"))
        self.food_eaten.setPlaceholderText(_translate("MainWindow", "What did I eat..."))
        self.calories.setSuffix(_translate("MainWindow", " cal."))
        self.lily_walk_btn.setToolTip(_translate("MainWindow", "<html><head/><body><p>press opt+cmd+w to commit walk data!</p></body></html>"))
        self.lily_ate_check.setToolTip(_translate("MainWindow", "<html><head/><body><p>Press to <span style=\" font-style:italic;\">commit </span><span style=\" font-weight:600;\">Diet</span> Data</p></body></html>"))
        self.lily_behavior_slider.setToolTip(_translate("MainWindow", "how well my lil lady \n"
"behaved, did she pull tons \n"
"or just a little?"))
        self.lily_walk_note.setPlaceholderText(_translate("MainWindow", "press the paw to commit note ➞"))
        self.lily_walk_note_commit_btn.setToolTip(_translate("MainWindow", "<html><head/><body><p>press opt+cmd+w to commit walk data!</p></body></html>"))
        self.na_42.setText(_translate("MainWindow", "Behavior"))
        self.na_45.setText(_translate("MainWindow", "Gait"))
        self.lily_gait_slider.setToolTip(_translate("MainWindow", "How well my lady\n"
" walked the wilds!"))
        self.na_46.setText(_translate("MainWindow", "Lily\'s Mood"))
        self.lily_mood_slider.setToolTip(_translate("MainWindow", "Little wiggly\'s mood for the day!"))
        self.na_43.setText(_translate("MainWindow", "Lily\'s Activity"))
        self.lily_time_in_room_slider.setToolTip(_translate("MainWindow", "<html><head/><body><p>press cntrl+T to commit Time in Room Data</p></body></html>"))
        self.lily_energy.setToolTip(_translate("MainWindow", "Her overall energy, mostly to notice if she is acting sick"))
        self.lily_energy_slider.setToolTip(_translate("MainWindow", "Her overall energy, mostly to notice if she is acting sick"))
        self.lily_activity.setToolTip(_translate("MainWindow", "Little Lilys activity for the day, that is, her gait, her joy, her spunk :D"))
        self.na_41.setToolTip(_translate("MainWindow", "<html><head/><body><p>press cntrl+T to commit Time in Room Data</p></body></html>"))
        self.na_41.setText(_translate("MainWindow", "In Room"))
        self.lily_mood.setToolTip(_translate("MainWindow", "Little wiggly\'s mood for the day!"))
        self.na_44.setText(_translate("MainWindow", "Lily\'s Energy"))
        self.lily_time_in_room.setToolTip(_translate("MainWindow", "<html><head/><body><p>press cntrl+T to commit Time in Room Data</p></body></html>"))
        self.lily_mood_activity_slider.setToolTip(_translate("MainWindow", "Little Lilys activity for the day, that is, her gait, her joy, her spunk :D"))
        self.lily_notes.setPlaceholderText(_translate("MainWindow", "lily\'s notes and such, use the button below to commit to the dbs! ❤ "))
        self.lily_note_commit_btn.setToolTip(_translate("MainWindow", "<html><head/><body><p>press opt+cmd+w to commit walk data!</p></body></html>"))
        self.mood.setToolTip(_translate("MainWindow", "<html><head/><body><p>MOOD</p></body></html>"))
        self.mania.setToolTip(_translate("MainWindow", "<html><head/><body><p>MANIA</p></body></html>"))
        self.depression.setToolTip(_translate("MainWindow", "<html><head/><body><p>DEPRESSION</p></body></html>"))
        self.mixed_risk.setToolTip(_translate("MainWindow", "<html><head/><body><p>MIXED RISK</p></body></html>"))
        self.mixed_risk_slider.setToolTip(_translate("MainWindow", "<html><head/><body><p>MIXED RISK</p></body></html>"))
        self.depression_slider.setToolTip(_translate("MainWindow", "<html><head/><body><p>DEPRESSION</p></body></html>"))
        self.mania_slider.setToolTip(_translate("MainWindow", "<html><head/><body><p>MANIA</p></body></html>"))
        self.mood_slider.setToolTip(_translate("MainWindow", "<html><head/><body><p>MOOD</p></body></html>"))
        self.excite_spinbox.setToolTip(_translate("MainWindow", "<html><head/><body><p>FOCUS</p></body></html>"))
        self.wellbeing_spinbox.setToolTip(_translate("MainWindow", "<html><head/><body><p>WELLBEING</p></body></html>"))
        self.energy_spinbox.setToolTip(_translate("MainWindow", "<html><head/><body><p>EXCITEMENT</p></body></html>"))
        self.focus_spinbox.setToolTip(_translate("MainWindow", "<html><head/><body><p>ENERGY</p></body></html>"))
        self.energy_slider.setToolTip(_translate("MainWindow", "<html><head/><body><p>ENERGY</p></body></html>"))
        self.focus_slider.setToolTip(_translate("MainWindow", "<html><head/><body><p>FOCUS</p></body></html>"))
        self.excite_slider.setToolTip(_translate("MainWindow", "<html><head/><body><p>EXCITEMENT</p></body></html>"))
        self.wellbeing_slider.setToolTip(_translate("MainWindow", "<html><head/><body><p>WELLBEING</p></body></html>"))
        self.rage_slider.setToolTip(_translate("MainWindow", "<html><head/><body><p>Rage</p></body></html>"))
        self.rage_spinbox.setToolTip(_translate("MainWindow", "<html><head/><body><p>Rage</p></body></html>"))
        self.pain_spinbox.setToolTip(_translate("MainWindow", "<html><head/><body><p>Pain</p></body></html>"))
        self.stress_spinbox.setToolTip(_translate("MainWindow", "<html><head/><body><p>Stress</p></body></html>"))
        self.calm_spinbox.setToolTip(_translate("MainWindow", "<html><head/><body><p>Calm</p></body></html>"))
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.tab_4), _translate("MainWindow", "Awake and Time Asleep"))
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.tab_5), _translate("MainWindow", "Total Hours Slept Data"))
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.tab_6), _translate("MainWindow", "Woke Up Like Data"))
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.tab_7), _translate("MainWindow", "Slept Like Data"))
        self.lily_date.setDisplayFormat(_translate("MainWindow", "yyyy/MM/dd"))
        self.lily_time.setDisplayFormat(_translate("MainWindow", "hh:mm:ss"))
        self.sleep_time.setDisplayFormat(_translate("MainWindow", "hh:mm:ss"))
        self.basics_time.setDisplayFormat(_translate("MainWindow", "hh:mm:ss"))
        self.sleep_date.setToolTip(_translate("MainWindow", "BASICS DATE"))
        self.sleep_date.setDisplayFormat(_translate("MainWindow", "yyyy/MM/dd"))
        self.diet_time.setDisplayFormat(_translate("MainWindow", "hh:mm:ss"))
        self.diet_date.setDisplayFormat(_translate("MainWindow", "yyyy/MM/dd"))
        self.basics_date.setDisplayFormat(_translate("MainWindow", "yyyy/MM/dd"))
        self.menuTracker.setTitle(_translate("MainWindow", "Tracker"))
        self.menuViews.setTitle(_translate("MainWindow", "Views"))
        self.menuData.setTitle(_translate("MainWindow", "Data"))
        self.menuCommits.setTitle(_translate("MainWindow", "Commits"))
        self.menuAgenda_2.setTitle(_translate("MainWindow", "Agenda"))
        self.menuAgenda.setTitle(_translate("MainWindow", "Agenda"))
        self.menuFormatting.setTitle(_translate("MainWindow", "Formatting"))
        self.menucolors.setTitle(_translate("MainWindow", "colors"))
        self.menualignment.setTitle(_translate("MainWindow", "alignment"))
        self.menuthe_usual.setTitle(_translate("MainWindow", "the usual"))
        self.menuViews_2.setTitle(_translate("MainWindow", "Views"))
        self.menuInjection.setTitle(_translate("MainWindow", "Injection"))
        self.actionExit.setText(_translate("MainWindow", "Close"))
        self.actionExit.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.actionBDSInput.setText(_translate("MainWindow", "BDS Input"))
        self.actionBDSInput.setShortcut(_translate("MainWindow", "Ctrl+2"))
        self.actionSleepDataView.setText(_translate("MainWindow", "Sleep DataView"))
        self.actionSleepDataView.setShortcut(_translate("MainWindow", "Ctrl+5"))
        self.actionDietDataView.setText(_translate("MainWindow", "Diet DataView"))
        self.actionDietDataView.setShortcut(_translate("MainWindow", "Ctrl+6"))
        self.actionBasicsDataView.setText(_translate("MainWindow", "Basics DataView"))
        self.actionBasicsDataView.setShortcut(_translate("MainWindow", "Ctrl+7"))
        self.actionLilysPage.setText(_translate("MainWindow", "Lily\'s Page"))
        self.actionLilysPage.setShortcut(_translate("MainWindow", "Ctrl+3"))
        self.actionLilyDataView.setText(_translate("MainWindow", "Lily\'s DataView"))
        self.actionLilyDataView.setShortcut(_translate("MainWindow", "Ctrl+8"))
        self.actionTotalHours.setText(_translate("MainWindow", "Total Hours Slept"))
        self.actionTotalHours.setShortcut(_translate("MainWindow", "Meta+S"))
        self.actionDelete.setText(_translate("MainWindow", "Delete"))
        self.actionDelete.setShortcut(_translate("MainWindow", "Ctrl+Shift+D"))
        self.actionCommitSleep.setText(_translate("MainWindow", "Commit Sleep"))
        self.actionCommitSleep.setShortcut(_translate("MainWindow", "Alt+S"))
        self.actionCommitDiet.setText(_translate("MainWindow", "Commit Diet"))
        self.actionCommitDiet.setShortcut(_translate("MainWindow", "Alt+D"))
        self.actionCommitLilyMood.setText(_translate("MainWindow", "Commit Lily Mood"))
        self.actionCommitLilyMood.setShortcut(_translate("MainWindow", "Alt+M"))
        self.actionCommitLilysTimeInRoom.setText(_translate("MainWindow", "Commit Lily\'s Time In Room"))
        self.actionCommitLilysTimeInRoom.setShortcut(_translate("MainWindow", "Alt+T"))
        self.actionMentalModsView.setText(_translate("MainWindow", "Mental Module"))
        self.actionMentalModsView.setShortcut(_translate("MainWindow", "Ctrl+4"))
        self.actionMentalDataView.setText(_translate("MainWindow", "Mental Data"))
        self.actionMentalDataView.setShortcut(_translate("MainWindow", "Ctrl+9"))
        self.actionCommitMMDMr.setText(_translate("MainWindow", "Commit MMDMr"))
        self.actionCommitMMDMr.setShortcut(_translate("MainWindow", "Alt+Shift+1"))
        self.actionCommitWEFE.setText(_translate("MainWindow", "Commit WEFE"))
        self.actionCommitWEFE.setShortcut(_translate("MainWindow", "Alt+Shift+2"))
        self.actionCommitCSPR.setText(_translate("MainWindow", "Commit CSPR"))
        self.actionCommitCSPR.setShortcut(_translate("MainWindow", "Alt+Shift+3"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionSave.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionPrint.setText(_translate("MainWindow", "Print"))
        self.actionPrint.setShortcut(_translate("MainWindow", "Ctrl+P"))
        self.actionViewJournalSun.setText(_translate("MainWindow", "Sunday"))
        self.actionViewJournalSun.setShortcut(_translate("MainWindow", "Meta+1"))
        self.actionViewJournalMon.setText(_translate("MainWindow", "Monday"))
        self.actionViewJournalMon.setShortcut(_translate("MainWindow", "Meta+2"))
        self.actionViewJournalTues.setText(_translate("MainWindow", "Tuesday"))
        self.actionViewJournalTues.setShortcut(_translate("MainWindow", "Meta+3"))
        self.actionViewJournalWed.setText(_translate("MainWindow", "Wednesday"))
        self.actionViewJournalWed.setShortcut(_translate("MainWindow", "Meta+4"))
        self.actionViewJournalThurs.setText(_translate("MainWindow", "Thursday"))
        self.actionViewJournalThurs.setShortcut(_translate("MainWindow", "Meta+5"))
        self.actionViewJournalFri.setText(_translate("MainWindow", "Friday"))
        self.actionViewJournalFri.setShortcut(_translate("MainWindow", "Meta+6"))
        self.actionViewJournalSat.setText(_translate("MainWindow", "Saturday"))
        self.actionViewJournalSat.setShortcut(_translate("MainWindow", "Meta+7"))
        self.actionTextHighlight.setText(_translate("MainWindow", "highlight"))
        self.actionTextHighlight.setShortcut(_translate("MainWindow", "Meta+Shift+H"))
        self.actionTextColor.setText(_translate("MainWindow", "text color"))
        self.actionTextColor.setShortcut(_translate("MainWindow", "Meta+Shift+C"))
        self.actionTextAlignCenter.setText(_translate("MainWindow", "center"))
        self.actionTextAlignCenter.setShortcut(_translate("MainWindow", "Meta+Ctrl+Shift+C"))
        self.actionTextAlignJustify.setText(_translate("MainWindow", "justify"))
        self.actionTextAlignJustify.setShortcut(_translate("MainWindow", "Meta+Ctrl+Shift+V"))
        self.actionTextAlignLeft.setText(_translate("MainWindow", "left"))
        self.actionTextAlignLeft.setShortcut(_translate("MainWindow", "Meta+Ctrl+Shift+Z"))
        self.actionTextAlignRight.setText(_translate("MainWindow", "right"))
        self.actionTextAlignRight.setShortcut(_translate("MainWindow", "Meta+Ctrl+Shift+X"))
        self.actionTextBold.setText(_translate("MainWindow", "bold"))
        self.actionTextBold.setShortcut(_translate("MainWindow", "Ctrl+B"))
        self.actionTextItalic.setText(_translate("MainWindow", "italic"))
        self.actionTextItalic.setShortcut(_translate("MainWindow", "Ctrl+I"))
        self.actionTextUnderline.setText(_translate("MainWindow", "underline"))
        self.actionTextUnderline.setShortcut(_translate("MainWindow", "Ctrl+U"))
        self.actionTextStrike.setText(_translate("MainWindow", "strikethrough"))
        self.actionTextStrike.setShortcut(_translate("MainWindow", "Ctrl+Shift+U"))
        self.actionTextSuperScript.setText(_translate("MainWindow", "superscript"))
        self.actionTextSuperScript.setShortcut(_translate("MainWindow", "Ctrl+Shift+="))
        self.actionTextSubscript.setText(_translate("MainWindow", "subscript"))
        self.actionTextSubscript.setShortcut(_translate("MainWindow", "Ctrl+Shift+-"))
        self.actionTextIncrease.setText(_translate("MainWindow", "increase font"))
        self.actionTextIncrease.setShortcut(_translate("MainWindow", "Ctrl+="))
        self.actionTextDecrease.setText(_translate("MainWindow", "decrease font"))
        self.actionTextDecrease.setShortcut(_translate("MainWindow", "Ctrl+-"))
        self.actionInjectDate.setText(_translate("MainWindow", "date"))
        self.actionInjectDate.setShortcut(_translate("MainWindow", "Meta+Shift+D"))
        self.actionInjectTime.setText(_translate("MainWindow", "time"))
        self.actionInjectTime.setShortcut(_translate("MainWindow", "Meta+Shift+T"))
        self.actionInjectTable.setText(_translate("MainWindow", "table"))
        self.actionInjectTable.setShortcut(_translate("MainWindow", "Alt+Shift+T"))
        self.action_input_view_agenda.setText(_translate("MainWindow", "Agenda View"))
        self.action_input_view_agenda.setShortcut(_translate("MainWindow", "Ctrl+1"))
        self.action_data_view_agenda.setText(_translate("MainWindow", "Agenda Data View"))
        self.action_data_view_agenda.setShortcut(_translate("MainWindow", "Meta+Alt+D"))
        self.actionSunday.setText(_translate("MainWindow", "Sunday"))
        self.actionSunday.setShortcut(_translate("MainWindow", "Meta+Shift+1"))
        self.actionMonday.setText(_translate("MainWindow", "Monday"))
        self.actionMonday.setShortcut(_translate("MainWindow", "Meta+Shift+2"))
        self.actionTuesday.setText(_translate("MainWindow", "Tuesday"))
        self.actionTuesday.setShortcut(_translate("MainWindow", "Meta+Shift+3"))
        self.actionWednesday.setText(_translate("MainWindow", "Wednesday"))
        self.actionWednesday.setShortcut(_translate("MainWindow", "Meta+Shift+4"))
        self.actionThursday.setText(_translate("MainWindow", "Thursday"))
        self.actionThursday.setShortcut(_translate("MainWindow", "Meta+Shift+5"))
        self.actionFriday.setText(_translate("MainWindow", "Friday"))
        self.actionFriday.setShortcut(_translate("MainWindow", "Meta+Shift+6"))
        self.actionSaturday.setText(_translate("MainWindow", "Saturday"))
        self.actionSaturday.setShortcut(_translate("MainWindow", "Meta+Shift+7"))
        self.actionToggleWeekBar.setText(_translate("MainWindow", "Toggle Week Bar"))
        self.actionToggleWeekBar.setShortcut(_translate("MainWindow", "Meta+Shift+W"))
        self.actionAgendaSmall.setText(_translate("MainWindow", "Window Size Small"))
        self.actionAgendaSmall.setShortcut(_translate("MainWindow", "Shift+PgDown"))
        self.actionAgendaMedium.setText(_translate("MainWindow", "Window Size Medium"))
        self.actionAgendaMedium.setShortcut(_translate("MainWindow", "Meta+Del"))
        self.actionAgendaLarge.setText(_translate("MainWindow", "Window Size Large"))
        self.actionAgendaLarge.setShortcut(_translate("MainWindow", "Shift+PgUp"))
